{"version":3,"sources":["logo.jpg","components/remote/TableRemote.js","data/colClient.js","model/PageParams.js","service/clientService.js","actions/clientActions.js","constants/clientConstants.js","modal/DeleteModal.js","service/procedureService.js","data/formatter.js","modal/UpdateModal.js","data/selectOptions.js","components/Clients.js","data/colMaster.js","service/masterService.js","actions/masterActions.js","constants/masterConstants.js","components/Masters.js","data/colClientSlot.js","service/timeSlotService.js","components/HistoryClients.js","service/hairService.js","data/colChangeSlot.js","components/HistoryChangeSlot.js","modal/TimeSlotModal.js","actions/timeSlotActions.js","constants/timeSlotConstants.js","components/TimeTable.js","data/colProduct.js","modal/ProductModal.js","service/productService.js","components/Products.js","service/expenseService.js","actions/expenseActions.js","constants/expenseConstants.js","modal/ExpenseModal.js","service/reportService.js","components/Expenses.js","data/colProductBalance.js","service/productBlanceService.js","service/balanceService.js","modal/BalanceModal.js","components/Balance.js","service/dashboardService.js","components/Dashboard.js","service/userService.js","components/LoginPage.js","route/PrivateRoute.js","model/containers.js","data/colProcedure.js","modal/ProcedureModal.js","components/Procedures.js","data/colHair.js","data/colHairCategory.js","components/Directory.js","service/saleService.js","actions/saleActions.js","constants/saleConstants.js","modal/SaleModal.js","components/Sales.js","service/incomingService.js","constants/incomingConstants.js","actions/incomingActions.js","modal/IncomingModal.js","components/Incoming.js","service/additionalIncomeService.js","actions/additionalIncomeActions.js","constants/additionalIncomeConstants.js","modal/AdditionalIncomeModal.js","components/AdditionalIncome.js","App.js","serviceWorker.js","reducer/rootReducer.js","reducer/masterReducer.js","reducer/clientReducer.js","reducer/timeSlotReducer.js","reducer/expenseReducer.js","reducer/saleReducer.js","reducer/incomingReducer.js","reducer/additionalIncomeReducer.js","index.js","store.js"],"names":["module","exports","__webpack_require__","p","TableRemote","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOnSelect","row","setState","select","state","undefined","bind","assertThisInitialized","removeEntity","updateEntity","createEntity","remove","id","update","create","selectRow","mode","clickToSelect","hideSelectColumn","bgColor","onSelect","react_default","a","createElement","className","onClick","buttonCreateTitle","buttonEditTitle","isExport","export","lib_default","remote","keyField","data","columns","filter","filterFactory","pagination","paginationFactory","page","sizePerPage","totalSize","onTableChange","Component","colClient","dataField","text","sort","formatter","cell","person","phone","substring","PageParams","size","sortField","sortOrder","filters","sendRequest","entity","method","options","headers","Headers","content-type","body","JSON","stringify","fetch","then","handleErrors","res","response","ok","Error","statusText","getClientsAction","params","dispatch","json","val","getClients","clients","type","payload","DeleteModal","refused","close","accept","index_es","open","closeOnOverlayClick","showCloseIcon","onClose","closeOnEsc","center","getProcedures","typeMasterFormatter","typeMAsterWorkingDayFormatter","NumberFormatCustomPhone","inputRef","onChange","other","objectWithoutProperties","number_format_default","assign","getInputRef","format","mask","onValueChange","values","target","value","thousandSeparator","prefix","UpdateModal","clear","submit","name","length","procedures","handleChange","event","defineProperty","handleChangePerson","objectSpread","handleChangeTypeMaster","newValue","selectType","handleChangeWorkingDay","workingDay","selectWorkingDay","handleChangeProcedures","selectedProcedures","map","option","procedure","handleChangeDate","startDateWork","mail","description","minPrice","maxPrice","submitProcedure","optionProcedures","Date","label","moment","unix","toDate","field","classes","container","FormControl_default","formControl","error","validate","aria-describedby","InputLabel_default","htmlFor","Input_default","FormHelperText_default","inputComponent","DayPickerInput_default","placeholder","parseDate","onDayChange","formatDate","dayPickerProps","locale","localeUtils","MomentLocaleUtils","validateState","react_select_esm","isMulti","closeMenuOnSelect","validateProcedures","withStyles","theme","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","marginTop","width","formControlServices","Clients","onCloseDeleteModal","openDelete","onCloseUpdateModal","openUpdate","onCloseCreateModal","openCreate","handleTableChange","_ref","clientActions","removeClient","onOpenDeleteModal","updateClient","onOpenUpdateModal","createClient","onOpenCreateModal","_this2","client","number","_this3","clientId","_this4","remote_TableRemote","content","totalElements","modal_DeleteModal","modal_UpdateModal","connect","clientReducer","bindActionCreators","colMaster","toLocaleDateString","getMasters","getAllMasters","getMastersByFiO","getMastersAction","masters","Masters","masterActions","removeMaster","updateMaster","createMaster","master","masterReducer","colClientSlot","toLocaleString","status","getTimeSlotsByDate","start","end","createTimeSlot","HistoryClients","slots","expandRow","renderer","hairCountExtension","concat","hairWeight","hairCountRemoval","expandableRow","getAllHairCategories","getAllHairs","colChangeSlot","HistoryChangeSlot","changes","getOptionMastersByFIO","_callee","search","loadedOptions","cachedOptions","regenerator_default","wrap","_context","prev","next","sent","d","abrupt","hasMore","stop","NumberFormatCustom","getClientName","getClientPhone","renderClient","renderSectionTitle","section","title","getSectionClients","TimeSlotModal","delete","menu","selectClient","selectClientName","selectClientPhone","replace","selectMaster","date","some","hairType","selectedHair","clientDescription","startDate","setHours","startHour","setMinutes","startMinutes","endDate","endHour","endMinutes","startSlot","endSlot","allPrice","masterWorkPrice","hair","resp","handleInputMasterChange","selectMasterName","handleChangeStartHour","handleChangeStartMinutes","handleChangeEndHour","handleChangeEndMinutes","handleChangeAndRecountSum","_this$setState2","allSum","masterWorkSum","hairsCategory","hairCategory","masterType","forEach","price","onClientsFetchRequestedByName","onClientsFetchRequestedByPhone","_ref2","onClientsClearRequested","onChangeClientName","_ref3","onChangeClientPhone","_ref4","onClientSelected","_ref5","suggestion","handleChangeHair","selectProductByDescription","optionHairs","setStatus","hairs","minLength","maxLength","timeSlot","getHours","getMinutes","toString","inputClientNameProps","inputClientPhoneProps","href","setMenu","components_HistoryChangeSlot","components_HistoryClients","dist_default","suggestions","multiSection","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","getSectionSuggestions","inputProps","onSuggestionSelected","TextField_default","InputLabelProps","shrink","fullWidth","react_select_async_paginate_lib_default","loadOptions","formControlHairs","InputProps","getTimeSlotsByDateAction","timeSlots","TimeTable","onCloseTimeSlotModal","setTimeSlots","startWeek","endWeek","onSelectEvent","onOpenTimeSlotModal","resources","find","resource","resourceId","handleChangeAddMaster","addMasterSelect","startOf","endOf","openAddMaster","addMasterOptions","saveTimeSlot","onNavigate","openModalMasterToGraph","closeModalMasterToGraph","addMasterToGraph","location","substr","newProps","evants","allMastersByWorkDay","mastersWorkDay","allMastersByDayOff","mastersWorkOff","view","setSeconds","endFormat","push","week","dow","localizer","BigCalendar","momentLocalizer","react_big_calendar_lib_default","events","startAccessor","endAccessor","selectable","defaultView","Views","DAY","min","max","views","day","step","toolbar","timeslots","onSelectSlot","eventPropGetter","isSelected","newStyle","backgroundColor","borderRadius","border","style","modal_TimeSlotModal","timeSlotReducer","timeSlotActions","colProduct","ProductModal","product","purchasePrice","sellingPrice","formControlDescription","getProducts","getProductsByDescription","Products","createProduct","updateProduct","modal_ProductModal","getExpensesAction","filterMaster","filterVal","filterProduct","getExpenses","expenses","getOptionExpensesByDescription","_callee2","_context2","ExpenseModal","selectProduct","countProduct","expense","isCreate","createExpense","updateExpense","handleInputProductChange","selectMasterFio","handleChangeCountProduct","Expenses","expenseActions","handleChangeStartDate","handleChangeEndDate","masterOptions","productOptions","products","blob","url","window","URL","createObjectURL","document","download","click","catch","err","console","getExpensesReport","colExpense","cellContent","selectFilter","modal_ExpenseModal","expenseReducer","colProductBalance","getAllProductsBalance","createIncoming","BalanceModal","incoming","Balance","modal_BalanceModal","getStatisticMastersReport","reportType","masterId","Dashboard","report","pageSize","set","hour","minute","second","millisecond","handleChangeReport","all","react_table_es","showPagination","userService","login","password","requestOptions","Content-Type","handleResponse","user","authdata","btoa","localStorage","setItem","logout","removeItem","parse","message","Promise","reject","LoginPage","username","submitted","loading","handleSubmit","e","_this$setState","_e$target","preventDefault","_this$state","from","pathname","history","log","_this$state2","onSubmit","disabled","React","PrivateRoute","component","rest","Route","render","getItem","Redirect","to","styled","div","_templateObject","_templateObject2","_templateObject3","Title","_templateObject4","colProcedure","ProcedureModal","service","Procedures","createProcedure","updateProcedure","modal_ProcedureModal","colHair","colHairCategory","typeHairFormatter","Directory","getSalesAction","getSales","sales","SaleModal","sale","cost","createSale","updateSale","Sales","saleActions","colSale","modal_SaleModal","saleReducer","getIncomingAction","getIncomings","getOptionIncomingByDescription","IncomingModal","updateIncoming","Incoming","incomingActions","getIncomingReport","colIncoming","modal_IncomingModal","incomingReducer","getAdditionalIncomesAction","getAdditionalIncomes","incomes","AdditionalIncomeModal","sum","additionalIncome","createAdditionalIncome","updateAdditionalIncome","handleChangeSum","AdditionalIncome","additionalIncomesActions","getAdditionalIncomingReport","colAdditionalIncome","modal_AdditionalIncomeModal","additionalIncomeReducer","App","selectedPath","MemoryRouter","Fragment","react_sidenav_lib_default","defaultExpanded","selected","reload","Nav","defaultSelected","src","logo","entry_default","react_sidenav_lib","eventKey","fontSize","path","PrivateRoute_PrivateRoute","exact","Timetable","Boolean","hostname","match","combineReducers","arguments","action","allMasters","ReactDOM","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1422133b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.10b1bb98.jpg\";","import React, {Component} from 'react';\r\nimport '../../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\n\r\nclass TableRemote extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            select: undefined\r\n        };\r\n        this.handleOnSelect = this.handleOnSelect.bind(this);\r\n        this.removeEntity = this.removeEntity.bind(this);\r\n        this.updateEntity = this.updateEntity.bind(this);\r\n        this.createEntity = this.createEntity.bind(this);\r\n    }\r\n\r\n    handleOnSelect = (row) => {\r\n        this.setState({\r\n            select : row\r\n        });\r\n    };\r\n\r\n    removeEntity() {\r\n        this.props.remove(this.state.select.id);\r\n        this.setState({\r\n            select: undefined\r\n        })\r\n    };\r\n\r\n    updateEntity() {\r\n        this.props.update(this.state.select);\r\n        this.setState({\r\n            select: undefined\r\n        })\r\n    };\r\n\r\n    createEntity() {\r\n        this.props.create();\r\n    };\r\n\r\n    render() {\r\n        const selectRow = {\r\n            mode: 'radio',\r\n            clickToSelect: true,\r\n            hideSelectColumn: true,\r\n            bgColor: '#00BFFF',\r\n            onSelect: this.handleOnSelect,\r\n        };\r\n        return (\r\n            <div>\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.createEntity } className=\"btn btn-primary\">\r\n                        {this.props.buttonCreateTitle}\r\n                    </button>\r\n                    { this.state.select ? <button onClick = { this.updateEntity } className=\"btn btn-primary\">\r\n                        {this.props.buttonEditTitle}\r\n                    </button>: null }\r\n                    { this.props.isExport ? <button onClick = { this.props.export } className=\"btn btn-primary\">\r\n                        Выгрузить\r\n                    </button>: null }\r\n                </div>\r\n                <hr/>\r\n                <BootstrapTable\r\n                    remote\r\n                    keyField=\"id\"\r\n                    data={this.props.data}\r\n                    columns={this.props.columns}\r\n                    filter={filterFactory()}\r\n                    selectRow={ selectRow }\r\n                    pagination={paginationFactory({\r\n                        page: this.props.page,\r\n                        sizePerPage: this.props.sizePerPage,\r\n                        totalSize: this.props.totalSize\r\n                    })}\r\n                    onTableChange={this.props.onTableChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableRemote;\r\n","import React from 'react';\r\n\r\nfunction phoneFormatter(cell, row) {\r\n    if (row.person.phone) {\r\n        let phone = '+7 (' + row.person.phone.substring(0,3) + ') '\r\n            + row.person.phone.substring(3, 6) + '-'\r\n            + row.person.phone.substring(6, 8) + '-'\r\n            + row.person.phone.substring(8, 10);\r\n        return (\r\n            <span>\r\n                {phone}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <span>$ { cell } NTD</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'person.name',\r\n        text: 'Имя',\r\n        sort: true\r\n    },\r\n    {\r\n        dataField: 'person.phone',\r\n        text: 'Телефон',\r\n        sort: true,\r\n        formatter: phoneFormatter\r\n    },\r\n    {\r\n        dataField: 'person.mail',\r\n        text: 'Почта',\r\n        sort: true\r\n    },\r\n    {\r\n        dataField: 'description',\r\n        text: 'Описание',\r\n        sort: true\r\n    }\r\n]","export default class PageParams {\r\n    page;\r\n    size;\r\n    sortField;\r\n    sortOrder;\r\n    filters;\r\n\r\n    constructor(page, size, sortField, sortOrder, filters) {\r\n        this.page = page;\r\n        this.size = size;\r\n        this.sortField = sortField;\r\n        this.sortOrder = sortOrder;\r\n        this.filters = filters;\r\n    }\r\n}","export function getClients(params) {\r\n    return fetch(\"http://localhost:8080/api/clients?page=\" + params.page + \"&size=\" + params.size)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getClientsByFiO(name) {\r\n    return fetch(\"http://localhost:8080/api/clients/name/\" + name)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getClientsByPhone(filter) {\r\n    return fetch(\"http://localhost:8080/api/clients/phone/\" + filter)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function removeClient(clientId) {\r\n    return fetch(\"http://localhost:8080/api/client/\" + clientId, {method: \"DELETE\"})\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nexport function updateClient(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createClient(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(\"http://localhost:8080/api/client\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_CLIENTS} from \"../constants/clientConstants\";\nimport {getClients} from \"../service/clientService\";\n\nexport const getClientsAction = (params) => dispatch => {\n    getClients(params).then(clients => {\n        dispatch({\n            type: GET_CLIENTS,\n            payload: clients\n        })\n    });\n};","export const GET_CLIENTS = \"GET_CLIENTS\";","import React, {Component} from 'react';\nimport '../App.css';\nimport Modal from 'react-responsive-modal';\n\nclass DeleteModal extends Component {\n\n    constructor() {\n        super();\n        this.refused = this.refused.bind(this);\n        this.accept = this.accept.bind(this);\n    }\n\n    refused = () => {\n        this.props.close();\n    };\n\n    accept = () => {\n        this.props.accept();\n    };\n\n    render() {\n        return (\n            <div>\n                <Modal open={this.props.open}\n                       closeOnOverlayClick={false}\n                       showCloseIcon={false}\n                       onClose={this.refused}\n                       closeOnEsc={false} center={false}>\n                    <h2>Вы действительно хотите удалить {this.props.entity}?</h2>\n                    <div className=\"button-group\">\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\n                            Да\n                        </button>\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\n                            Нет\n                        </button>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default DeleteModal;\n","export function getProcedures() {\r\n    return fetch(\"http://localhost:8080/api/procedures\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function createProcedure(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nexport function updateProcedure(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(\"http://localhost:8080/api/procedure\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","export function typeMasterFormatter(cell) {\r\n    switch (cell) {\r\n        case 'TOP_LEADER':\r\n            return \"Руководитель Топ мастер\";\r\n        case 'TOP':\r\n            return \"Топ мастер\";\r\n        case 'MIDDLE_PLUS':\r\n            return \"Стандарт плюс мастер\";\r\n        case 'MIDDLE':\r\n            return \"Стандартный мастер\";\r\n        case 'START':\r\n            return \"Начинающий мастер\";\r\n        case 'SUPPORT':\r\n            return \"Помощник\";\r\n        case 'TOP_COLORIST':\r\n            return \"Топ колорист\";\r\n        case 'COLORIST':\r\n            return \"Колорист\";\r\n        case 'CARE_MASTER':\r\n            return \"Мастер по уходовым процедурам\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nexport function typeHairFormatter(cell) {\r\n    switch (cell) {\r\n        case 'HAIR_EXTENSION':\r\n            return \"Наращивание волос\";\r\n        case 'HAIR_REMOVAL':\r\n            return \"Снятие волос\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nexport function typeMAsterWorkingDayFormatter(cell) {\r\n    switch (cell) {\r\n        case '$2X2':\r\n            return \"2 на 2\";\r\n        case '$5X2':\r\n            return \"5 на 2\";\r\n        case '$4X2':\r\n            return \"4 на 2\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport NumberFormat from 'react-number-format';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from 'react-select';\r\nimport {getProcedures} from \"../service/procedureService\";\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport {typeMasterFormatter, typeMAsterWorkingDayFormatter} from \"../data/formatter\";\r\nimport moment from \"moment/moment\";\r\nimport {masterTypeOptions, masterWorkOptions} from \"../data/selectOptions\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControlServices: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    },\r\n});\r\n\r\nfunction NumberFormatCustomPhone(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            format=\"+7 (###) ###-####\" mask=\"_\"\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator\r\n            prefix=\"$\"\r\n        />\r\n    );\r\n}\r\n\r\nclass UpdateModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            person: {\r\n                phone: '',\r\n                name:'',\r\n                mail:''\r\n            },\r\n            procedure: {\r\n                description: '',\r\n                minPrice: 0,\r\n                maxPrice: 0\r\n            },\r\n            type: '',\r\n            selectType: undefined,\r\n            procedures: [],\r\n            submit: false,\r\n            submitProcedure: false,\r\n            selectedProcedures: [],\r\n            optionProcedures: [],\r\n            startDateWork: new Date(),\r\n            workingDay: '',\r\n            selectWorkingDay: undefined\r\n\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangePerson = this.handleChangePerson.bind(this);\r\n\r\n        getProcedures().then(data => {\r\n            let procedures = data.map(procedure => {\r\n                return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n            });\r\n            this.setState({\r\n                optionProcedures: procedures\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            let selectedProcedures = [];\r\n            if (this.props.update.procedures)\r\n                selectedProcedures = this.props.update.procedures.map(procedure => {\r\n                    return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n                });\r\n            let selectType, selectWorkingDay = undefined;\r\n            if (this.props.update.type) {\r\n                selectType = {\r\n                    value: this.props.update.type,\r\n                    label: typeMasterFormatter(this.props.update.type)\r\n                };\r\n\r\n            }\r\n            if (this.props.update.workingDay) {\r\n                selectWorkingDay = {\r\n                    value: this.props.update.workingDay,\r\n                    label: typeMAsterWorkingDayFormatter(this.props.update.workingDay)\r\n                };\r\n            }\r\n            this.setState({\r\n                person: {\r\n                    phone: this.props.update.person.phone ? this.props.update.person.phone : '',\r\n                    name: this.props.update.person.name ? this.props.update.person.name : '',\r\n                    mail: this.props.update.person.mail ? this.props.update.person.mail : '',\r\n                },\r\n                type: this.props.update.type ? this.props.update.type : '',\r\n                selectType: selectType,\r\n                procedures: this.props.update.procedures,\r\n                selectedProcedures: selectedProcedures,\r\n                selectWorkingDay: selectWorkingDay,\r\n                workingDay: this.props.update.workingDay,\r\n                startDateWork: this.props.update.startDateWork ? moment.unix(this.props.update.startDateWork).toDate() : new Date(),\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            person: {\r\n                phone: '',\r\n                name:'',\r\n                mail:''\r\n            },\r\n            type: '',\r\n            procedures:[],\r\n            procedure: {\r\n                description: '',\r\n                minPrice: 0,\r\n                maxPrice: 0\r\n            },\r\n            selectType: undefined,\r\n            submit: false,\r\n            submitProcedure: false,\r\n            selectedProcedures: [],\r\n            startDateWork: new Date(),\r\n            workingDay: '',\r\n            selectWorkingDay: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.person.name\r\n            && this.state.person.phone.length === 10\r\n            && ((this.state.procedures && this.state.procedures.length>0)\r\n                || this.props.entity !== 'мастера')) {\r\n            this.props.accept(this.state);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangePerson = name => event => {\r\n        this.setState({\r\n            person: {\r\n                ...this.state.person,\r\n                [name]: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        if (field === 'phone')\r\n            return this.state.person.phone.length !== 10;\r\n        return (!this.state.person || !this.state.person[field]);\r\n    };\r\n\r\n    validateProcedures() {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state.procedures || this.state.procedures.length === 0);\r\n    }\r\n\r\n    validateState(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    };\r\n\r\n    handleChangeTypeMaster = (newValue) => {\r\n        this.setState({\r\n            type: newValue.value,\r\n            selectType: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeWorkingDay = (newValue) => {\r\n        this.setState({\r\n            workingDay: newValue.value,\r\n            selectWorkingDay: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeProcedures = (selectedProcedures) => {\r\n        let procedures = selectedProcedures.map(option => {\r\n            return option.procedure;\r\n        });\r\n        this.setState({\r\n            selectedProcedures: selectedProcedures,\r\n            procedures: procedures\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            startDateWork: newValue\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className=\"modal-div\">\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    { this.props.update ? <h2>Редактирование {this.props.entity}</h2>: null }\r\n                    { !this.props.update ? <h2>Создание {this.props.entity}</h2>: null }\r\n                    <div className={classes.container}>\r\n                        <FormControl className={classes.formControl} error={this.validate('name')} aria-describedby=\"name-error-text\">\r\n                            <InputLabel htmlFor=\"name\">Имя</InputLabel>\r\n                            <Input id=\"name\" value={this.state.person.name} onChange={this.handleChangePerson('name')} />\r\n                            { this.validate('name') ? <FormHelperText id=\"name-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl} error={this.validate('phone')} aria-describedby=\"phone-error-text\">\r\n                            <InputLabel htmlFor=\"phone\">Телефон</InputLabel>\r\n                            <Input id=\"phone\" value={this.state.person.phone} inputComponent={NumberFormatCustomPhone} onChange={this.handleChangePerson('phone')} />\r\n                            { this.validate('phone') ? <FormHelperText id=\"phone-error-text\">Телефон введен неверно</FormHelperText>: null }\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl} error={this.validate('mail')} aria-describedby=\"mail-error-text\">\r\n                            <InputLabel htmlFor=\"mail\">Почта</InputLabel>\r\n                            <Input id=\"mail\" value={this.state.person.mail} onChange={this.handleChangePerson('mail')} />\r\n                        </FormControl>\r\n                        { this.props.entity === 'клиента' ? <FormControl className={classes.formControl} error={this.validate('description')} aria-describedby=\"description-error-text\">\r\n                            <InputLabel htmlFor=\"type\">Описание</InputLabel>\r\n                            <Input id=\"description\" value={this.state.description} onChange={this.handleChange('description')} />\r\n                            { this.validate('description') ? <FormHelperText id=\"description-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                        </FormControl> : null}\r\n                    </div>\r\n                    { this.props.entity === 'мастера' ?  <hr/> : null}\r\n                    { this.props.entity === 'мастера' ? <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Дата начала работы:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                value={this.state.startDateWork}\r\n                                onDayChange={this.handleChangeDate}\r\n                                formatDate={formatDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                }}/>\r\n                            <FormControl className={classes.formControl} error={this.validateState('startDateWork')} aria-describedby=\"startDateWork-error-text\">\r\n                                { this.validateState('startDateWork') ? <FormHelperText id=\"startDateWork-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className=\"col-sm-2\">\r\n                            График работы:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Select\r\n                                value={this.state.selectWorkingDay}\r\n                                options={masterWorkOptions()}\r\n                                placeholder={'Выберите график'}\r\n                                onChange={this.handleChangeWorkingDay}\r\n                            />\r\n                            <FormControl className={classes.formControl} error={this.validateState('workingDay')} aria-describedby=\"workingDay-error-text\">\r\n                                { this.validateState('workingDay') ? <FormHelperText id=\"workingDay-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div> : null}\r\n\r\n                    { this.props.entity === 'мастера' ? <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Категория мастера:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Select\r\n                                value={this.state.selectType}\r\n                                options={masterTypeOptions()}\r\n                                placeholder={'Выберите категорию'}\r\n                                onChange={this.handleChangeTypeMaster}\r\n                            />\r\n                            <FormControl className={classes.formControl} error={this.validateState('type')} aria-describedby=\"type-error-text\">\r\n                                { this.validateState('type') ? <FormHelperText id=\"type-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className=\"col-sm-2\">\r\n                            Услуги мастера:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Select id=\"procedures\"\r\n                                    isMulti\r\n                                    closeMenuOnSelect={false}\r\n                                    value={this.state.selectedProcedures}\r\n                                    onChange={this.handleChangeProcedures}\r\n                                    placeholder=\"Выберите услуги\"\r\n                                    options={this.state.optionProcedures}\r\n                            />\r\n                            <FormControl className={classes.formControl} error={this.validateProcedures()} aria-describedby=\"procedures-error-text\">\r\n                                { this.validateProcedures() ? <FormHelperText id=\"procedures-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div> : null}\r\n                    <hr/>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UpdateModal);\r\n","export function reportOptions() {\r\n    return [\r\n        { value: 0, label: 'Отчет по мастерам' },\r\n        { value: 1, label: 'Отчет по прибыли' }\r\n    ];\r\n}\r\n\r\nexport function hourOptions() {\r\n    return [\r\n        { value: 10, label: '10' },\r\n        { value: 11, label: '11' },\r\n        { value: 12, label: '12' },\r\n        { value: 13, label: '13' },\r\n        { value: 14, label: '14' },\r\n        { value: 15, label: '15' },\r\n        { value: 16, label: '16' },\r\n        { value: 17, label: '17' },\r\n        { value: 18, label: '18' },\r\n        { value: 19, label: '19' },\r\n        { value: 20, label: '20' },\r\n        { value: 21, label: '21' },\r\n        { value: 22, label: '22' }\r\n    ];\r\n}\r\n\r\nexport function minuteOptions() {\r\n    return [\r\n        { value: 0, label: '00' },\r\n        { value: 5, label: '05' },\r\n        { value: 10, label: '10' },\r\n        { value: 15, label: '15' },\r\n        { value: 20, label: '20' },\r\n        { value: 25, label: '25' },\r\n        { value: 30, label: '30' },\r\n        { value: 35, label: '35' },\r\n        { value: 40, label: '40' },\r\n        { value: 45, label: '45' },\r\n        { value: 50, label: '50' },\r\n        { value: 55, label: '55' }\r\n    ];\r\n}\r\n\r\nexport function masterTypeOptions() {\r\n    return [\r\n        { value: 'TOP_LEADER', label: 'Руководитель Топ мастер' },\r\n        { value: 'TOP', label: 'Топ мастер' },\r\n        { value: 'MIDDLE_PLUS', label: 'Стандарт плюс мастер' },\r\n        { value: 'MIDDLE', label: 'Стандартный мастер' },\r\n        { value: 'START', label: 'Начинающий мастер' },\r\n        { value: 'SUPPORT', label: 'Помощник' },\r\n        { value: 'TOP_COLORIST', label: 'Топ колорист' },\r\n        { value: 'COLORIST', label: 'Колорист' },\r\n        { value: 'CARE_MASTER', label: 'Мастер по уходовым процедурам' }\r\n    ];\r\n}\r\n\r\nexport function masterWorkOptions() {\r\n    return [\r\n        { value: '$2X2', label: '2 на 2' },\r\n        { value: '$4X2', label: '4 на 2' },\r\n        { value: '$5X2', label: '5 на 2' }\r\n    ];\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport colClient from \"../data/colClient\";\r\nimport PageParams from \"../model/PageParams\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {getClientsAction} from \"../actions/clientActions\";\r\nimport {createClient, removeClient, updateClient} from \"../service/clientService\";\r\nimport DeleteModal from \"../modal/DeleteModal\";\r\nimport UpdateModal from \"../modal/UpdateModal\";\r\n\r\nclass Clients extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openDelete: false,\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.removeClient = this.removeClient.bind(this);\r\n        this.onOpenDeleteModal = this.onOpenDeleteModal.bind(this);\r\n        this.onCloseDeleteModal = this.onCloseDeleteModal.bind(this);\r\n\r\n        this.updateClient = this.updateClient.bind(this);\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.createClient = this.createClient.bind(this);\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.props.clientActions(new PageParams(0, 10));\r\n    }\r\n\r\n    onOpenDeleteModal (row) {\r\n        this.setState({\r\n            openDelete: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n        });\r\n    };\r\n\r\n    onCloseDeleteModal = () => {\r\n        this.setState({\r\n            openDelete: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {page, sizePerPage}) => {\r\n        this.props.clientActions(new PageParams(page - 1, sizePerPage));\r\n    };\r\n\r\n    updateClient(entity) {\r\n        let client = this.state.row;\r\n        client.person = entity.person;\r\n        client.description = entity.description;\r\n        updateClient(client).then(() => {\r\n            this.props.clientActions(new PageParams(this.props.clients.number, this.props.clients.size));\r\n            this.setState({\r\n                openUpdate: false,\r\n                row: undefined\r\n            });\r\n        });\r\n    };\r\n\r\n    createClient(entity) {\r\n        createClient(entity).then(() => {\r\n            this.props.clientActions(new PageParams(this.props.clients.number, this.props.clients.size));\r\n            this.setState({\r\n                openCreate: false\r\n            });\r\n        });\r\n    };\r\n\r\n    removeClient(id) {\r\n        removeClient(id).then(() => {\r\n            this.props.clientActions(new PageParams(this.props.clients.number, this.props.clients.size));\r\n            this.setState({\r\n                openDelete: false,\r\n                row: undefined\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                {this.props.clients ? <TableRemote data={this.props.clients.content}\r\n                                                   page={this.props.clients.number + 1}\r\n                                                   columns={colClient}\r\n                                                   entity=\"клиента\"\r\n                                                   buttonCreateTitle='Создание нового клиента'\r\n                                                   buttonEditTitle='Изменение клиента'\r\n                                                   remove={this.onOpenDeleteModal}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   sizePerPage={this.props.clients.size}\r\n                                                   totalSize={this.props.clients.totalElements}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n                    : null}\r\n                <DeleteModal accept={this.removeClient}\r\n                             open={this.state.openDelete}\r\n                             close={this.onCloseDeleteModal}\r\n                             entity=\"клиента\" />\r\n\r\n                {this.state.row ? <UpdateModal accept={this.updateClient}\r\n                                               open={this.state.openUpdate}\r\n                                               update={this.state.row}\r\n                                               close={this.onCloseUpdateModal}\r\n                                               entity=\"клиента\" />: null}\r\n\r\n                <UpdateModal accept={this.createClient}\r\n                             open={this.state.openCreate}\r\n                             close={this.onCloseCreateModal}\r\n                             entity=\"клиента\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    clients: state.clientReducer.clients\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        clientActions: bindActionCreators(getClientsAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Clients);\r\n","import React from 'react';\r\nimport {typeMasterFormatter, typeMAsterWorkingDayFormatter} from \"../data/formatter\";\r\nimport moment from 'moment'\r\n\r\nfunction phoneFormatter(cell, row) {\r\n    if (row.person.phone) {\r\n        let phone = '+7 (' + row.person.phone.substring(0,3) + ') '\r\n            + row.person.phone.substring(3, 6) + '-'\r\n            + row.person.phone.substring(6, 8) + '-'\r\n            + row.person.phone.substring(8, 10);\r\n        return (\r\n            <span>\r\n                {phone}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <span>$ { cell } NTD</span>\r\n    );\r\n}\r\n\r\nfunction type(cell) {\r\n    return (\r\n        <span>{typeMasterFormatter(cell)}</span>\r\n    );\r\n}\r\n\r\nfunction workingDay(cell) {\r\n    return (\r\n        <span>{typeMAsterWorkingDayFormatter(cell)}</span>\r\n    );\r\n}\r\n\r\nfunction dateFormatter(cell) {\r\n    return (\r\n        <span>{moment.unix(cell).toDate().toLocaleDateString()}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'person.name',\r\n        text: 'Имя'\r\n    },\r\n    {\r\n        dataField: 'person.phone',\r\n        text: 'Телефон',\r\n        formatter: phoneFormatter\r\n    },\r\n    {\r\n        dataField: 'person.mail',\r\n        text: 'Почта'\r\n    },\r\n    {\r\n        dataField: 'type',\r\n        text: 'Категория',\r\n        formatter: type\r\n    },\r\n    {\r\n        dataField: 'startDateWork',\r\n        text: 'Дата начала работы',\r\n        formatter: dateFormatter\r\n    },\r\n    {\r\n        dataField: 'workingDay',\r\n        text: 'График',\r\n        formatter: workingDay\r\n    }\r\n]","export function getMasters(params) {\r\n    return fetch(\"http://localhost:8080/api/masters?page=\" + params.page + \"&size=\" + params.size)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getAllMasters() {\r\n    return fetch(\"http://localhost:8080/api/allMasters\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function allMastersByWorkDay(date) {\r\n    return fetch(\"http://localhost:8080/api/allMastersByWorkDay?date=\" + date)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function allMastersByDayOff(date) {\r\n    return fetch(\"http://localhost:8080/api/allMastersByDayOff?date=\" + date)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getMastersByFiO(name) {\r\n    return fetch(\"http://localhost:8080/api/masters/name/\" + name)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function removeMaster(master) {\r\n    return fetch(\"http://localhost:8080/api/master/\" + master, {method: \"DELETE\"})\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nexport function updateMaster(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createMaster(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(\"http://localhost:8080/api/master\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_ALL_MASTERS, GET_MASTERS} from \"../constants/masterConstants\";\nimport {getAllMasters, getMasters} from \"../service/masterService\";\n\nexport const getMastersAction = (params) => dispatch => {\n    getMasters(params).then(masters => {\n        dispatch({\n            type: GET_MASTERS,\n            payload: masters\n        })\n    });\n};\n\nexport const getAllMastersAction = () => dispatch => {\n    getAllMasters().then(masters => {\n        dispatch({\n            type: GET_ALL_MASTERS,\n            payload: masters\n        })\n    });\n};","export const GET_MASTERS = \"GET_MASTERS\";\r\nexport const GET_ALL_MASTERS = \"GET_ALL_MASTERS\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport colMaster from \"../data/colMaster\";\r\nimport {connect} from 'react-redux';\r\nimport {getMastersAction} from \"../actions/masterActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport {createMaster, removeMaster, updateMaster} from \"../service/masterService\";\r\nimport DeleteModal from \"../modal/DeleteModal\";\r\nimport UpdateModal from \"../modal/UpdateModal\";\r\n\r\nclass Masters extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openDelete: false,\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.removeMaster = this.removeMaster.bind(this);\r\n        this.onOpenDeleteModal = this.onOpenDeleteModal.bind(this);\r\n        this.onCloseDeleteModal = this.onCloseDeleteModal.bind(this);\r\n\r\n        this.updateMaster = this.updateMaster.bind(this);\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.createMaster = this.createMaster.bind(this);\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.props.masterActions(new PageParams(0, 10));\r\n    }\r\n\r\n    onOpenDeleteModal (row) {\r\n        this.setState({\r\n            openDelete: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n        });\r\n    };\r\n\r\n    onCloseDeleteModal = () => {\r\n        this.setState({\r\n            openDelete: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {page, sizePerPage}) => {\r\n        this.props.masterActions(new PageParams(page - 1, sizePerPage));\r\n    };\r\n\r\n    removeMaster() {\r\n        removeMaster(this.state.row.id).then(() => {\r\n            this.props.masterActions(new PageParams(this.props.masters.number, this.props.masters.size));\r\n            this.setState({\r\n                openDelete: false,\r\n                row: undefined\r\n            });\r\n        });\r\n    };\r\n\r\n    updateMaster(entity) {\r\n        let master = this.state.row;\r\n        master.person = entity.person;\r\n        master.procedures = entity.procedures;\r\n        master.type = entity.type;\r\n        master.workingDay = entity.workingDay;\r\n        master.startDateWork = entity.startDateWork;\r\n        updateMaster(master).then(() => {\r\n            this.props.masterActions(new PageParams(this.props.masters.number, this.props.masters.size));\r\n            this.setState({\r\n                openUpdate: false,\r\n                row: undefined\r\n            });\r\n        });\r\n    };\r\n\r\n    createMaster(entity) {\r\n        createMaster(entity).then(() => {\r\n            this.props.masterActions(new PageParams(this.props.masters.number, this.props.masters.size));\r\n            this.setState({\r\n                openCreate: false\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                {this.props.masters ? <TableRemote data={this.props.masters.content}\r\n                                                   page={this.props.masters.number + 1}\r\n                                                   columns={colMaster}\r\n                                                   entity=\"мастера\"\r\n                                                   buttonCreateTitle='Создание нового мастера'\r\n                                                   buttonEditTitle='Изменение мастера'\r\n                                                   sizePerPage={this.props.masters.size}\r\n                                                   remove={this.onOpenDeleteModal}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   totalSize={this.props.masters.totalElements}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n                    : null}\r\n                <DeleteModal accept={this.removeMaster}\r\n                             open={this.state.openDelete}\r\n                             close={this.onCloseDeleteModal}\r\n                             entity=\"мастера\" />\r\n\r\n                {this.state.row ? <UpdateModal accept={this.updateMaster}\r\n                             open={this.state.openUpdate}\r\n                             update={this.state.row}\r\n                             close={this.onCloseUpdateModal}\r\n                             entity=\"мастера\" />: null}\r\n\r\n                <UpdateModal accept={this.createMaster}\r\n                             open={this.state.openCreate}\r\n                             close={this.onCloseCreateModal}\r\n                             entity=\"мастера\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    masters: state.masterReducer.masters\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        masterActions: bindActionCreators(getMastersAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Masters);\r\n","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nfunction priceFormatter(cell) {\r\n    return (\r\n        <span>{cell.toLocaleString()} руб.</span>\r\n    );\r\n}\r\n\r\nfunction dateFormatter(cell) {\r\n    return (\r\n        <span>{moment.unix(cell).toDate().toLocaleDateString()}</span>\r\n    );\r\n}\r\n\r\nfunction statusFormatter(cell) {\r\n    let status ='';\r\n    if (cell === 'NEW') status = 'Ожидание клиента';\r\n    if (cell === 'DONE') status = 'Клиент пришел';\r\n    if (cell === 'CANCELED') status = 'Клиент не пришел';\r\n    if (cell === 'READY') status = 'Клиент подтвердил';\r\n    return (\r\n        <span>{status}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'master.person.name',\r\n        text: 'Мастер'\r\n    },\r\n    {\r\n        dataField: 'allPrice',\r\n        text: 'Сумма',\r\n        formatter: priceFormatter\r\n    },\r\n    {\r\n        dataField: 'startSlot',\r\n        text: 'Дата',\r\n        formatter: dateFormatter\r\n    },\r\n    {\r\n        dataField: 'status',\r\n        text: 'Статус заказа',\r\n        formatter: statusFormatter\r\n    }\r\n]","export function getTimeSlotsByDate(start, end) {\r\n    return fetch(\"http://localhost:8080/api/timeSlotsByDate?start=\" + start +\r\n        \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getTimeSlotsByClientId(clientId) {\r\n    return fetch(\"http://localhost:8080/api/timeSlotsByClientId?clientId=\" + clientId)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function createTimeSlot(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nexport function deleteTimeSlot(id) {\r\n    return fetch(\"http://localhost:8080/api/timeSlot/\" + id, {\r\n        method: 'delete'\r\n    }).then(res => res);\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(\"http://localhost:8080/api/timeSlot\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colClientSlot from \"../data/colClientSlot\";\r\nimport {getTimeSlotsByClientId} from \"../service/timeSlotService\";\r\n\r\nclass HistoryClients extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.client) {\r\n            getTimeSlotsByClientId(this.props.client.id).then(slots => {\r\n                this.setState({\r\n                    data: slots\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const expandRow = {\r\n            renderer: row => (\r\n                <div>\r\n                    {row.hairCountExtension>0 ? <p>{ `Количество наращенных прядей: ${row.hairCountExtension}` }</p> : null}\r\n                    {row.hairWeight>0 ? <p>{ `Вес наращенных волос: ${row.hairWeight}` }</p> : null}\r\n                    {row.hairCountRemoval>0 ? <p>{ `Количество сгятых прядей: ${row.hairCountRemoval}` }</p> : null}\r\n                </div>\r\n            )\r\n        };\r\n        return (\r\n            <div className=\"main-div\">\r\n                <BootstrapTable\r\n                    keyField=\"id\"\r\n                    expandableRow={true}\r\n                    expandRow={ expandRow }\r\n                    data={this.state.data}\r\n                    columns={colClientSlot}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryClients;\r\n","export function getAllHairCategories() {\r\n    return fetch(\"http://localhost:8080/api/getAllHairCategories\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getAllHairs() {\r\n    return fetch(\"http://localhost:8080/api/getAllHairs\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nfunction dateFormatter(cell) {\r\n    return (\r\n        <span>{moment.unix(cell).toDate().toLocaleDateString()}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'date',\r\n        text: 'Дата',\r\n        formatter: dateFormatter\r\n    },\r\n    {\r\n        dataField: 'change',\r\n        text: 'Изменение'\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colChangeSlot from \"../data/colChangeSlot\";\r\n\r\nclass HistoryChangeSlot extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <BootstrapTable\r\n                    keyField=\"date\"\r\n                    data={this.props.changes}\r\n                    columns={colChangeSlot}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryChangeSlot;\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport '../react-day-picker.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getClientsByFiO, getClientsByPhone} from \"../service/clientService\";\r\nimport {getMasters, getMastersByFiO} from \"../service/masterService\";\r\nimport PageParams from \"../model/PageParams\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from 'react-select';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport NumberFormat from 'react-number-format';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport MomentLocaleUtils, {parseDate} from 'react-day-picker/moment';\r\nimport 'moment/locale/ru';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport HistoryClients from \"../components/HistoryClients\";\r\nimport {getAllHairCategories, getAllHairs} from \"../service/hairService\";\r\nimport HistoryChangeSlot from \"../components/HistoryChangeSlot\";\r\nimport {hourOptions, minuteOptions} from \"../data/selectOptions\";\r\nimport {typeMasterFormatter} from \"../data/formatter\";\r\nimport {createTimeSlot, deleteTimeSlot} from \"../service/timeSlotService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop: 16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        display: 'flex'\r\n    },\r\n    formControlHairs: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 250\r\n    }\r\n});\r\n\r\nasync function getOptionMastersByFIO(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getMasters(new PageParams(0, 100));\r\n    else response = await getMastersByFiO(search);\r\n    let cachedOptions = response.content.map((d) => ({\r\n        value: d.id,\r\n        label: d.person.name + \" - \" + typeMasterFormatter(d.type),\r\n        master: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator={' '}\r\n        />\r\n    );\r\n}\r\n\r\nconst getClientName = client => client.person.name;\r\nconst getClientPhone = client => client.person.phone;\r\n\r\nconst renderClient = client => {\r\n    return (\r\n        <span>{client.person.name}</span>\r\n    );\r\n};\r\n\r\nconst renderSectionTitle = section => {\r\n    return (\r\n        <strong>{section.title}</strong>\r\n    );\r\n};\r\n\r\nconst getSectionClients = section => {\r\n    return section.clients;\r\n};\r\n\r\nclass TimeSlotModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectMaster: undefined,\r\n            selectMasterName: undefined,\r\n            selectClient: undefined,\r\n            selectClientName: '',\r\n            selectClientPhone: '',\r\n            clientDescription: '',\r\n            startHour: { value: 10, label: '10' },\r\n            startMinutes: { value: 0, label: '00' },\r\n            endHour: { value: 10, label: '10' },\r\n            endMinutes: { value: 0, label: '00' },\r\n            date: new Date(),\r\n            id: undefined,\r\n            allPrice: 0,\r\n            masterWorkPrice: 0,\r\n            status: 'NEW',\r\n            value: '',\r\n            clients: [],\r\n            menu:'MAIN',\r\n            selectProductByDescription: undefined,\r\n            optionHairs: [],\r\n            selectedHair: undefined,\r\n            hairWeight: 0,\r\n            hairCountExtension: 0,\r\n            hairCountRemoval: 0,\r\n            hairsCategory: [],\r\n            procedures: [],\r\n            submitProcedure: false,\r\n            selectedProcedures: [],\r\n            optionProcedures: []\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.handleInputMasterChange = this.handleInputMasterChange.bind(this);\r\n        this.handleChangeStartHour = this.handleChangeStartHour.bind(this);\r\n        this.handleChangeStartMinutes = this.handleChangeStartMinutes.bind(this);\r\n        this.handleChangeEndHour = this.handleChangeEndHour.bind(this);\r\n        this.handleChangeEndMinutes = this.handleChangeEndMinutes.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeHair = this.handleChangeHair.bind(this);\r\n        this.setStatus = this.setStatus.bind(this);\r\n        this.handleChangeProcedures = this.handleChangeProcedures.bind(this);\r\n\r\n        getAllHairs().then(data => {\r\n            let hairs = data.map(hair => {\r\n                return { value: hair.id, label: \"Волосы \" + hair.minLength + \" - \" + (hair.maxLength !== 0 ? hair.maxLength : \"более\"), hair: hair };\r\n            });\r\n            this.setState({\r\n                optionHairs: hairs\r\n            });\r\n        });\r\n\r\n        getAllHairCategories().then(data => {\r\n            this.setState({\r\n                hairsCategory: data\r\n            })\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let selectMasterName,\r\n            selectMaster,\r\n            selectClient,\r\n            selectClientName = '',\r\n            selectClientPhone = '',\r\n            clientDescription = '',\r\n            status,\r\n            selectedHair,\r\n            procedures = [],\r\n            selectedProcedures = [];\r\n        if (this.props.event.timeSlot) {\r\n            selectedProcedures = this.props.event.timeSlot.procedures.map(procedure => {\r\n                return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n            });\r\n            procedures = this.props.event.timeSlot.procedures;\r\n            selectMasterName = {\r\n                value: this.props.event.timeSlot.master.id,\r\n                label: this.props.event.timeSlot.master.person.name + \" - \" + typeMasterFormatter(this.props.event.timeSlot.master.type),\r\n                master: this.props.event.timeSlot.master\r\n            };\r\n            if (this.props.event.timeSlot.hair)\r\n                selectedHair = {\r\n                    value: this.props.event.timeSlot.hair.id,\r\n                    label: \"Волосы \" + this.props.event.timeSlot.hair.minLength + \" - \" +\r\n                        (this.props.event.timeSlot.hair.maxLength !== 0 ? this.props.event.timeSlot.hair.maxLength : \"более\"),\r\n                    hair: this.props.event.timeSlot.hair\r\n                };\r\n            selectMaster = this.props.event.timeSlot.master ? this.props.event.timeSlot.master : undefined;\r\n            status = this.props.event.timeSlot.status ? this.props.event.timeSlot.status : 'NEW';\r\n            selectClient = this.props.event.timeSlot.client;\r\n            selectClientName = this.props.event.timeSlot.client.person.name;\r\n            clientDescription = this.props.event.timeSlot.client.description ? this.props.event.timeSlot.client.description : '';\r\n\r\n            selectClientPhone = '+7 (' + this.props.event.timeSlot.client.person.phone.substring(0,3) + ') '\r\n                + this.props.event.timeSlot.client.person.phone.substring(3, 6) + ' '\r\n                + this.props.event.timeSlot.client.person.phone.substring(6, 8) + ' '\r\n                + this.props.event.timeSlot.client.person.phone.substring(8, 10);\r\n        } else if (this.props.selectMaster) {\r\n            selectMasterName = {\r\n                value: this.props.selectMaster.master.id,\r\n                label: this.props.selectMaster.master.person.name + \" - \" + typeMasterFormatter(this.props.selectMaster.master.type),\r\n                master: this.props.selectMaster.master\r\n            };\r\n            selectMaster = this.props.selectMaster.master;\r\n        }\r\n        let optionProcedures = selectMaster.procedures.map(procedure => {\r\n            return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n        });\r\n        this.setState({\r\n            date: this.props.event.start,\r\n            id: this.props.event.id,\r\n            allPrice: this.props.event.timeSlot ? this.props.event.timeSlot.allPrice : 0,\r\n            masterWorkPrice: this.props.event.timeSlot ? this.props.event.timeSlot.masterWorkPrice : 0,\r\n            startHour: {\r\n                value: this.props.event.start.getHours(),\r\n                label: this.props.event.start.getHours()\r\n            },\r\n            startMinutes: {\r\n                value: this.props.event.start.getMinutes(),\r\n                label: this.props.event.start.getMinutes().toString().length < 2 ? '0' +\r\n                    this.props.event.start.getMinutes().toString():this.props.event.start.getMinutes()\r\n            },\r\n            endHour: {\r\n                value: this.props.event.end.getHours(),\r\n                label: this.props.event.end.getHours()\r\n            },\r\n            endMinutes: {\r\n                value: this.props.event.end.getMinutes(),\r\n                label: this.props.event.end.getMinutes().toString().length < 2 ? '0' +\r\n                    this.props.event.end.getMinutes().toString():this.props.event.end.getMinutes()\r\n            },\r\n            selectMasterName: selectMasterName,\r\n            selectMaster: selectMaster,\r\n            status: status ? status : 'NEW',\r\n            clientDescription: clientDescription,\r\n            selectClient: selectClient,\r\n            selectClientName: selectClientName,\r\n            selectClientPhone: selectClientPhone,\r\n            menu:'MAIN',\r\n            hairWeight: this.props.event.timeSlot ? this.props.event.timeSlot.hairWeight : 0,\r\n            hairCountExtension: this.props.event.timeSlot ? this.props.event.timeSlot.hairCountExtension : 0,\r\n            hairCountRemoval: this.props.event.timeSlot ? this.props.event.timeSlot.hairCountRemoval : 0,\r\n            selectedHair: selectedHair,\r\n            selectedProcedures: selectedProcedures,\r\n            optionProcedures: optionProcedures,\r\n            procedures: procedures\r\n        });\r\n    }\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    delete = () => {\r\n        deleteTimeSlot(this.state.id).then(() => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true,\r\n            menu: 'MAIN'\r\n        });\r\n\r\n        let client = this.state.selectClient;\r\n\r\n        if (this.state.selectClientName && this.state.selectClientPhone) {\r\n            if (!client)\r\n                client = {\r\n                    person: {\r\n                        name: this.state.selectClientName,\r\n                        phone: this.state.selectClientPhone.substring(2).replace(/[.*+ ?^${}()|[\\]\\\\]/g, \"\"),\r\n                    }\r\n                }\r\n        }\r\n\r\n        if (!client || !this.state.selectMaster || !this.state.date || !this.state.procedures || this.state.procedures.length === 0)\r\n            return false;\r\n\r\n        if (this.state.procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION') && !this.state.selectedHair)\r\n            return false;\r\n\r\n        client.description = this.state.clientDescription;\r\n\r\n        let startDate = new Date(this.state.date);\r\n        startDate.setHours(this.state.startHour.value);\r\n        startDate.setMinutes(this.state.startMinutes.value);\r\n        let endDate = new Date(this.state.date);\r\n        endDate.setHours(this.state.endHour.value);\r\n        endDate.setMinutes(this.state.endMinutes.value);\r\n\r\n        let timeSlot = {\r\n            id: this.state.id,\r\n            client: client,\r\n            master: this.state.selectMaster,\r\n            startSlot: startDate,\r\n            endSlot: endDate,\r\n            allPrice: this.state.allPrice,\r\n            masterWorkPrice: this.state.masterWorkPrice,\r\n            status: this.state.status,\r\n            hairWeight: this.state.hairWeight,\r\n            hairCountExtension: this.state.hairCountExtension,\r\n            hairCountRemoval: this.state.hairCountRemoval,\r\n            procedures: this.state.procedures,\r\n            hair: this.state.selectedHair ? this.state.selectedHair.hair : undefined\r\n        };\r\n        createTimeSlot(timeSlot).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    clear() {\r\n        this.setState({\r\n            selectClient: undefined,\r\n            selectMaster: undefined,\r\n            selectMasterName: undefined,\r\n            selectClientName: '',\r\n            selectClientPhone: '',\r\n            clientDescription: '',\r\n            submit: false,\r\n            startHour: { value: 10, label: '10' },\r\n            startMinutes: { value: 0, label: '00' },\r\n            endHour: { value: 10, label: '10' },\r\n            endMinutes: { value: 0, label: '00' },\r\n            date: new Date(),\r\n            allPrice: 0,\r\n            masterWorkPrice: 0,\r\n            status: 'NEW',\r\n            clients:[],\r\n            menu:'MAIN',\r\n            selectProductByDescription: undefined,\r\n            optionHairs: [],\r\n            selectedHair: undefined,\r\n            hairWeight: 0,\r\n            hairCountExtension: 0,\r\n            hairCountRemoval: 0,\r\n            procedures: [],\r\n            submitProcedure: false,\r\n            selectedProcedures: [],\r\n            optionProcedures: []\r\n        });\r\n    }\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        let procedures = newValue.master.procedures.map(procedure => {\r\n            return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n        });\r\n        this.setState({\r\n            selectMaster: newValue.master,\r\n            selectMasterName: {\r\n                value: newValue.value,\r\n                label: newValue.master.person.name + \" - \" + typeMasterFormatter(newValue.master.type),\r\n                master: newValue.master\r\n            },\r\n            allPrice: 0,\r\n            masterWorkPrice: 0,\r\n            selectedProcedures: [],\r\n            procedures: [],\r\n            selectedHair: undefined,\r\n            hairWeight: 0,\r\n            hairCountExtension: 0,\r\n            hairCountRemoval: 0,\r\n            optionProcedures: procedures\r\n        });\r\n    };\r\n\r\n    handleChangeStartHour = (newValue) => {\r\n        this.setState({\r\n            startHour: newValue\r\n        });\r\n    };\r\n    handleChangeStartMinutes = (newValue) => {\r\n        this.setState({\r\n            startMinutes: newValue\r\n        });\r\n    };\r\n    handleChangeEndHour = (newValue) => {\r\n        this.setState({\r\n            endHour: newValue\r\n        });\r\n    };\r\n    handleChangeEndMinutes = (newValue) => {\r\n        this.setState({\r\n            endMinutes: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeAndRecountSum = name => event => {\r\n        let allSum = 0, masterWorkSum = 0;\r\n        let hairCountExtension = this.state.hairCountExtension;\r\n        let hairCountRemoval = this.state.hairCountRemoval;\r\n        let hairWeight = this.state.hairWeight;\r\n\r\n        if (name==='hairCountExtension') hairCountExtension=event.target.value;\r\n        if (name==='hairWeight') hairWeight=event.target.value;\r\n        if (name==='hairCountRemoval') hairCountRemoval=event.target.value;\r\n\r\n        if (this.state.selectedHair) {\r\n            this.state.hairsCategory.filter(hairCategory => (hairCategory.masterType === this.state.selectMaster.type && hairCategory.hairType === 'HAIR_EXTENSION'))\r\n                .forEach(hairCategory => {\r\n                    allSum = allSum + hairCategory.price * hairCountExtension + this.state.selectedHair.hair.price * hairWeight;\r\n                    masterWorkSum = masterWorkSum + hairCategory.price * hairCountExtension;\r\n                });\r\n        }\r\n        this.state.hairsCategory.filter(hairCategory => hairCategory.hairType === 'HAIR_REMOVAL')\r\n            .forEach(hairCategory => {\r\n                allSum = allSum + hairCategory.price*hairCountRemoval;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*hairCountRemoval;\r\n            });\r\n        this.setState({\r\n            [name]: event.target.value,\r\n            allPrice: allSum,\r\n            masterWorkPrice: masterWorkSum\r\n        });\r\n    };\r\n\r\n    setStatus(status) {\r\n        this.setState({\r\n            status: status\r\n        });\r\n    }\r\n\r\n    setMenu(menu) {\r\n        this.setState({\r\n            menu: menu\r\n        });\r\n    }\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    validateProcedures() {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state.procedures || this.state.procedures.length === 0);\r\n    }\r\n\r\n    onClientsFetchRequestedByName = ({ value }) => {\r\n        if (value && value.length>3) getClientsByFiO(value).then(clients => {\r\n            let options = clients.map(client => {\r\n                return {\r\n                    title: '+7 (' + client.person.phone.substring(0,3) + ') '\r\n                        + client.person.phone.substring(3, 6) + ' '\r\n                        + client.person.phone.substring(6, 8) + ' '\r\n                        + client.person.phone.substring(8, 10),\r\n                    clients: [\r\n                        client\r\n                    ]\r\n                }\r\n            });\r\n            this.setState({\r\n                clients: options\r\n            });\r\n        });\r\n    };\r\n\r\n    onClientsFetchRequestedByPhone = ({ value }) => {\r\n        let phone = '';\r\n        if (value.length<2) phone = value;\r\n        else phone = value.substring(4);\r\n        phone = phone.replace(/[.*-+?^${}()|[\\]\\\\\\s]/g, '');\r\n        phone = phone.substring(0, 10);\r\n        if (phone && phone.length>3) getClientsByPhone(phone).then(clients => {\r\n            let options = clients.map(client => {\r\n                return {\r\n                    title: '+7 (' + client.person.phone.substring(0,3) + ') '\r\n                        + client.person.phone.substring(3, 6) + ' '\r\n                        + client.person.phone.substring(6, 8) + ' '\r\n                        + client.person.phone.substring(8, 10),\r\n                    clients: [\r\n                        client\r\n                    ]\r\n                }\r\n            });\r\n            this.setState({\r\n                clients: options\r\n            });\r\n        });\r\n    };\r\n\r\n    onClientsClearRequested = () => {\r\n        this.setState({\r\n            clients: []\r\n        });\r\n    };\r\n\r\n    onChangeClientName = (event, { newValue }) => {\r\n        this.setState({\r\n            selectClientName: newValue,\r\n            selectClient: undefined,\r\n            clientDescription: ''\r\n        });\r\n    };\r\n\r\n    onChangeClientPhone = (event, { newValue }) => {\r\n        let phone = newValue;\r\n        if (newValue.length === 1) phone = '+7 (' + newValue;\r\n        else if (newValue.length === 7) phone = newValue + \") \";\r\n        else if (newValue.length === 12) phone = newValue + \" \";\r\n        else if (newValue.length === 15) phone = newValue + \" \";\r\n        else if (newValue.length > 18) return false;\r\n        else phone = newValue;\r\n        this.setState({\r\n            selectClientPhone: phone,\r\n            selectClient: undefined,\r\n            clientDescription: ''\r\n        });\r\n    };\r\n\r\n    onClientSelected = (event, { suggestion })  => {\r\n        this.setState({\r\n            selectClient: suggestion,\r\n            selectClientName: suggestion.person.name,\r\n            clientDescription: suggestion.description ? suggestion.description : \"\",\r\n            selectClientPhone: '+7 (' + suggestion.person.phone.substring(0,3) + ') '\r\n                + suggestion.person.phone.substring(3, 6) + ' '\r\n                + suggestion.person.phone.substring(6, 8) + ' '\r\n                + suggestion.person.phone.substring(8, 10)\r\n        });\r\n    };\r\n\r\n    handleChangeHair = (newValue) => {\r\n        let allSum = 0, masterWorkSum = 0;\r\n        this.state.hairsCategory.filter(hairCategory => (hairCategory.masterType === this.state.selectMaster.type && hairCategory.hairType === 'HAIR_EXTENSION'))\r\n            .forEach(hairCategory => {\r\n                allSum = allSum + hairCategory.price*this.state.hairCountExtension + newValue.hair.price*this.state.hairWeight;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*this.state.hairCountExtension;\r\n            });\r\n        this.state.hairsCategory.filter(hairCategory => hairCategory.hairType === 'HAIR_REMOVAL')\r\n            .forEach(hairCategory => {\r\n                allSum = allSum + hairCategory.price*this.state.hairCountRemoval;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*this.state.hairCountRemoval;\r\n            });\r\n\r\n        this.setState({\r\n            selectedHair: newValue,\r\n            allPrice: allSum,\r\n            masterWorkPrice: masterWorkSum\r\n        });\r\n    };\r\n\r\n    handleChangeProcedures = (selectedProcedures) => {\r\n        let allSum = 0, masterWorkSum = 0;\r\n        let procedures = selectedProcedures.map(option => {\r\n            return option.procedure;\r\n        });\r\n\r\n        let hairCountExtension = procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION') ? this.state.hairCountExtension : 0;\r\n        let hairCountRemoval = procedures.some(procedure => procedure.hairType === 'HAIR_REMOVAL') ? this.state.hairCountRemoval : 0;\r\n        let hairWeight = procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION') ? this.state.hairWeight : 0;\r\n        let selectedHair = procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION') ? this.state.selectedHair : undefined;\r\n\r\n        this.state.hairsCategory.filter(hairCategory => (hairCategory.masterType === this.state.selectMaster.type && hairCategory.hairType === 'HAIR_EXTENSION'))\r\n            .forEach(hairCategory => {\r\n                if (selectedHair) allSum = allSum + hairCategory.price*hairCountExtension + selectedHair.hair.price*hairWeight;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*hairCountExtension;\r\n            });\r\n        this.state.hairsCategory.filter(hairCategory => hairCategory.hairType === 'HAIR_REMOVAL')\r\n            .forEach(hairCategory => {\r\n                allSum = allSum + hairCategory.price*hairCountRemoval;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*hairCountRemoval;\r\n            });\r\n\r\n        this.setState({\r\n            selectedProcedures: selectedProcedures,\r\n            procedures: procedures,\r\n            allPrice: allSum,\r\n            masterWorkPrice: masterWorkSum,\r\n            selectedHair: selectedHair,\r\n            hairWeight: hairWeight,\r\n            hairCountExtension: hairCountExtension,\r\n            hairCountRemoval: hairCountRemoval\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const inputClientNameProps = {\r\n            placeholder: 'Введите имя клиента',\r\n            value:  this.state.selectClientName,\r\n            onChange: this.onChangeClientName\r\n        };\r\n        const inputClientPhoneProps = {\r\n            placeholder: 'Введите телефон клиента',\r\n            value: this.state.selectClientPhone,\r\n            onChange: this.onChangeClientPhone\r\n        };\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    { this.props.event ? <div className=\"time_slot_modal\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2 time-slot-menu\">\r\n                                <ul>\r\n                                    <li>\r\n                                        <a href=\"#\" onClick={() => this.setMenu('MAIN')}>Детали заказа</a>\r\n                                    </li>\r\n                                    {this.state.selectClient ? <li>\r\n                                        <a href=\"#\" onClick={() => this.setMenu('HISTORY')}>История посещений</a>\r\n                                    </li> : null}\r\n                                    {this.props.event.timeSlot ? <li>\r\n                                        <a href=\"#\" onClick={() => this.setMenu('HISTORY_CHANGE')}>История изменений</a>\r\n                                    </li> : null}\r\n                                </ul>\r\n                            </div>\r\n                            {this.state.menu === 'HISTORY_CHANGE' ? <div className=\"col-sm\">\r\n                                <div className=\"container selectDiv\">\r\n                                    <HistoryChangeSlot changes={this.props.event.timeSlot.changes}/>\r\n                                </div>\r\n                            </div> : null}\r\n                            {this.state.menu === 'HISTORY' ? <div className=\"col-sm\">\r\n                                <div className=\"container selectDiv\">\r\n                                    <HistoryClients client={this.state.selectClient}/>\r\n                                </div>\r\n                            </div> : null}\r\n                            {this.state.menu === 'MAIN' ? <div className=\"col-sm\">\r\n                                <div className=\"container selectDiv\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-2 title-margin-date\">\r\n                                            Дата заказа:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <DayPickerInput\r\n                                                placeholder={`Дата заказа`}\r\n                                                parseDate={parseDate}\r\n                                                value={this.state.date}\r\n                                                onDayChange={this.handleChangeDate}\r\n                                                dayPickerProps={{\r\n                                                    locale: 'ru',\r\n                                                    localeUtils: MomentLocaleUtils,\r\n                                                }}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                    <div className=\"row\">\r\n                                        <button onClick={() => this.setStatus('NEW')} className={\"btn status-button \" + (this.state.status === 'NEW' ? 'active-status-button' : '')}>\r\n                                            Ожидание клиента\r\n                                        </button>\r\n                                        <button onClick={() => this.setStatus('DONE')} className={\"btn status-button \" + (this.state.status === 'DONE' ? 'active-status-button' : '')}>\r\n                                            Клиент пришел\r\n                                        </button>\r\n                                        <button onClick={() => this.setStatus('CANCELED')} className={\"btn status-button \" + (this.state.status === 'CANCELED' ? 'active-status-button' : '')}>\r\n                                            Клиент не пришел\r\n                                        </button>\r\n                                        <button onClick={() => this.setStatus('READY')} className={\"btn status-button \" + (this.state.status === 'READY' ? 'active-status-button' : '')}>\r\n                                            Клиент подтвердил\r\n                                        </button>\r\n                                    </div>\r\n                                    <hr/>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-2 title-margin\">\r\n                                            Время начала:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <div className=\"inlineDiv\">\r\n                                                <Select\r\n                                                    value={this.state.startHour}\r\n                                                    options={hourOptions()}\r\n                                                    placeholder={''}\r\n                                                    onChange={this.handleChangeStartHour}\r\n                                                    className='selectStyle'\r\n                                                />\r\n                                                <div className=\"quote\">:</div>\r\n                                                <Select\r\n                                                    value={this.state.startMinutes}\r\n                                                    options={minuteOptions()}\r\n                                                    placeholder={''}\r\n                                                    onChange={this.handleChangeStartMinutes}\r\n                                                    className='selectStyle'\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-2\">\r\n                                            Время завершения:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <div className=\"inlineDiv\">\r\n                                                <Select\r\n                                                    value={this.state.endHour}\r\n                                                    options={hourOptions()}\r\n                                                    placeholder={''}\r\n                                                    onChange={this.handleChangeEndHour}\r\n                                                    className='selectStyle'\r\n                                                />\r\n                                                <div className=\"quote\">:</div>\r\n                                                <Select\r\n                                                    value={this.state.endMinutes}\r\n                                                    options={minuteOptions()}\r\n                                                    placeholder={''}\r\n                                                    onChange={this.handleChangeEndMinutes}\r\n                                                    className='selectStyle'\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                </div>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        Имя клиента:\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Autosuggest\r\n                                    suggestions={this.state.clients}\r\n                                    multiSection={true}\r\n                                    onSuggestionsFetchRequested={this.onClientsFetchRequestedByName}\r\n                                    onSuggestionsClearRequested={this.onClientsClearRequested}\r\n                                    getSuggestionValue={getClientName}\r\n                                    renderSuggestion={renderClient}\r\n                                    renderSectionTitle={renderSectionTitle}\r\n                                    getSectionSuggestions={getSectionClients}\r\n                                    inputProps={inputClientNameProps}\r\n                                    onSuggestionSelected={this.onClientSelected}\r\n                                />\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('selectClientName')} aria-describedby=\"selectClientName-error-text\">\r\n                                    { this.validate('selectClientName') ? <FormHelperText id=\"selectClientName-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        Телефон клиента:\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Autosuggest\r\n                                    suggestions={this.state.clients}\r\n                                    multiSection={true}\r\n                                    onSuggestionsFetchRequested={this.onClientsFetchRequestedByPhone}\r\n                                    onSuggestionsClearRequested={this.onClientsClearRequested}\r\n                                    getSuggestionValue={getClientPhone}\r\n                                    renderSuggestion={renderClient}\r\n                                    renderSectionTitle={renderSectionTitle}\r\n                                    getSectionSuggestions={getSectionClients}\r\n                                    inputProps={inputClientPhoneProps}\r\n                                    onSuggestionSelected={this.onClientSelected}\r\n                                />\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('selectClientPhone')} aria-describedby=\"selectClientPhone-error-text\">\r\n                                    { this.validate('selectClientPhone') ? <FormHelperText id=\"selectClientPhone-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        Комментарии к клиенту:\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <TextField InputLabelProps={{ shrink: true }} value={this.state.clientDescription}\r\n                                               onChange={this.handleChange('clientDescription')} fullWidth/>\r\n                                </div>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        Мастер:\r\n                                    </div>\r\n                                </div>\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectMasterName}\r\n                                    loadOptions={getOptionMastersByFIO}\r\n                                    onChange={this.handleInputMasterChange}\r\n                                    placeholder={'Выберите мастера'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectMaster')} aria-describedby=\"selectMaster-error-text\">\r\n                                    { this.validate('selectMaster') ? <FormHelperText id=\"selectMaster-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                                <hr/>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-2 title-margin\">\r\n                                            Услуга:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <FormControl className={classes.formControl} error={this.validateProcedures()} aria-describedby=\"procedures-error-text\">\r\n                                                <Select id=\"procedures\"\r\n                                                        isMulti\r\n                                                        closeMenuOnSelect={false}\r\n                                                        value={this.state.selectedProcedures}\r\n                                                        onChange={this.handleChangeProcedures}\r\n                                                        placeholder=\"Выберите услуги\"\r\n                                                        options={this.state.optionProcedures}\r\n                                                />\r\n                                                { this.validateProcedures() ? <FormHelperText id=\"procedures-error-text\">Необходимо выбрать хотя бы один вариант</FormHelperText>: null }\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <hr/>\r\n                                {this.state.procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION') ? <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-2 title-margin\">\r\n                                            Расход волос:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <Select value={this.state.selectedHair}\r\n                                                    onChange={this.handleChangeHair}\r\n                                                    placeholder=\"Выберите категорию волос\"\r\n                                                    options={this.state.optionHairs}\r\n                                            />\r\n                                            { this.state.error ? <div className=\"row error_label error_label_slot\">\r\n                                                {this.state.error}\r\n                                            </div> : null}\r\n                                            <FormControl className={classes.formControlHairs} error={this.validate('selectedHair')} aria-describedby=\"selectedHair-error-text\">\r\n                                                { this.validate('selectedHair') ? <FormHelperText id=\"selectedHair-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.state.selectedHair ? <div className=\"row\">\r\n                                        <div className=\"col-sm-3 title-margin-date\">\r\n                                            Количество (шт.):\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.hairCountExtension}\r\n                                                onChange={this.handleChangeAndRecountSum('hairCountExtension')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-sm-3 title-margin-date\">\r\n                                            Вес (гр.):\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.hairWeight}\r\n                                                onChange={this.handleChangeAndRecountSum('hairWeight')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div> : null}\r\n                                    <hr/>\r\n                                </div> : null}\r\n                                {this.state.procedures.some(procedure => procedure.hairType === 'HAIR_REMOVAL') ? <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-4 title-margin-date\">\r\n                                            Снятие волос (количество прядей):\r\n                                        </div>\r\n                                        <div className=\"col-sm-3\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.hairCountRemoval}\r\n                                                onChange={this.handleChangeAndRecountSum('hairCountRemoval')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                </div> : null}\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-3 title-margin-date\">\r\n                                            Услуги мастера (руб.):\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.masterWorkPrice}\r\n                                                onChange={this.handleChange('masterWorkPrice')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-sm-3 title-margin-date\">\r\n                                            Общая стоимость (руб.):\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.allPrice}\r\n                                                onChange={this.handleChange('allPrice')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                </div>\r\n                            </div> : null}\r\n                        </div>\r\n                    </div>: null }\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                        {this.state.id ? <button className=\"btn btn-primary\" onClick={this.delete}>\r\n                            Удалить\r\n                        </button> : null}\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(TimeSlotModal);\r\n","import {GET_TIME_SLOTS} from \"../constants/timeSlotConstants\";\nimport {getTimeSlotsByDate} from \"../service/timeSlotService\";\n\nexport const getTimeSlotsByDateAction = (start, end, master, params) => dispatch => {\n    getTimeSlotsByDate(start, end, master, params).then(timeSlots => {\n        dispatch({\n            type: GET_TIME_SLOTS,\n            payload: timeSlots\n        })\n    });\n};","export const GET_TIME_SLOTS = \"GET_TIME_SLOTS\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BigCalendar from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport TimeSlotModal from \"../modal/TimeSlotModal\";\r\nimport {getTimeSlotsByDate} from \"../service/timeSlotService\";\r\nimport 'moment/locale/ru';\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {getTimeSlotsByDateAction} from \"../actions/timeSlotActions\";\r\nimport {allMastersByDayOff, allMastersByWorkDay} from \"../service/masterService\";\r\nimport Modal from 'react-responsive-modal';\r\nimport Select from 'react-select';\r\nimport {typeMasterFormatter} from \"../data/formatter\";\r\n\r\nclass TimeTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let start = moment().startOf('day').format('YYYY-MM-DD HH:mm:ss');\r\n        let end =  moment().endOf('day').format('YYYY-MM-DD HH:mm:ss');\r\n\r\n        this.state = {\r\n            open: false,\r\n            event: {},\r\n            startWeek: start,\r\n            endWeek: end,\r\n            selectMaster: undefined,\r\n            timeSlots:undefined,\r\n            date: new Date(),\r\n            openAddMaster: false,\r\n            addMasterSelect: undefined,\r\n            addMasterOptions: []\r\n        };\r\n        this.onOpenTimeSlotModal = this.onOpenTimeSlotModal.bind(this);\r\n        this.onCloseTimeSlotModal = this.onCloseTimeSlotModal.bind(this);\r\n        this.saveTimeSlot = this.saveTimeSlot.bind(this);\r\n        this.onNavigate = this.onNavigate.bind(this);\r\n        this.onSelectEvent = this.onSelectEvent.bind(this);\r\n        this.handleInputMasterChange = this.handleInputMasterChange.bind(this);\r\n        this.openModalMasterToGraph = this.openModalMasterToGraph.bind(this);\r\n        this.closeModalMasterToGraph = this.closeModalMasterToGraph.bind(this);\r\n        this.addMasterToGraph = this.addMasterToGraph.bind(this);\r\n        this.handleChangeAddMaster = this.handleChangeAddMaster.bind(this);\r\n        this.setTimeSlots = this.setTimeSlots.bind(this);\r\n\r\n        this.setTimeSlots(start, end, undefined);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let date = this.props.location.search.substr(6);\r\n        if (!date) return;\r\n        this.setTimeSlots(date);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        let date = newProps.location.search.substr(6);\r\n        this.setTimeSlots(date);\r\n    }\r\n\r\n    setTimeSlots(date) {\r\n        this.setState({\r\n            timeSlots: undefined\r\n        });\r\n        let start = moment(new Date(moment(date).startOf('day').toDate())).format('YYYY-MM-DD HH:mm:ss');\r\n        let end = moment(new Date(moment(date).endOf('day').toDate())).format('YYYY-MM-DD HH:mm:ss');\r\n        getTimeSlotsByDate(start, end).then(timeSlots => {\r\n            let evants = timeSlots.map(timeSlot => {\r\n                return {\r\n                    id: timeSlot.id,\r\n                    resourceId: timeSlot.master.id,\r\n                    title: \"\\nМастер: \"+ timeSlot.master.person.name\r\n                    + \" \\nКлиент: \" + timeSlot.client.person.name\r\n                    + \" Цена: \" + timeSlot.allPrice,\r\n                    timeSlot: timeSlot,\r\n                    start: moment.unix(timeSlot.startSlot).toDate(),\r\n                    end: moment.unix(timeSlot.endSlot).toDate()\r\n                };\r\n            });\r\n            allMastersByWorkDay(start).then(mastersWorkDay => {\r\n                let resources = mastersWorkDay.map(master => {\r\n                    return {\r\n                        id: master.id,\r\n                        title: master.person.name + \" - \" + typeMasterFormatter(master.type),\r\n                        master: master\r\n                    };\r\n                });\r\n                allMastersByDayOff(start).then(mastersWorkOff => {\r\n                    let addMasterOptions = mastersWorkOff.map(master => {\r\n                        return { value: master.id, label: master.person.name, master: master };\r\n                    });\r\n                    this.setState({\r\n                        timeSlots: {\r\n                            evants: evants,\r\n                            resources: resources\r\n                        },\r\n                        addMasterOptions: addMasterOptions,\r\n                        date: new Date(date),\r\n                        startWeek: start,\r\n                        endWeek: end\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    onCloseTimeSlotModal = () => {\r\n        this.setTimeSlots(this.state.startWeek, this.state.endWeek);\r\n        this.setState({\r\n            open: false,\r\n            event: {}\r\n        });\r\n    };\r\n\r\n    onSelectEvent = (event) => {\r\n        this.setState({\r\n            event: event,\r\n            open: true\r\n        });\r\n    };\r\n\r\n    onOpenTimeSlotModal = (event) => {\r\n        let master = this.state.timeSlots.resources.find(resource => resource.id === event.resourceId).master;\r\n        this.setState({\r\n            event: {\r\n                start: event.start,\r\n                end: event.end\r\n            },\r\n            selectMaster: {\r\n                value: master.id,\r\n                label: master.person.name,\r\n                master: master\r\n            },\r\n            open: true\r\n        });\r\n    };\r\n\r\n    saveTimeSlot() {\r\n        this.setTimeSlots(this.state.startWeek, this.state.endWeek);\r\n        this.setState({\r\n            open: false,\r\n            event: {}\r\n        });\r\n    };\r\n\r\n    onNavigate(date, view) {\r\n        let end = new Date(moment(date).endOf('isoWeek').toDate());\r\n        end.setHours(23);\r\n        end.setMinutes(59);\r\n        end.setSeconds(59);\r\n\r\n        let start = moment(new Date(moment(date).startOf('isoWeek').toDate())).format('YYYY-MM-DD HH:mm:ss');\r\n        let endFormat = moment(end).format('YYYY-MM-DD HH:mm:ss');\r\n\r\n        this.setTimeSlots(start, endFormat);\r\n\r\n        this.setState({\r\n            startWeek: start,\r\n            endWeek: endFormat\r\n        });\r\n    };\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        this.setTimeSlots(this.state.startWeek, this.state.endWeek,);\r\n        this.setState({\r\n            selectMaster: {\r\n                value: newValue.value.id,\r\n                label: newValue.master.person.name,\r\n                master: newValue.master\r\n            }\r\n        });\r\n    };\r\n\r\n    openModalMasterToGraph() {\r\n        this.setState({\r\n            openAddMaster: true\r\n        });\r\n    };\r\n\r\n    closeModalMasterToGraph() {\r\n        this.setState({\r\n            openAddMaster: false\r\n        });\r\n    };\r\n\r\n    handleChangeAddMaster = (newValue) => {\r\n        this.setState({\r\n            addMasterSelect: newValue\r\n        });\r\n    };\r\n\r\n    addMasterToGraph() {\r\n        let addMasterOptions = this.state.addMasterOptions.filter(\r\n            master => {\r\n                return master.value !== this.state.addMasterSelect.value\r\n            }\r\n        );\r\n        let resources = this.state.timeSlots.resources;\r\n        resources.push({\r\n            id: this.state.addMasterSelect.master.id,\r\n            title: this.state.addMasterSelect.master.person.name,\r\n            master: this.state.addMasterSelect.master\r\n        });\r\n\r\n        this.setState((state) => {\r\n            return {\r\n                timeSlots: {\r\n                    evants: state.timeSlots.evants,\r\n                    resources: resources,\r\n                },\r\n                addMasterOptions: addMasterOptions,\r\n                addMasterSelect: undefined,\r\n                openAddMaster: false\r\n            };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        moment.locale(\"ru\", {\r\n            week: {\r\n                dow: 1\r\n            }\r\n        });\r\n\r\n        const localizer = BigCalendar.momentLocalizer(moment);\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.openModalMasterToGraph } className=\"btn btn-primary\">\r\n                        Добавить мастера в расписание\r\n                    </button>\r\n                </div>\r\n                <hr/>\r\n                { this.state.timeSlots ? <BigCalendar\r\n                    date={this.state.date}\r\n                    localizer={localizer}\r\n                    events={this.state.timeSlots.evants}\r\n                    resources={this.state.timeSlots.resources}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    selectable={true}\r\n                    defaultView={BigCalendar.Views.DAY}\r\n                    min={new Date(2017, 10, 0, 10, 0, 0)}\r\n                    max={new Date(2017, 10, 0, 22, 0, 0)}\r\n                    views={{day: true}}\r\n                    step={30}\r\n                    toolbar={false}\r\n                    timeslots={1}\r\n                    onSelectEvent={this.onSelectEvent}\r\n                    onSelectSlot={this.onOpenTimeSlotModal}\r\n                    onNavigate={this.onNavigate}\r\n                    eventPropGetter={\r\n                        (event, start, end, isSelected) => {\r\n                            let newStyle = {\r\n                                backgroundColor: \"rgb(104, 14, 14)\",\r\n                                borderRadius: \"0px\",\r\n                                border: \"none\"\r\n                            };\r\n                            if (event.timeSlot.status === 'NEW'){\r\n                                newStyle.backgroundColor = \"gray\"\r\n                            }\r\n                            if (event.timeSlot.status === 'CANCELED'){\r\n                                newStyle.backgroundColor = \"#f30808\"\r\n                            }\r\n                            if (event.timeSlot.status === 'DONE'){\r\n                                newStyle.backgroundColor = \"rgb(39, 38, 42)\"\r\n                            }\r\n                            return {\r\n                                style: newStyle\r\n                            };\r\n                        }\r\n                    }\r\n                />: null}\r\n                {this.state.event.start ? <TimeSlotModal\r\n                    accept={this.saveTimeSlot}\r\n                    event={this.state.event}\r\n                    selectMaster={this.state.selectMaster}\r\n                    open={this.state.open}\r\n                    close={this.onCloseTimeSlotModal}/>: null}\r\n\r\n                <Modal open={this.state.openAddMaster}\r\n                       closeOnOverlayClick={true}\r\n                       showCloseIcon={false}\r\n                       onClose={this.closeModalMasterToGraph}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container add_master_modal\">\r\n                        <div className='row'>\r\n                            <div className=\"col-sm\">\r\n                                <Select closeMenuOnSelect={false}\r\n                                        value={this.state.addMasterSelect}\r\n                                        onChange={this.handleChangeAddMaster}\r\n                                        placeholder=\"Выберите мастера\"\r\n                                        options={this.state.addMasterOptions}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.addMasterToGraph}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.closeModalMasterToGraph}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    timeSlots: state.timeSlotReducer.timeSlots,\r\n    resources: state.timeSlotReducer.resources\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        timeSlotActions: bindActionCreators(getTimeSlotsByDateAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeTable);","export default [\r\n    {\r\n        dataField: 'description',\r\n        text: 'Название аксессуара'\r\n    },\r\n    {\r\n        dataField: 'purchasePrice',\r\n        text: 'Закупочная цена'\r\n    },\r\n    {\r\n        dataField: 'sellingPrice',\r\n        text: 'Цена продажи'\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport '../react-day-picker.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NumberFormat from 'react-number-format';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControlDescription: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator={' '}\r\n        />\r\n    );\r\n}\r\n\r\nclass ProductModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: {\r\n                description: '',\r\n                purchasePrice: '',\r\n                sellingPrice: ''\r\n            },\r\n            submit: false\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.select)\r\n            this.setState({\r\n                product: this.props.select\r\n            });\r\n    }\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.product.description\r\n            && this.state.product.purchasePrice\r\n            && this.state.product.sellingPrice) {\r\n            this.props.accept(this.state.product);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    clear() {\r\n        this.setState({\r\n            product: {\r\n                description: '',\r\n                purchasePrice: '',\r\n                sellingPrice: ''\r\n            },\r\n            submit: false\r\n        });\r\n    }\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state.product || !this.state.product[field]);\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            product: {\r\n                ...this.state.product,\r\n                [name]: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div>\r\n                        <div className={classes.container}>\r\n                            <FormControl className={classes.formControl} error={this.validate('description')} aria-describedby=\"description-error-text\">\r\n                                <InputLabel htmlFor=\"description\">Описание</InputLabel>\r\n                                <Input id=\"description\" value={this.state.product.description} onChange={this.handleChange('description')} />\r\n                                { this.validate('description') ? <FormHelperText id=\"description-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                            <FormControl className={classes.formControl} error={this.validate('purchasePrice')} aria-describedby=\"purchasePrice-error-text\">\r\n                                <InputLabel htmlFor=\"purchasePrice\">Закупочная цена (руб.)</InputLabel>\r\n                                <Input id=\"purchasePrice\" inputComponent={NumberFormatCustom} value={this.state.product.purchasePrice} onChange={this.handleChange('purchasePrice')} />\r\n                                { this.validate('purchasePrice') ? <FormHelperText id=\"purchasePrice-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                            <FormControl className={classes.formControl} error={this.validate('sellingPrice')} aria-describedby=\"sellingPrice-error-text\">\r\n                                <InputLabel htmlFor=\"sellingPrice\">Цена продажи (руб.)</InputLabel>\r\n                                <Input id=\"sellingPrice\" inputComponent={NumberFormatCustom} value={this.state.product.sellingPrice} onChange={this.handleChange('sellingPrice')} />\r\n                                { this.validate('sellingPrice') ? <FormHelperText id=\"sellingPrice-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ProductModal);\r\n","export function getProducts() {\r\n    return fetch(\"http://localhost:8080/api/products\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getProductsByDescription(description) {\r\n    return fetch(\"http://localhost:8080/api/products/description/\" + description)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function createProduct(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nexport function updateProduct(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(\"http://localhost:8080/api/product\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colProduct from \"../data/colProduct\";\r\nimport ProductModal from \"../modal/ProductModal\";\r\nimport {createProduct, getProducts, updateProduct} from \"../service/productService\";\r\n\r\nclass Products extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            openCreate: false,\r\n            openUpdate: false\r\n        };\r\n        this.createProduct = this.createProduct.bind(this);\r\n        this.updateProduct = this.updateProduct.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.handleOnSelect = this.handleOnSelect.bind(this);\r\n        getProducts().then(data => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        });\r\n    }\r\n\r\n    createProduct(entity) {\r\n        createProduct(entity).then(() => {\r\n            getProducts().then(data => {\r\n                this.setState({\r\n                    openCreate: false,\r\n                    data: data\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    updateProduct(entity) {\r\n        updateProduct(entity).then(() => {\r\n            getProducts().then(data => {\r\n                this.setState({\r\n                    openUpdate: false,\r\n                    data: data,\r\n                    select: entity\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false\r\n        });\r\n    };\r\n\r\n    onOpenUpdateModal () {\r\n        this.setState({\r\n            openUpdate: true\r\n        });\r\n    };\r\n\r\n    handleOnSelect = (row) => {\r\n        this.setState({\r\n            select : row\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const selectRow = {\r\n            mode: 'radio',\r\n            clickToSelect: true,\r\n            hideSelectColumn: true,\r\n            bgColor: '#00BFFF',\r\n            onSelect: this.handleOnSelect,\r\n        };\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.onOpenCreateModal } className=\"btn btn-primary\">\r\n                        Добавить аксессуар\r\n                    </button>\r\n                    { this.state.select ? <button onClick = { this.onOpenUpdateModal } className=\"btn btn-primary\">\r\n                        Изменить аксессуар\r\n                    </button> : null }\r\n                </div>\r\n                {this.state.data ? <BootstrapTable\r\n                    keyField=\"id\"\r\n                    selectRow={ selectRow }\r\n                    data={this.state.data}\r\n                    columns={colProduct}\r\n                />: null}\r\n                <ProductModal accept={this.createProduct}\r\n                              open={this.state.openCreate}\r\n                              close={this.onCloseCreateModal} />\r\n                {this.state.openUpdate ? <ProductModal accept={this.updateProduct}\r\n                              open={this.state.openUpdate}\r\n                              select={this.state.select}\r\n                              close={this.onCloseUpdateModal} /> : null }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;\r\n","export function getExpenses(params, start, end) {\r\n    let sort = params.sortField ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterMaster= params.filters && params.filters['master.person.name'] ? \"&masterId=\" + params.filters['master.person.name'].filterVal : '';\r\n    let filterProduct= params.filters && params.filters['product.description'] ? \"&productId=\" + params.filters['product.description'].filterVal : '';\r\n    return fetch(\"http://localhost:8080/api/expenses?page=\" + params.page\r\n        + \"&size=\" + params.size + sort + filterMaster + filterProduct + \"&start=\" + start + \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function updateExpense(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createExpense(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(\"http://localhost:8080/api/expense\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_EXPENSES} from \"../constants/expenseConstants\";\r\nimport {getExpenses} from \"../service/expenseService\";\r\n\r\nexport const getExpensesAction = (params, start, end) => dispatch => {\r\n    getExpenses(params, start, end).then(expenses => {\r\n        dispatch({\r\n            type: GET_EXPENSES,\r\n            payload: expenses\r\n        })\r\n    });\r\n};","export const GET_EXPENSES = \"GET_EXPENSES\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getProducts, getProductsByDescription} from \"../service/productService\";\r\nimport {getMasters, getMastersByFiO} from \"../service/masterService\";\r\nimport PageParams from \"../model/PageParams\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {createExpense, updateExpense} from \"../service/expenseService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionMastersByFIO(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getMasters(new PageParams(0, 100));\r\n    else response = await getMastersByFiO(search);\r\n    let cachedOptions = response.content.map((d) => ({\r\n        value: d.id,\r\n        label: d.person.name,\r\n        master: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\n\r\nasync function getOptionExpensesByDescription(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getProducts();\r\n    else response = await getProductsByDescription(search);\r\n    let cachedOptions = response.map((d) => ({\r\n        value: d.id,\r\n        label: d.description,\r\n        product: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass ExpenseModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectMaster: undefined,\r\n            selectProductByDescription: undefined,\r\n            selectMasterFio: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputProductChange = this.handleInputProductChange.bind(this);\r\n        this.handleInputMasterChange = this.handleInputMasterChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeCountProduct = this.handleChangeCountProduct.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                id: this.props.update.id,\r\n                date: this.props.update.date ? moment.unix(this.props.update.date).toDate() : new Date(),\r\n                countProduct: this.props.update.countProduct,\r\n                selectProduct: this.props.update.product,\r\n                selectMaster: this.props.update.master,\r\n                selectMasterFio: {\r\n                    value: this.props.update.master.id,\r\n                    label: this.props.update.master.person.name,\r\n                    master: this.props.update.master\r\n                },\r\n                selectProductByDescription: {\r\n                    value: this.props.update.product.id,\r\n                    label: this.props.update.product.description,\r\n                    product: this.props.update.product\r\n                },\r\n                error: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectMaster: undefined,\r\n            selectProductByDescription: undefined,\r\n            selectMasterFio: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.selectProduct\r\n            && this.state.countProduct>0\r\n            && this.state.selectMaster\r\n            && this.state.date) {\r\n            let expense = {\r\n                id: this.state.id,\r\n                date: this.state.date,\r\n                product: this.state.selectProduct,\r\n                master: this.state.selectMaster,\r\n                countProduct: this.state.countProduct\r\n            };\r\n            if (this.props.isCreate) this.createExpense(expense);\r\n            else this.updateExpense(expense);\r\n        }\r\n    };\r\n\r\n    updateExpense(entity) {\r\n        updateExpense(entity).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    createExpense(entity) {\r\n        createExpense(entity).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    handleInputProductChange = (newValue) => {\r\n        this.setState({\r\n            selectProduct: newValue.product,\r\n            selectProductByDescription: {\r\n                value: newValue.value,\r\n                label: newValue.product.description,\r\n                product: newValue.product\r\n            },\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        this.setState({\r\n            selectMaster: newValue.master,\r\n            selectMasterFio: {\r\n                value: newValue.value,\r\n                label: newValue.master.person.name,\r\n                master: newValue.master\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeCountProduct = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                countProduct: event.target.value,\r\n                error: undefined\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Товар:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectProductByDescription}\r\n                                    loadOptions={getOptionExpensesByDescription}\r\n                                    onChange={this.handleInputProductChange}\r\n                                    placeholder={'Выберите товар'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectProduct')} aria-describedby=\"selectProduct-error-text\">\r\n                                    { this.validate('selectProduct') ? <FormHelperText id=\"selectProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                Количество:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.countProduct}\r\n                                           onChange={this.handleChangeCountProduct} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Мастер:\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectMasterFio}\r\n                                    loadOptions={getOptionMastersByFIO}\r\n                                    onChange={this.handleInputMasterChange}\r\n                                    placeholder={'Выберите мастера'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectMaster')} aria-describedby=\"selectMaster-error-text\">\r\n                                    { this.validate('selectMaster') ? <FormHelperText id=\"selectMaster-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Дата:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <DayPickerInput\r\n                                placeholder={`Дата расхода`}\r\n                                parseDate={parseDate}\r\n                                value={this.state.date}\r\n                                onDayChange={this.handleChangeDate}\r\n                                formatDate={formatDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                }}/>\r\n                            <FormControl className={classes.formControl} error={this.validate('date')} aria-describedby=\"date-error-text\">\r\n                                { this.validate('date') ? <FormHelperText id=\"date-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    { this.state.error ? <div className=\"row error_label\">\r\n                        {this.state.error}\r\n                    </div> : null}\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ExpenseModal);\r\n","export function getMastersReport(start, end) {\r\n    return fetch(\"http://localhost:8080/report/getMastersReport?start=\" + start + \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => {\r\n            return res.blob();\r\n        }).then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'отчет.xlsx';\r\n            a.click();\r\n        }).catch(err => console.error(err));\r\n}\r\n\r\nexport function getExpensesReport(params, start, end) {\r\n    let sort = params.sortOrder ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterMaster= params.filters && params.filters['master.person.name'] ? \"&masterId=\" + params.filters['master.person.name'].filterVal : '';\r\n    let filterProduct= params.filters && params.filters['product.description'] ? \"&productId=\" + params.filters['product.description'].filterVal : '';\r\n    return fetch(\"http://localhost:8080/report/getExpensesReport?start=\" + start + \"&end=\" + end + sort + filterMaster + filterProduct)\r\n        .then(handleErrors)\r\n        .then(res => {\r\n            return res.blob();\r\n        }).then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'отчет.xlsx';\r\n            a.click();\r\n        }).catch(err => console.error(err));\r\n}\r\n\r\nexport function getIncomingReport(params, start, end) {\r\n    let sort = params.sortOrder ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterProduct= params.filters && params.filters['product.description'] ? \"&productId=\" + params.filters['product.description'].filterVal : '';\r\n    return fetch(\"http://localhost:8080/report/getIncomingReport?start=\" + start + \"&end=\" + end + sort + filterProduct)\r\n        .then(handleErrors)\r\n        .then(res => {\r\n            return res.blob();\r\n        }).then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'отчет.xlsx';\r\n            a.click();\r\n        }).catch(err => console.error(err));\r\n}\r\n\r\nexport function getAdditionalIncomingReport(params, start, end) {\r\n    let sort = params.sortOrder ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterMaster= params.filters && params.filters['master.person.name'] ? \"&masterId=\" + params.filters['master.person.name'].filterVal : '';\r\n    return fetch(\"http://localhost:8080/report/getAdditionalIncomingReport?start=\" + start + \"&end=\" + end + sort + filterMaster)\r\n        .then(handleErrors)\r\n        .then(res => {\r\n            return res.blob();\r\n        }).then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'отчет.xlsx';\r\n            a.click();\r\n        }).catch(err => console.error(err));\r\n}\r\n\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport {connect} from 'react-redux';\r\nimport {getExpensesAction} from \"../actions/expenseActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport ExpenseModal from \"../modal/ExpenseModal\";\r\nimport {getAllMasters} from \"../service/masterService\";\r\nimport {selectFilter} from \"react-bootstrap-table2-filter\";\r\nimport {getProducts} from \"../service/productService\";\r\nimport moment from 'moment'\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport {getExpensesReport} from \"../service/reportService\";\r\n\r\nclass Expenses extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            sortField: '',\r\n            sortOrder: '',\r\n            masterOptions: {},\r\n            productOptions: {},\r\n            filters: {},\r\n            row: undefined,\r\n            error: undefined,\r\n            start: moment().startOf('month').toDate(),\r\n            end: moment().endOf('month').toDate()\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.accept = this.accept.bind(this);\r\n        this.export = this.export.bind(this);\r\n\r\n        this.props.expenseActions(new PageParams(0, 10, \"date\", \"asc\"),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n\r\n        getAllMasters().then(masters => {\r\n            let masterOptions = {};\r\n            masters.forEach(master => {\r\n                masterOptions[master.id] = master.person.name;\r\n            });\r\n            this.setState({\r\n                masterOptions: masterOptions\r\n            })\r\n        });\r\n        getProducts().then(products => {\r\n            let productOptions = {};\r\n            products.forEach(product => {\r\n                productOptions[product.id] = product.description;\r\n            });\r\n            this.setState({\r\n                productOptions: productOptions\r\n            })\r\n        });\r\n    }\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {sortField, sortOrder, filters, page, sizePerPage}) => {\r\n        this.setState({\r\n            sortField: sortField,\r\n            sortOrder: sortOrder,\r\n            filters: filters\r\n        });\r\n        this.props.expenseActions(new PageParams(page - 1, sizePerPage, sortField, sortOrder, filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    };\r\n\r\n    accept() {\r\n        this.props.expenseActions(new PageParams(\r\n            this.props.expenses.number,\r\n            this.props.expenses.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeStartDate = (newValue) => {\r\n        this.props.expenseActions(new PageParams(\r\n            this.props.expenses.number,\r\n            this.props.expenses.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            start: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeEndDate = (newValue) => {\r\n        this.props.expenseActions(new PageParams(\r\n            this.props.expenses.number,\r\n            this.props.expenses.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            end: newValue\r\n        });\r\n    };\r\n\r\n    export() {\r\n        getExpensesReport(new PageParams(\r\n            this.props.expenses.number,\r\n            this.props.expenses.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    }\r\n\r\n    render() {\r\n        const colExpense = [\r\n            {\r\n                dataField: 'date',\r\n                text: 'Дата расхода',\r\n                sort: true,\r\n                formatter: (cellContent) => {\r\n                    return (\r\n                        <div>\r\n                            {moment.unix(cellContent).format(\"DD.MM.YYYY\")}\r\n                        </div>\r\n                    )\r\n                }\r\n            },{\r\n                dataField: 'master.person.name',\r\n                text: '',\r\n                sort: true,\r\n                filter: selectFilter({\r\n                    placeholder: 'Мастер',\r\n                    style: {\r\n                        backgroundColor: '#e4e4e1'\r\n                    },\r\n                    options: this.state.masterOptions\r\n                })\r\n            },\r\n            {\r\n                dataField: 'product.description',\r\n                text: '',\r\n                sort: true,\r\n                filter: selectFilter({\r\n                    placeholder: 'Товар',\r\n                    style: {\r\n                        backgroundColor: '#e4e4e1'\r\n                    },\r\n                    options: this.state.productOptions\r\n                })\r\n            },\r\n            {\r\n                dataField: 'countProduct',\r\n                text: 'Количество товара'\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            c\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.start}\r\n                                onDayChange={this.handleChangeStartDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            по\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.end}\r\n                                onDayChange={this.handleChangeEndDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TableRemote data={this.props.expenses ? this.props.expenses.content : []}\r\n                                                   page={this.props.expenses ? this.props.expenses.number + 1 : 1}\r\n                                                   columns={colExpense}\r\n                                                   entity=\"расход\"\r\n                                                   buttonCreateTitle='Создание нового расхода'\r\n                                                   buttonEditTitle='Изменение расхода'\r\n                                                   sizePerPage={this.props.expenses ? this.props.expenses.size : 0}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   isExport={true}\r\n                                                   export={this.export}\r\n                                                   totalSize={this.props.expenses ? this.props.expenses.totalElements : 0}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n\r\n                {this.state.row ? <ExpenseModal accept={this.accept}\r\n                             open={this.state.openUpdate}\r\n                             isCreate={false}\r\n                             update={this.state.row}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <ExpenseModal accept={this.accept}\r\n                             open={this.state.openCreate} isCreate={true}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    expenses: state.expenseReducer.expenses\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        expenseActions: bindActionCreators(getExpensesAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Expenses);\r\n","export default [\r\n    {\r\n        dataField: 'product.description',\r\n        text: 'Пролукт'\r\n    },\r\n    {\r\n        dataField: 'count',\r\n        text: 'Остаток'\r\n    }\r\n]","export function getAllProductsBalance() {\r\n    return fetch(\"http://localhost:8080/api/getAllProductsBalance\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","export function createIncoming(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(\"http://localhost:8080/api/incoming\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getProducts, getProductsByDescription} from \"../service/productService\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionExpensesByDescription(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getProducts();\r\n    else response = await getProductsByDescription(search);\r\n    let cachedOptions = response.map((d) => ({\r\n        value: d.id,\r\n        label: d.description,\r\n        product: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass BalanceModal extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: undefined,\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputProductChange = this.handleInputProductChange.bind(this);\r\n        this.handleChangeCountProduct = this.handleChangeCountProduct.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.selectProduct\r\n            && this.state.countProduct>0) {\r\n            let incoming = {\r\n                id: this.state.id,\r\n                product: this.state.selectProduct,\r\n                countProduct: this.state.countProduct\r\n            };\r\n            this.props.accept(incoming);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    handleInputProductChange = (newValue) => {\r\n        this.setState({\r\n            selectProduct: newValue.product,\r\n            selectProductByDescription: {\r\n                value: newValue.value,\r\n                label: newValue.product.description,\r\n                product: newValue.product\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeCountProduct = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                countProduct: event.target.value\r\n            });\r\n        }\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2 title-margin\">\r\n                                Товар:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectProductByDescription}\r\n                                    loadOptions={getOptionExpensesByDescription}\r\n                                    onChange={this.handleInputProductChange}\r\n                                    placeholder={'Выберите товар'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectProduct')} aria-describedby=\"selectProduct-error-text\">\r\n                                    { this.validate('selectProduct') ? <FormHelperText id=\"selectProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2 title-margin\">\r\n                                Количество:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.countProduct}\r\n                                           onChange={this.handleChangeCountProduct} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(BalanceModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport colProductBalance from \"../data/colProductBalance\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport {getAllProductsBalance} from \"../service/productBlanceService\";\r\nimport {createIncoming} from \"../service/balanceService\";\r\nimport BalanceModal from \"../modal/BalanceModal\";\r\n\r\nclass Balance extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            openCreate: false\r\n        };\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n        this.createIncoming = this.createIncoming.bind(this);\r\n\r\n        getAllProductsBalance().then(data => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        });\r\n    }\r\n\r\n    createIncoming(entity) {\r\n        createIncoming(entity).then(() => {\r\n            getAllProductsBalance().then(data => {\r\n                this.setState({\r\n                    data: data,\r\n                    openCreate: false\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.onOpenCreateModal } className=\"btn btn-primary\">\r\n                        Добавить приход продукта\r\n                    </button>\r\n                </div>\r\n                <BootstrapTable\r\n                    keyField=\"product.description\"\r\n                    data={this.state.data}\r\n                    columns={colProductBalance}\r\n                />\r\n                <BalanceModal accept={this.createIncoming}\r\n                              open={this.state.openCreate}\r\n                              close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Balance;\r\n","export function getStatisticMastersReport(start, end, reportType, master) {\n    let masterId = master ? \"&masterId=\" + master.id : '';\n    let report = reportType===0 ? \"getStatisticMastersReport\" : \"getIncomesBetweenDate\";\n    return fetch(\"http://localhost:8080/report/\" + report + \"?start=\" + start + \"&end=\" + end + masterId)\n        .then(handleErrors)\n        .then(res => res.json())\n        .then(val => {\n            return val;\n        });\n}\n\nfunction handleErrors(response) {\n    if (!response.ok) {\n        throw Error(response.statusText);\n    }\n    return response;\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport '../style.css';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {getMastersReport} from \"../service/reportService\";\r\nimport {getMasters, getMastersByFiO} from \"../service/masterService\";\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport PageParams from \"../model/PageParams\";\r\nimport {getIncomesBetweenDate, getStatisticMastersReport} from \"../service/dashboardService\";\r\nimport ReactTable from 'react-table'\r\nimport {reportOptions} from \"../data/selectOptions\";\r\nimport Select from 'react-select';\r\n\r\nasync function getOptionMastersByFIO(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getMasters(new PageParams(0, 100));\r\n    else response = await getMastersByFiO(search);\r\n    let cachedOptions = response.content.map((d) => ({\r\n        value: d.id,\r\n        label: d.person.name,\r\n        master: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            masters: undefined,\r\n            all: undefined,\r\n            start: moment().startOf('month').toDate(),\r\n            end: moment().endOf('month').toDate(),\r\n            selectMasterFio: undefined,\r\n            data: [],\r\n            columns: [{\r\n                dataField: 'day',\r\n                text: 'Дата'\r\n            }],\r\n            pageSize: 30,\r\n            reportType: undefined,\r\n            report: 0\r\n        };\r\n        this.handleChangeStartDate = this.handleChangeStartDate.bind(this);\r\n        this.handleChangeEndDate = this.handleChangeEndDate.bind(this);\r\n\r\n        getStatisticMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'), this.state.report).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                pageSize: data.data.length + 1\r\n            });\r\n        });\r\n    }\r\n\r\n    handleChangeStartDate = (newValue) => {\r\n        getStatisticMastersReport(moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'), this.state.report).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                start: newValue,\r\n                pageSize: data.data.length + 1\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeEndDate = (newValue) => {\r\n        getStatisticMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(newValue)).set({hour:23,minute:59,second:59,millisecond:0}).format('YYYY-MM-DD HH:mm:ss'),\r\n            this.state.report).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                end: newValue,\r\n                pageSize: data.data.length + 1\r\n            });\r\n        });\r\n    };\r\n\r\n    export = () => {\r\n        getMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    };\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        getStatisticMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'), this.state.report, newValue.master).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                pageSize: data.data.length + 1,\r\n                selectMaster: newValue.master,\r\n                selectMasterFio: {\r\n                    value: newValue.value,\r\n                    label: newValue.master.person.name,\r\n                    master: newValue.master\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeReport = (newValue) => {\r\n        getStatisticMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'), newValue.value, this.state.selectMaster).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                pageSize: data.data.length + 1,\r\n                reportType: newValue,\r\n                report: newValue.value\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-1 title-margin-date\">\r\n                            c\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.start}\r\n                                onDayChange={this.handleChangeStartDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-1 title-margin-date\">\r\n                            по\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.end}\r\n                                onDayChange={this.handleChangeEndDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-1 title-margin-date\">\r\n                            Мастер:\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <AsyncPaginate\r\n                                value={this.state.selectMasterFio}\r\n                                loadOptions={getOptionMastersByFIO}\r\n                                onChange={this.handleInputMasterChange}\r\n                                placeholder={'Выберите мастера'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <div className=\"container\" >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-3 title-margin-date\">\r\n                                <button onClick = { this.export } className=\"btn btn-primary\">\r\n                                    Выгрузить сводный отчет\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-sm-1  title-margin-date\">\r\n                                Отчет:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <Select\r\n                                    value={this.state.reportType}\r\n                                    options={reportOptions()}\r\n                                    placeholder={''}\r\n                                    onChange={this.handleChangeReport}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <ReactTable\r\n                        data={this.state.data}\r\n                        columns={this.state.columns}\r\n                        showPagination={false}\r\n                        pageSize={this.state.pageSize}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","export const userService = {\n    login,\n    logout\n};\n\nfunction login(login, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ login, password })\n    };\n\n    return fetch(`http://localhost:8080/api/login`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            if (user) {\n                user.authdata = window.btoa(login + ':' + password);\n                localStorage.setItem('user', JSON.stringify(user));\n            }\n            return user;\n        });\n}\n\nfunction logout() {\n    localStorage.removeItem('user');\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                logout();\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n        return data;\n    });\n}","import React from 'react';\r\n\r\nimport {userService} from '../service/userService';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        userService.logout();\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false,\r\n            loading: false,\r\n            error: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value,\r\n            error: ''\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({ submitted: true });\r\n        const { username, password } = this.state;\r\n        if (!(username && password)) {\r\n            return;\r\n        }\r\n        this.setState({ loading: true });\r\n        userService.login(username, password)\r\n            .then(\r\n                user => {\r\n                    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n                    this.props.history.push(from);\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                    this.setState({ error: 'Логин или пароль введены неверно', loading: false });\r\n                }\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const { username, password, submitted, loading, error } = this.state;\r\n        return (\r\n            <div className=\"login-div\">\r\n                <form name=\"form\" onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <div className={'form-group' + (submitted && !username ? ' has-error' : '')}>\r\n                        <label htmlFor=\"username\">Логин</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"username\" value={username} onChange={this.handleChange} />\r\n                        {submitted && !username &&\r\n                        <div className=\"help-block\">Введите логин</div>\r\n                        }\r\n                    </div>\r\n                    <div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\r\n                        <label htmlFor=\"password\">Пароль</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={this.handleChange} />\r\n                        {submitted && !password &&\r\n                        <div className=\"help-block\">Введите пароль</div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary\" disabled={loading}>Войти</button>\r\n                    </div>\r\n                    {error &&\r\n                    <div className={'alert alert-danger'}>{error}</div>\r\n                    }\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        localStorage.getItem('user')\n            ? <Component {...props} />\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    )} />\n)","import styled from \"styled-components\";\r\n\r\nexport const AppContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Navigation = styled.div`\r\n  width: 220px;\r\n  flex-shrink: 0;\r\n  background: #fff;\r\n  border-right: 1px solid rgba(0, 0, 0, 0.125);\r\n  background-color: rgba(79, 88, 87, 0.54);\r\n`;\r\nexport const Body = styled.div`\r\n  padding: 12px;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 12px;\r\n  background-color: rgba(79, 88, 87, 0.54);\r\n`;\r\n","export default [\r\n    {\r\n        dataField: 'id',\r\n        text: 'ID'\r\n    },\r\n    {\r\n        dataField: 'description',\r\n        text: 'Название услуги'\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport '../react-day-picker.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControlDescription: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nclass ProcedureModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            service: {\r\n                description: ''\r\n            },\r\n            submit: false\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.select)\r\n            this.setState({\r\n                service: this.props.select\r\n            });\r\n    }\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.service.description) {\r\n            this.props.accept(this.state.service);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    clear() {\r\n        this.setState({\r\n            service: {\r\n                description: ''\r\n            },\r\n            submit: false\r\n        });\r\n    }\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state.service || !this.state.service[field]);\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            service: {\r\n                ...this.state.service,\r\n                [name]: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div>\r\n                        <div className={classes.container}>\r\n                            <FormControl className={classes.formControlDescription} error={this.validate('description')} aria-describedby=\"description-error-text\">\r\n                                <InputLabel htmlFor=\"description\">Описание</InputLabel>\r\n                                <Input id=\"description\" value={this.state.service.description} onChange={this.handleChange('description')} />\r\n                                { this.validate('description') ? <FormHelperText id=\"description-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ProcedureModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colProcedure from \"../data/colProcedure\";\r\nimport ServiceModal from \"../modal/ProcedureModal\";\r\nimport {createProcedure, getProcedures, updateProcedure} from \"../service/procedureService\";\r\n\r\nclass Procedures extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            openCreate: false,\r\n            openUpdate: false\r\n        };\r\n        this.createProcedure = this.createProcedure.bind(this);\r\n        this.updateProcedure = this.updateProcedure.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.handleOnSelect = this.handleOnSelect.bind(this);\r\n        getProcedures().then(data => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        });\r\n    }\r\n\r\n    createProcedure(entity) {\r\n        createProcedure(entity).then(() => {\r\n            getProcedures().then(data => {\r\n                this.setState({\r\n                    openCreate: false,\r\n                    data: data\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    updateProcedure(entity) {\r\n        updateProcedure(entity).then(() => {\r\n            getProcedures().then(data => {\r\n                this.setState({\r\n                    openUpdate: false,\r\n                    data: data,\r\n                    select: entity\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false\r\n        });\r\n    };\r\n\r\n    onOpenUpdateModal () {\r\n        this.setState({\r\n            openUpdate: true\r\n        });\r\n    };\r\n\r\n    handleOnSelect = (row) => {\r\n        this.setState({\r\n            select : row\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const selectRow = {\r\n            mode: 'radio',\r\n            clickToSelect: true,\r\n            hideSelectColumn: true,\r\n            bgColor: '#00BFFF',\r\n            onSelect: this.handleOnSelect,\r\n        };\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.onOpenCreateModal } className=\"btn btn-primary\">\r\n                        Добавить новую услугу\r\n                    </button>\r\n                    { this.state.select ? <button onClick = { this.onOpenUpdateModal } className=\"btn btn-primary\">\r\n                        Редактировать услугу\r\n                    </button> : null }\r\n                </div>\r\n                {this.state.data ? <BootstrapTable\r\n                    keyField=\"id\"\r\n                    selectRow={ selectRow }\r\n                    data={this.state.data}\r\n                    columns={colProcedure}\r\n                />: null}\r\n                <ServiceModal accept={this.createProcedure}\r\n                              open={this.state.openCreate}\r\n                              close={this.onCloseCreateModal} />\r\n                {this.state.openUpdate ? <ServiceModal accept={this.updateProcedure}\r\n                                                       open={this.state.openUpdate}\r\n                                                       select={this.state.select}\r\n                                                       close={this.onCloseUpdateModal} /> : null }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Procedures;\r\n","import React from \"react\";\r\n\r\nfunction  maxLength(cell) {\r\n    let max = cell !== 0 ? cell : \"более\";\r\n    return (\r\n        <span>{max}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'minLength',\r\n        text: 'Минимальная длина'\r\n    },\r\n    {\r\n        dataField: 'maxLength',\r\n        text: 'Максимальная длина',\r\n        formatter: maxLength\r\n    },\r\n    {\r\n        dataField: 'price',\r\n        text: 'Стоимость за грамм'\r\n    }\r\n]","import {typeHairFormatter, typeMasterFormatter} from \"../data/formatter\";\r\n\r\nimport React from \"react\";\r\n\r\nfunction typeMaster(cell) {\r\n    return (\r\n        <span>{typeMasterFormatter(cell)}</span>\r\n    );\r\n}\r\n\r\nfunction typeHair(cell) {\r\n    return (\r\n        <span>{typeHairFormatter(cell)}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'price',\r\n        text: 'Стоимсоть за прядь'\r\n    },\r\n    {\r\n        dataField: 'masterType',\r\n        text: 'Категория мастера',\r\n        formatter: typeMaster\r\n    },\r\n    {\r\n        dataField: 'hairType',\r\n        text: 'Тип работ',\r\n        formatter: typeHair\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport {getAllHairCategories, getAllHairs} from \"../service/hairService\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colHair from \"../data/colHair\";\r\nimport colHairCategory from \"../data/colHairCategory\";\r\n\r\nclass Directory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hairsCategory: [],\r\n            hairs: []\r\n        };\r\n        getAllHairCategories().then(data => {\r\n            this.setState({\r\n                hairsCategory: data\r\n            })\r\n        });\r\n        getAllHairs().then(data => {\r\n            this.setState({\r\n                hairs: data\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <h4>\r\n                    Прайс стоимсоти услуг мастеров:\r\n                </h4>\r\n                <BootstrapTable\r\n                    keyField=\"id\"\r\n                    data={this.state.hairsCategory}\r\n                    columns={colHairCategory}\r\n                />\r\n                <hr/>\r\n                <h4>\r\n                    Прайс стоимости волос:\r\n                </h4>\r\n                <BootstrapTable\r\n                    keyField=\"id\"\r\n                    data={this.state.hairs}\r\n                    columns={colHair}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Directory;\r\n","export function getSales(params) {\r\n    return fetch(\"http://localhost:8080/api/sales?page=\" + params.page\r\n        + \"&size=\" + params.size)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function updateSale(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createSale(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(\"http://localhost:8080/api/sale\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_SALES} from \"../constants/saleConstants\";\r\nimport {getSales} from \"../service/saleService\";\r\n\r\nexport const getSalesAction = (params) => dispatch => {\r\n    getSales(params).then(sales => {\r\n        dispatch({\r\n            type: GET_SALES,\r\n            payload: sales\r\n        })\r\n    });\r\n};","export const GET_SALES = \"GET_SALES\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getProducts, getProductsByDescription} from \"../service/productService\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {createSale, updateSale} from \"../service/saleService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionExpensesByDescription(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getProducts();\r\n    else response = await getProductsByDescription(search);\r\n    let cachedOptions = response.map((d) => ({\r\n        value: d.id,\r\n        label: d.description,\r\n        product: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass SaleModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputProductChange = this.handleInputProductChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeCountProduct = this.handleChangeCountProduct.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                id: this.props.update.id,\r\n                date: this.props.update.date ? moment.unix(this.props.update.date).toDate() : new Date(),\r\n                countProduct: this.props.update.countProduct,\r\n                selectProduct: this.props.update.product,\r\n                cost: this.props.update.cost,\r\n                selectProductByDescription: {\r\n                    value: this.props.update.product.id,\r\n                    label: this.props.update.product.description,\r\n                    product: this.props.update.product\r\n                },\r\n                error: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.selectProduct\r\n            && this.state.countProduct>0\r\n            && this.state.date) {\r\n            let sale = {\r\n                id: this.state.id,\r\n                date: this.state.date,\r\n                product: this.state.selectProduct,\r\n                cost: this.state.cost,\r\n                countProduct: this.state.countProduct\r\n            };\r\n            if (this.props.isCreate) this.createSale(sale);\r\n            else this.updateSale(sale);\r\n        }\r\n    };\r\n\r\n    updateSale(entity) {\r\n        updateSale(entity).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    createSale(entity) {\r\n        createSale(entity).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    handleInputProductChange = (newValue) => {\r\n        this.setState({\r\n            selectProduct: newValue.product,\r\n            selectProductByDescription: {\r\n                value: newValue.value,\r\n                label: newValue.product.description,\r\n                product: newValue.product\r\n            },\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeCountProduct = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                countProduct: event.target.value,\r\n                error: undefined\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Товар:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectProductByDescription}\r\n                                    loadOptions={getOptionExpensesByDescription}\r\n                                    onChange={this.handleInputProductChange}\r\n                                    placeholder={'Выберите товар'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectProduct')} aria-describedby=\"selectProduct-error-text\">\r\n                                    { this.validate('selectProduct') ? <FormHelperText id=\"selectProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                Количество:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.countProduct}\r\n                                           onChange={this.handleChangeCountProduct} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Дата:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <DayPickerInput\r\n                                    placeholder={`Дата расхода`}\r\n                                    parseDate={parseDate}\r\n                                    value={this.state.date}\r\n                                    onDayChange={this.handleChangeDate}\r\n                                    formatDate={formatDate}\r\n                                    dayPickerProps={{\r\n                                        locale: 'ru',\r\n                                        localeUtils: MomentLocaleUtils,\r\n                                    }}/>\r\n                                <FormControl className={classes.formControl} error={this.validate('date')} aria-describedby=\"date-error-text\">\r\n                                    { this.validate('date') ? <FormHelperText id=\"date-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { this.state.error ? <div className=\"row error_label\">\r\n                        {this.state.error}\r\n                    </div> : null}\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SaleModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport {connect} from 'react-redux';\r\nimport {getSalesAction} from \"../actions/saleActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport {getProducts} from \"../service/productService\";\r\nimport moment from 'moment'\r\nimport SaleModal from \"../modal/SaleModal\";\r\n\r\nclass Sales extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            productOptions: {},\r\n            row: undefined,\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.accept = this.accept.bind(this);\r\n\r\n        this.props.saleActions(new PageParams(0, 10));\r\n\r\n        getProducts().then(products => {\r\n            let productOptions = {};\r\n            products.forEach(product => {\r\n                productOptions[product.id] = product.description;\r\n            });\r\n            this.setState({\r\n                productOptions: productOptions\r\n            })\r\n        });\r\n    }\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined,\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false,\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {sortField, sortOrder, filters, page, sizePerPage}) => {\r\n        this.props.saleActions(new PageParams(page - 1, sizePerPage, sortField, sortOrder, filters));\r\n    };\r\n\r\n    accept() {\r\n        this.props.saleActions(new PageParams(\r\n            this.props.sales.number,\r\n            this.props.sales.size\r\n        ));\r\n        this.setState({\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const colSale = [\r\n            {\r\n                dataField: 'date',\r\n                text: 'Дата продажи',\r\n                formatter: (cellContent) => {\r\n                    return (\r\n                        <div>\r\n                            {moment.unix(cellContent).format(\"DD.MM.YYYY\")}\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                dataField: 'product.description',\r\n                text: 'Товар'\r\n            },\r\n            {\r\n                dataField: 'countProduct',\r\n                text: 'Количество товара'\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"main-div\">\r\n                <TableRemote data={this.props.sales ? this.props.sales.content : []}\r\n                                                   page={this.props.sales ? this.props.sales.number + 1 : 1}\r\n                                                   columns={colSale}\r\n                                                   entity=\"продажа\"\r\n                                                   buttonCreateTitle='Создание новой продажи'\r\n                                                   buttonEditTitle='Изменение продажи'\r\n                                                   sizePerPage={this.props.sales ? this.props.sales.size : 0}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   totalSize={this.props.sales ? this.props.sales.totalElements : 0}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n\r\n                {this.state.row ? <SaleModal accept={this.accept}\r\n                             open={this.state.openUpdate}\r\n                             update={this.state.row}\r\n                             isCreate={false}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <SaleModal accept={this.accept}\r\n                             open={this.state.openCreate}\r\n                             isCreate={true}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    sales: state.saleReducer.sales\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        saleActions: bindActionCreators(getSalesAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sales);\r\n","export function getIncomings(params, start, end) {\r\n    let sort = params.sortField ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterProduct= params.filters && params.filters['product.description'] ? \"&productId=\" + params.filters['product.description'].filterVal : '';\r\n    return fetch(\"http://localhost:8080/api/incomings?page=\" + params.page\r\n        + \"&size=\" + params.size + sort + filterProduct + \"&start=\" + start + \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function updateIncoming(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createIncoming(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(\"http://localhost:8080/api/incoming\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","export const GET_INCOMINGS = \"GET_INCOMINGS\";","import {getIncomings} from \"../service/incomingService\";\r\nimport {GET_INCOMINGS} from \"../constants/incomingConstants\";\r\n\r\nexport const getIncomingAction = (params, start, end) => dispatch => {\r\n    getIncomings(params, start, end).then(incoming => {\r\n        dispatch({\r\n            type: GET_INCOMINGS,\r\n            payload: incoming\r\n        })\r\n    });\r\n};","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getProducts, getProductsByDescription} from \"../service/productService\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {createIncoming, updateIncoming} from \"../service/incomingService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionIncomingByDescription(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getProducts();\r\n    else response = await getProductsByDescription(search);\r\n    let cachedOptions = response.map((d) => ({\r\n        value: d.id,\r\n        label: d.description,\r\n        product: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass IncomingModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputProductChange = this.handleInputProductChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeCountProduct = this.handleChangeCountProduct.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                id: this.props.update.id,\r\n                date: this.props.update.date ? moment.unix(this.props.update.date).toDate() : new Date(),\r\n                countProduct: this.props.update.countProduct,\r\n                selectProduct: this.props.update.product,\r\n                selectProductByDescription: {\r\n                    value: this.props.update.product.id,\r\n                    label: this.props.update.product.description,\r\n                    product: this.props.update.product\r\n                },\r\n                error: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.selectProduct\r\n            && this.state.countProduct>0\r\n            && this.state.date) {\r\n            let incoming = {\r\n                id: this.state.id,\r\n                date: this.state.date,\r\n                product: this.state.selectProduct,\r\n                countProduct: this.state.countProduct\r\n            };\r\n            if (this.props.isCreate) this.createIncoming(incoming);\r\n            else this.updateIncoming(incoming);\r\n        }\r\n    };\r\n\r\n    updateIncoming(entity) {\r\n        updateIncoming(entity).then(resp => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    createIncoming(entity) {\r\n        createIncoming(entity).then(resp => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    handleInputProductChange = (newValue) => {\r\n        this.setState({\r\n            selectProduct: newValue.product,\r\n            selectProductByDescription: {\r\n                value: newValue.value,\r\n                label: newValue.product.description,\r\n                product: newValue.product\r\n            },\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeCountProduct = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                countProduct: event.target.value,\r\n                error: undefined\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Товар:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectProductByDescription}\r\n                                    loadOptions={getOptionIncomingByDescription}\r\n                                    onChange={this.handleInputProductChange}\r\n                                    placeholder={'Выберите товар'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectProduct')} aria-describedby=\"selectProduct-error-text\">\r\n                                    { this.validate('selectProduct') ? <FormHelperText id=\"selectProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                Количество:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.countProduct}\r\n                                           onChange={this.handleChangeCountProduct} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Дата:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <DayPickerInput\r\n                                placeholder={`Дата прихода`}\r\n                                parseDate={parseDate}\r\n                                value={this.state.date}\r\n                                onDayChange={this.handleChangeDate}\r\n                                formatDate={formatDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                }}/>\r\n                            <FormControl className={classes.formControl} error={this.validate('date')} aria-describedby=\"date-error-text\">\r\n                                { this.validate('date') ? <FormHelperText id=\"date-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    { this.state.error ? <div className=\"row error_label\">\r\n                        {this.state.error}\r\n                    </div> : null}\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(IncomingModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport {connect} from 'react-redux';\r\nimport {getIncomingAction} from \"../actions/incomingActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport IncomingModal from \"../modal/IncomingModal\";\r\nimport {selectFilter} from \"react-bootstrap-table2-filter\";\r\nimport {getProducts} from \"../service/productService\";\r\nimport moment from 'moment'\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport {getIncomingReport} from \"../service/reportService\";\r\n\r\nclass Incoming extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            sortField: '',\r\n            sortOrder: '',\r\n            productOptions: {},\r\n            filters: {},\r\n            row: undefined,\r\n            error: undefined,\r\n            start: moment().startOf('month').toDate(),\r\n            end: moment().endOf('month').toDate()\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.accept = this.accept.bind(this);\r\n        this.export = this.export.bind(this);\r\n\r\n        this.props.incomingActions(new PageParams(0, 10, \"date\", \"asc\"),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n\r\n        getProducts().then(products => {\r\n            let productOptions = {};\r\n            products.forEach(product => {\r\n                productOptions[product.id] = product.description;\r\n            });\r\n            this.setState({\r\n                productOptions: productOptions\r\n            })\r\n        });\r\n    }\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {sortField, sortOrder, filters, page, sizePerPage}) => {\r\n        this.setState({\r\n            sortField: sortField,\r\n            sortOrder: sortOrder,\r\n            filters: filters\r\n        });\r\n        this.props.incomingActions(new PageParams(page - 1, sizePerPage, sortField, sortOrder, filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    };\r\n\r\n    accept() {\r\n        this.props.incomingActions(new PageParams(\r\n            this.props.incoming.number,\r\n            this.props.incoming.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeStartDate = (newValue) => {\r\n        this.props.incomingActions(new PageParams(\r\n            this.props.incoming.number,\r\n            this.props.incoming.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            start: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeEndDate = (newValue) => {\r\n        this.props.expenseActions(new PageParams(\r\n            this.props.incoming.number,\r\n            this.props.incoming.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            end: newValue\r\n        });\r\n    };\r\n\r\n    export() {\r\n        getIncomingReport(new PageParams(\r\n            this.props.incoming.number,\r\n            this.props.incoming.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    }\r\n\r\n    render() {\r\n        const colIncoming = [\r\n            {\r\n                dataField: 'date',\r\n                text: 'Дата прихода',\r\n                sort: true,\r\n                formatter: (cellContent) => {\r\n                    return (\r\n                        <div>\r\n                            {moment.unix(cellContent).format(\"DD.MM.YYYY\")}\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                dataField: 'product.description',\r\n                text: '',\r\n                sort: true,\r\n                filter: selectFilter({\r\n                    placeholder: 'Товар',\r\n                    style: {\r\n                        backgroundColor: '#e4e4e1'\r\n                    },\r\n                    options: this.state.productOptions\r\n                })\r\n            },\r\n            {\r\n                dataField: 'countProduct',\r\n                text: 'Количество товара'\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            c\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.start}\r\n                                onDayChange={this.handleChangeStartDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            по\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.end}\r\n                                onDayChange={this.handleChangeEndDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TableRemote data={this.props.incoming ? this.props.incoming.content : []}\r\n                                                   page={this.props.incoming ? this.props.incoming.number + 1 : 1}\r\n                                                   columns={colIncoming}\r\n                                                   entity=\"приход\"\r\n                                                   buttonCreateTitle='Создание нового прихода'\r\n                                                   buttonEditTitle='Изменение прихода'\r\n                                                   sizePerPage={this.props.incoming ? this.props.incoming.size : 0}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   isExport={true}\r\n                                                   export={this.export}\r\n                                                   totalSize={this.props.incoming ? this.props.incoming.totalElements : 0}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n\r\n                {this.state.row ? <IncomingModal accept={this.accept}\r\n                             open={this.state.openUpdate}\r\n                             isCreate={false}\r\n                             update={this.state.row}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <IncomingModal accept={this.accept}\r\n                             open={this.state.openCreate} isCreate={true}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    incoming: state.incomingReducer.incoming\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        incomingActions: bindActionCreators(getIncomingAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Incoming);\r\n","export function getAdditionalIncomes(params, start, end) {\r\n    let sort = params.sortField ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterMaster= params.filters && params.filters['master.person.name'] ? \"&masterId=\" + params.filters['master.person.name'].filterVal : '';\r\n    return fetch(\"http://localhost:8080/api/additionalIncomes?page=\" + params.page\r\n        + \"&size=\" + params.size + sort + filterMaster + \"&start=\" + start + \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function updateAdditionalIncome(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createAdditionalIncome(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(\"http://localhost:8080/api/additionalIncome\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_ADDITIONAL_INCOME} from \"../constants/additionalIncomeConstants\";\r\nimport {getAdditionalIncomes} from \"../service/additionalIncomeService\";\r\n\r\nexport const getAdditionalIncomesAction = (params, start, end) => dispatch => {\r\n    getAdditionalIncomes(params, start, end).then(incomes => {\r\n        dispatch({\r\n            type: GET_ADDITIONAL_INCOME,\r\n            payload: incomes\r\n        })\r\n    });\r\n};","export const GET_ADDITIONAL_INCOME = \"GET_ADDITIONAL_INCOME\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getMasters, getMastersByFiO} from \"../service/masterService\";\r\nimport PageParams from \"../model/PageParams\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {createAdditionalIncome, updateAdditionalIncome} from \"../service/additionalIncomeService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionMastersByFIO(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getMasters(new PageParams(0, 100));\r\n    else response = await getMastersByFiO(search);\r\n    let cachedOptions = response.content.map((d) => ({\r\n        value: d.id,\r\n        label: d.person.name,\r\n        master: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass AdditionalIncomeModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectMaster: undefined,\r\n            selectMasterFio: undefined,\r\n            sum: 0,\r\n            submit: false,\r\n            error: undefined\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputMasterChange = this.handleInputMasterChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeSum = this.handleChangeSum.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                id: this.props.update.id,\r\n                date: this.props.update.date ? moment.unix(this.props.update.date).toDate() : new Date(),\r\n                sum: this.props.update.sum,\r\n                selectMaster: this.props.update.master,\r\n                selectMasterFio: {\r\n                    value: this.props.update.master.id,\r\n                    label: this.props.update.master.person.name,\r\n                    master: this.props.update.master\r\n                },\r\n                error: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectMaster: undefined,\r\n            selectMasterFio: undefined,\r\n            sum: 0,\r\n            submit: false,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.sum>0\r\n            && this.state.selectMaster\r\n            && this.state.date) {\r\n            let additionalIncome = {\r\n                id: this.state.id,\r\n                date: this.state.date,\r\n                master: this.state.selectMaster,\r\n                sum: this.state.sum\r\n            };\r\n            if (this.props.isCreate) this.createAdditionalIncome(additionalIncome);\r\n            else this.updateAdditionalIncome(additionalIncome);\r\n        }\r\n    };\r\n\r\n    updateAdditionalIncome(entity) {\r\n        updateAdditionalIncome(entity).then(resp => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    createAdditionalIncome(entity) {\r\n        createAdditionalIncome(entity).then(resp => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        this.setState({\r\n            selectMaster: newValue.master,\r\n            selectMasterFio: {\r\n                value: newValue.value,\r\n                label: newValue.master.person.name,\r\n                master: newValue.master\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeSum = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                sum: event.target.value,\r\n                error: undefined\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Мастер:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectMasterFio}\r\n                                    loadOptions={getOptionMastersByFIO}\r\n                                    onChange={this.handleInputMasterChange}\r\n                                    placeholder={'Выберите мастера'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectMaster')} aria-describedby=\"selectMaster-error-text\">\r\n                                    { this.validate('selectMaster') ? <FormHelperText id=\"selectMaster-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                Сумма:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.sum}\r\n                                           onChange={this.handleChangeSum} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Дата:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <DayPickerInput\r\n                                placeholder={`Дата расхода`}\r\n                                parseDate={parseDate}\r\n                                value={this.state.date}\r\n                                onDayChange={this.handleChangeDate}\r\n                                formatDate={formatDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                }}/>\r\n                            <FormControl className={classes.formControl} error={this.validate('date')} aria-describedby=\"date-error-text\">\r\n                                { this.validate('date') ? <FormHelperText id=\"date-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    { this.state.error ? <div className=\"row error_label\">\r\n                        {this.state.error}\r\n                    </div> : null}\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AdditionalIncomeModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport {connect} from 'react-redux';\r\nimport {getAdditionalIncomesAction} from \"../actions/additionalIncomeActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport AdditionalIncomeModal from \"../modal/AdditionalIncomeModal\";\r\nimport {getAllMasters} from \"../service/masterService\";\r\nimport {selectFilter} from \"react-bootstrap-table2-filter\";\r\nimport moment from 'moment'\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport {getAdditionalIncomingReport} from \"../service/reportService\";\r\n\r\nclass AdditionalIncome extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            sortField: '',\r\n            sortOrder: '',\r\n            masterOptions: {},\r\n            filters: {},\r\n            row: undefined,\r\n            error: undefined,\r\n            start: moment().startOf('month').toDate(),\r\n            end: moment().endOf('month').toDate()\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.accept = this.accept.bind(this);\r\n        this.export = this.export.bind(this);\r\n\r\n        this.props.additionalIncomesActions(new PageParams(0, 10, \"date\", \"asc\"),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n\r\n        getAllMasters().then(masters => {\r\n            let masterOptions = {};\r\n            masters.forEach(master => {\r\n                masterOptions[master.id] = master.person.name;\r\n            });\r\n            this.setState({\r\n                masterOptions: masterOptions\r\n            })\r\n        });\r\n    }\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {sortField, sortOrder, filters, page, sizePerPage}) => {\r\n        this.setState({\r\n            sortField: sortField,\r\n            sortOrder: sortOrder,\r\n            filters: filters\r\n        });\r\n        this.props.additionalIncomesActions(new PageParams(page - 1, sizePerPage, sortField, sortOrder, filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    };\r\n\r\n    accept() {\r\n        this.props.additionalIncomesActions(new PageParams(\r\n            this.props.incomes.number,\r\n            this.props.incomes.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeStartDate = (newValue) => {\r\n        this.props.additionalIncomesActions(new PageParams(\r\n            this.props.incomes.number,\r\n            this.props.incomes.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            start: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeEndDate = (newValue) => {\r\n        this.props.additionalIncomesActions(new PageParams(\r\n            this.props.incomes.number,\r\n            this.props.incomes.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            end: newValue\r\n        });\r\n    };\r\n\r\n    export() {\r\n        getAdditionalIncomingReport(new PageParams(\r\n            this.props.incomes.number,\r\n            this.props.incomes.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    }\r\n\r\n    render() {\r\n        const colAdditionalIncome = [\r\n            {\r\n                dataField: 'date',\r\n                text: 'Дата',\r\n                sort: true,\r\n                formatter: (cellContent) => {\r\n                    return (\r\n                        <div>\r\n                            {moment.unix(cellContent).format(\"DD.MM.YYYY\")}\r\n                        </div>\r\n                    )\r\n                }\r\n            },{\r\n                dataField: 'master.person.name',\r\n                text: '',\r\n                sort: true,\r\n                filter: selectFilter({\r\n                    placeholder: 'Мастер',\r\n                    style: {\r\n                        backgroundColor: '#e4e4e1'\r\n                    },\r\n                    options: this.state.masterOptions\r\n                })\r\n            },\r\n            {\r\n                dataField: 'sum',\r\n                text: 'Сумма'\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            c\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.start}\r\n                                onDayChange={this.handleChangeStartDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            по\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.end}\r\n                                onDayChange={this.handleChangeEndDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TableRemote data={this.props.incomes ? this.props.incomes.content : []}\r\n                                                   page={this.props.incomes ? this.props.incomes.number + 1 : 1}\r\n                                                   columns={colAdditionalIncome}\r\n                                                   entity=\"заработок\"\r\n                                                   buttonCreateTitle='Создание новой записи'\r\n                                                   buttonEditTitle='Изменение записи'\r\n                                                   sizePerPage={this.props.incomes ? this.props.incomes.size : 0}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   isExport={true}\r\n                                                   export={this.export}\r\n                                                   totalSize={this.props.incomes ? this.props.incomes.totalElements : 0}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n\r\n                {this.state.row ? <AdditionalIncomeModal accept={this.accept}\r\n                             open={this.state.openUpdate}\r\n                             isCreate={false}\r\n                             update={this.state.row}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <AdditionalIncomeModal accept={this.accept}\r\n                             open={this.state.openCreate} isCreate={true}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    incomes: state.additionalIncomeReducer.incomes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        additionalIncomesActions: bindActionCreators(getAdditionalIncomesAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdditionalIncome);\r\n","import React, {Component} from 'react';\r\nimport {MemoryRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Clients from './components/Clients';\r\nimport Masters from './components/Masters';\r\nimport Timetable from \"./components/TimeTable\";\r\nimport Products from \"./components/Products\";\r\nimport Expenses from \"./components/Expenses\";\r\nimport Balance from \"./components/Balance\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport {PrivateRoute} from './route/PrivateRoute';\r\nimport Calendar from 'react-calendar';\r\nimport SideNav, {NavIcon, NavItem, NavText} from '@trendmicro/react-sidenav';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport {Title} from \"./model/containers\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport logo from './logo.jpg';\r\nimport Procedures from \"./components/Procedures\";\r\nimport Directory from \"./components/Directory\";\r\nimport Sales from \"./components/Sales\";\r\nimport moment from \"moment/moment\";\r\nimport Incoming from \"./components/Incoming\";\r\nimport AdditionalIncome from \"./components/AdditionalIncome\";\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedPath: ''\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Route render={({location, history}) => (\r\n                    <React.Fragment>\r\n                        {localStorage.getItem('user') ? <SideNav defaultExpanded={true}\r\n                            onSelect={(selected) => {\r\n                                if (selected === 'logout') {\r\n                                    localStorage.clear();\r\n                                    window.location.reload();\r\n                                }\r\n                                const to = '/' + selected;\r\n                                if (location.pathname !== to) {\r\n                                    history.push(to);\r\n                                }\r\n                            }}>\r\n                            <SideNav.Nav defaultSelected=\"\">\r\n                                <Title><img src={logo} className='logo-image'/><span className='logo-span'>Укротители волос</span></Title>\r\n                                <Calendar onChange={date => history.push(\"/?date=\" + moment(date).format('YYYY-MM-DD HH:mm:ss'))}/>\r\n                                <NavItem eventKey=\"\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-home\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        График\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"masters\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-user\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Мастера\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"clients\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-users\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Клиенты\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"products\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-product-hunt\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Аксессуары\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"balance\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-balance-scale\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Остатки\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"incoming\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-plus-circle\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Приход\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"expenses\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-minus-circle\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Расход\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"sales\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-shopping-cart\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Продажи\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"additionalIncomes\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-user\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Доп. заработок\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"procedures\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-cut\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Услуги\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"directory\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-book fa-fw\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Справочники\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"dashboard\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-bar-chart-o fa-fw\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Статистика\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"logout\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-sign-out\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Выход\r\n                                    </NavText>\r\n                                </NavItem>\r\n                            </SideNav.Nav>\r\n                        </SideNav> : null}\r\n                        <main>\r\n                            <Route path=\"/login\" component={LoginPage}/>\r\n                            <PrivateRoute exact path='/' component={Timetable}/>\r\n                            <PrivateRoute path=\"/masters\" component={Masters}/>\r\n                            <PrivateRoute path=\"/clients\" component={Clients}/>\r\n                            <PrivateRoute path=\"/products\" component={Products}/>\r\n                            <PrivateRoute path=\"/balance\" component={Balance}/>\r\n                            <PrivateRoute path=\"/expenses\" component={Expenses}/>\r\n                            <PrivateRoute path=\"/incoming\" component={Incoming}/>\r\n                            <PrivateRoute path=\"/sales\" component={Sales}/>\r\n                            <PrivateRoute path=\"/additionalIncomes\" component={AdditionalIncome}/>\r\n                            <PrivateRoute path=\"/procedures\" component={Procedures}/>\r\n                            <PrivateRoute path=\"/dashboard\" component={Dashboard}/>\r\n                            <PrivateRoute path=\"/directory\" component={Directory}/>\r\n                        </main>\r\n                    </React.Fragment>\r\n                )}\r\n                />\r\n            </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport masterReducer from './masterReducer';\r\nimport clientReducer from './clientReducer';\r\nimport timeSlotReducer from './timeSlotReducer';\r\nimport expenseReducer from './expenseReducer';\r\nimport saleReducer from './saleReducer';\r\nimport incomingReducer from './incomingReducer';\r\nimport additionalIncomeReducer from './additionalIncomeReducer';\r\n\r\nexport default combineReducers({\r\n    masterReducer,\r\n    clientReducer,\r\n    timeSlotReducer,\r\n    expenseReducer,\r\n    saleReducer,\r\n    incomingReducer,\r\n    additionalIncomeReducer\r\n});","import {GET_ALL_MASTERS, GET_MASTERS} from \"../constants/masterConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_MASTERS:\n            return { ...state, masters:action.payload };\n        case GET_ALL_MASTERS:\n            return { ...state, allMasters:action.payload };\n        default:\n            return state\n    }\n}","import {GET_CLIENTS} from \"../constants/clientConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_CLIENTS:\n            return { ...state, clients:action.payload };\n        default:\n            return state\n    }\n}","import {GET_TIME_SLOTS} from \"../constants/timeSlotConstants\";\nimport moment from \"moment/moment\";\n\nexport default (state = {timeSlots:[], resources:[]}, action) => {\n    switch (action.type) {\n        case GET_TIME_SLOTS:\n            let evants = action.payload.map(timeSlot => {\n                let event = {\n                    id: timeSlot.id,\n                    resourceId: timeSlot.master.id,\n                    title: \"\\nМастер: \" + timeSlot.master.person.name\n                        + \" \\nКлиент: \" + timeSlot.client.person.name\n                        + \" \\nУслуга: \" + timeSlot.service.description\n                        + \" Цена: \" + timeSlot.price,\n                    timeSlot: timeSlot,\n                    start: moment.unix(timeSlot.startSlot).toDate(),\n                    end: moment.unix(timeSlot.endSlot).toDate()\n                };\n                return event;\n            });\n            let resources = action.payload.map(timeSlot => {\n                let resource = {\n                    id: timeSlot.master.id,\n                    title: timeSlot.master.person.name\n                };\n                return resource;\n            });\n            return {\n                ...state,\n                timeSlots:evants,\n                resources:resources\n            };\n        default:\n            return state\n    }\n}","import {GET_EXPENSES} from \"../constants/expenseConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_EXPENSES:\n            return { ...state, expenses:action.payload };\n        default:\n            return state\n    }\n}","import {GET_SALES} from \"../constants/saleConstants\";\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_SALES:\r\n            return { ...state, sales:action.payload };\r\n        default:\r\n            return state\r\n    }\r\n}","import {GET_INCOMINGS} from \"../constants/incomingConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_INCOMINGS:\n            return { ...state, incoming:action.payload };\n        default:\n            return state\n    }\n}","import {GET_ADDITIONAL_INCOME} from \"../constants/additionalIncomeConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_ADDITIONAL_INCOME:\n            return { ...state, incomes:action.payload };\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport configureStore from './store';\nimport {MemoryRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer/rootReducer';\nexport default function configureStore() {\n    return createStore(\n        rootReducer,\n        applyMiddleware(thunk)\n    );\n}"],"sourceRoot":""}