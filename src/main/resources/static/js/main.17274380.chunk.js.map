{"version":3,"sources":["logo.jpg","components/remote/TableRemote.js","data/formatter.js","data/colClient.js","model/PageParams.js","service/clientService.js","actions/clientActions.js","constants/clientConstants.js","modal/DeleteModal.js","service/procedureService.js","modal/UpdateModal.js","data/selectOptions.js","components/Clients.js","data/colMaster.js","service/masterService.js","actions/masterActions.js","constants/masterConstants.js","components/Masters.js","data/colClientSlot.js","service/timeSlotService.js","components/HistoryClients.js","service/hairService.js","data/colChangeSlot.js","components/HistoryChangeSlot.js","modal/TimeSlotModal.js","actions/timeSlotActions.js","constants/timeSlotConstants.js","components/TimeTable.js","data/colProduct.js","modal/ProductModal.js","service/productService.js","components/Products.js","service/expenseService.js","actions/expenseActions.js","constants/expenseConstants.js","modal/ExpenseModal.js","service/reportService.js","components/Expenses.js","data/colProductBalance.js","service/productBlanceService.js","service/balanceService.js","modal/BalanceModal.js","components/Balance.js","service/dashboardService.js","components/Dashboard.js","service/userService.js","components/LoginPage.js","route/PrivateRoute.js","model/containers.js","data/colProcedure.js","modal/ProcedureModal.js","components/Procedures.js","data/colHair.js","data/colHairCategory.js","components/Directory.js","service/saleService.js","actions/saleActions.js","constants/saleConstants.js","modal/SaleModal.js","components/Sales.js","service/incomingService.js","constants/incomingConstants.js","actions/incomingActions.js","modal/IncomingModal.js","components/Incoming.js","service/additionalIncomeService.js","actions/additionalIncomeActions.js","constants/additionalIncomeConstants.js","modal/AdditionalIncomeModal.js","components/AdditionalIncome.js","App.js","serviceWorker.js","reducer/rootReducer.js","reducer/masterReducer.js","reducer/clientReducer.js","reducer/timeSlotReducer.js","reducer/expenseReducer.js","reducer/saleReducer.js","reducer/incomingReducer.js","reducer/additionalIncomeReducer.js","index.js","store.js"],"names":["module","exports","__webpack_require__","p","TableRemote","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOnSelect","row","setState","select","state","undefined","bind","assertThisInitialized","removeEntity","updateEntity","createEntity","remove","id","update","create","selectRow","mode","clickToSelect","hideSelectColumn","bgColor","onSelect","react_default","a","createElement","className","onClick","buttonCreateTitle","buttonEditTitle","isExport","export","lib_default","remote","keyField","data","columns","filter","filterFactory","pagination","paginationFactory","page","sizePerPage","totalSize","onTableChange","Component","typeMasterFormatter","cell","typeMasterWorkingDayFormatter","phoneFormatter","person","phone","phoneFormatterToString","substring","colClient","dataField","text","sort","formatter","PageParams","size","sortField","sortOrder","filters","sendRequest","entity","method","options","headers","Headers","content-type","body","JSON","stringify","fetch","getUrl","then","handleErrors","res","response","ok","Error","statusText","getClientsAction","params","dispatch","json","val","getClients","clients","type","payload","DeleteModal","refused","close","accept","index_es","open","closeOnOverlayClick","showCloseIcon","onClose","closeOnEsc","center","getProcedures","NumberFormatCustomPhone","inputRef","onChange","other","objectWithoutProperties","number_format_default","assign","getInputRef","format","mask","onValueChange","values","target","value","thousandSeparator","prefix","UpdateModal","clear","submit","name","length","procedures","handleChange","event","defineProperty","handleChangePerson","objectSpread","handleChangeTypeMaster","newValue","selectType","handleChangeWorkingDay","workingDay","selectWorkingDay","handleChangeProcedures","selectedProcedures","map","option","procedure","handleChangeDate","startDateWork","mail","description","minPrice","maxPrice","submitProcedure","optionProcedures","Date","label","moment","unix","toDate","field","classes","container","FormControl_default","formControl","error","validate","aria-describedby","InputLabel_default","htmlFor","Input_default","FormHelperText_default","inputComponent","DayPickerInput_default","placeholder","parseDate","onDayChange","formatDate","dayPickerProps","locale","localeUtils","MomentLocaleUtils","validateState","react_select_esm","isMulti","closeMenuOnSelect","validateProcedures","withStyles","theme","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","marginTop","width","formControlServices","Clients","onCloseDeleteModal","openDelete","onCloseUpdateModal","openUpdate","onCloseCreateModal","openCreate","handleTableChange","_ref","clientActions","removeClient","onOpenDeleteModal","updateClient","onOpenUpdateModal","createClient","onOpenCreateModal","_this2","client","number","_this3","clientId","_this4","remote_TableRemote","content","totalElements","modal_DeleteModal","modal_UpdateModal","connect","clientReducer","bindActionCreators","colMaster","toLocaleDateString","getMasters","getAllMasters","getMastersByFiO","getMastersAction","masters","Masters","masterActions","removeMaster","updateMaster","createMaster","master","masterReducer","colClientSlot","toLocaleString","status","getTimeSlotsByDate","start","end","createTimeSlot","HistoryClients","slots","expandRow","renderer","hairCountExtension","concat","hairWeight","hairCountRemoval","expandableRow","getAllHairCategories","getAllHairs","colChangeSlot","HistoryChangeSlot","changes","getOptionMastersByFIO","_callee","search","loadedOptions","cachedOptions","regenerator_default","wrap","_context","prev","next","sent","d","abrupt","hasMore","stop","NumberFormatCustom","getClientName","getClientPhone","renderClient","renderSectionTitle","section","title","getSectionClients","TimeSlotModal","delete","menu","selectClient","selectClientName","selectClientPhone","replace","selectMaster","date","some","hairType","selectedHair","clientDescription","startDate","setHours","startHour","setMinutes","startMinutes","endDate","endHour","endMinutes","startSlot","endSlot","allPrice","masterWorkPrice","hair","resp","handleInputMasterChange","selectMasterName","handleChangeStartHour","handleChangeStartMinutes","handleChangeEndHour","handleChangeEndMinutes","handleChangeAndRecountSum","_this$setState2","allSum","masterWorkSum","hairsCategory","hairCategory","masterType","forEach","price","onClientsFetchRequestedByName","changeClients","onClientsFetchRequestedByPhone","_ref2","onClientsClearRequested","onChangeClientName","_ref3","onChangeClientPhone","_ref4","onClientSelected","_ref5","suggestion","handleChangeHair","selectProductByDescription","optionHairs","setStatus","hairs","minLength","maxLength","timeSlot","getHours","getMinutes","toString","inputClientNameProps","inputClientPhoneProps","href","setMenu","components_HistoryChangeSlot","components_HistoryClients","dist_default","suggestions","multiSection","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","getSectionSuggestions","inputProps","onSuggestionSelected","TextField_default","InputLabelProps","shrink","fullWidth","react_select_async_paginate_lib_default","loadOptions","formControlHairs","InputProps","getTimeSlotsByDateAction","timeSlots","TimeTable","onCloseTimeSlotModal","setTimeSlots","startWeek","endWeek","onSelectEvent","onOpenTimeSlotModal","resources","find","resource","resourceId","handleChangeAddMaster","addMasterSelect","startOf","endOf","openAddMaster","addMasterOptions","saveTimeSlot","onNavigate","openModalMasterToGraph","closeModalMasterToGraph","addMasterToGraph","location","substr","newProps","events","allMastersByWorkDay","mastersWorkDay","allMastersByDayOff","mastersWorkOff","view","setSeconds","endFormat","push","week","dow","localize","BigCalendar","momentLocalizer","react_big_calendar_lib_default","localizer","startAccessor","endAccessor","selectable","defaultView","Views","DAY","min","max","views","day","step","toolbar","timeslots","onSelectSlot","eventPropGetter","isSelected","newStyle","backgroundColor","borderRadius","border","style","modal_TimeSlotModal","timeSlotReducer","timeSlotActions","colProduct","ProductModal","product","purchasePrice","sellingPrice","formControlDescription","getProducts","getProductsByDescription","Products","createProduct","updateProduct","modal_ProductModal","getExpensesAction","filterMaster","filterVal","filterProduct","getExpenses","expenses","getOptionExpensesByDescription","_callee2","_context2","ExpenseModal","selectProduct","countProduct","expense","isCreate","createExpense","updateExpense","handleInputProductChange","selectMasterFio","handleChangeCountProduct","Expenses","expenseActions","handleChangeStartDate","handleChangeEndDate","masterOptions","productOptions","products","blob","url","window","URL","createObjectURL","document","download","click","catch","err","console","getExpensesReport","colExpense","cellContent","selectFilter","modal_ExpenseModal","expenseReducer","colProductBalance","getAllProductsBalance","createIncoming","BalanceModal","incoming","Balance","modal_BalanceModal","getStatisticMastersReport","reportType","masterId","Dashboard","report","pageSize","set","hour","minute","second","millisecond","handleChangeReport","all","react_table_es","showPagination","userService","login","password","requestOptions","Content-Type","handleResponse","user","authdata","btoa","localStorage","setItem","logout","removeItem","parse","message","Promise","reject","LoginPage","username","submitted","loading","handleSubmit","e","_this$setState","_e$target","preventDefault","_this$state","from","pathname","history","log","_this$state2","onSubmit","disabled","React","PrivateRoute","component","rest","Route","render","getItem","Redirect","to","styled","div","_templateObject","_templateObject2","_templateObject3","Title","_templateObject4","colProcedure","ProcedureModal","service","Procedures","createProcedure","updateProcedure","modal_ProcedureModal","colHair","colHairCategory","typeHairFormatter","Directory","getSalesAction","getSales","sales","SaleModal","sale","cost","createSale","updateSale","Sales","saleActions","colSale","modal_SaleModal","saleReducer","getIncomingAction","getIncomings","getOptionIncomingByDescription","IncomingModal","updateIncoming","Incoming","incomingActions","getIncomingReport","colIncoming","modal_IncomingModal","incomingReducer","getAdditionalIncomesAction","getAdditionalIncomes","incomes","AdditionalIncomeModal","sum","additionalIncome","createAdditionalIncome","updateAdditionalIncome","handleChangeSum","AdditionalIncome","additionalIncomesActions","getAdditionalIncomingReport","colAdditionalIncome","modal_AdditionalIncomeModal","additionalIncomeReducer","App","selectedPath","MemoryRouter","Fragment","react_sidenav_lib_default","defaultExpanded","selected","reload","Nav","defaultSelected","src","logo","entry_default","react_sidenav_lib","eventKey","fontSize","path","PrivateRoute_PrivateRoute","exact","Timetable","Boolean","hostname","match","combineReducers","arguments","action","allMasters","evants","ReactDOM","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.17274380.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.10b1bb98.jpg\";","import React, {Component} from 'react';\r\nimport '../../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\n\r\nclass TableRemote extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            select: undefined\r\n        };\r\n        this.handleOnSelect = this.handleOnSelect.bind(this);\r\n        this.removeEntity = this.removeEntity.bind(this);\r\n        this.updateEntity = this.updateEntity.bind(this);\r\n        this.createEntity = this.createEntity.bind(this);\r\n    }\r\n\r\n    handleOnSelect = (row) => {\r\n        this.setState({\r\n            select : row\r\n        });\r\n    };\r\n\r\n    removeEntity() {\r\n        this.props.remove(this.state.select.id);\r\n        this.setState({\r\n            select: undefined\r\n        })\r\n    };\r\n\r\n    updateEntity() {\r\n        this.props.update(this.state.select);\r\n        this.setState({\r\n            select: undefined\r\n        })\r\n    };\r\n\r\n    createEntity() {\r\n        this.props.create();\r\n    };\r\n\r\n    render() {\r\n        const selectRow = {\r\n            mode: 'radio',\r\n            clickToSelect: true,\r\n            hideSelectColumn: true,\r\n            bgColor: '#00BFFF',\r\n            onSelect: this.handleOnSelect,\r\n        };\r\n        return (\r\n            <div>\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.createEntity } className=\"btn btn-primary\">\r\n                        {this.props.buttonCreateTitle}\r\n                    </button>\r\n                    { this.state.select ? <button onClick = { this.updateEntity } className=\"btn btn-primary\">\r\n                        {this.props.buttonEditTitle}\r\n                    </button>: null }\r\n                    { this.props.isExport ? <button onClick = { this.props.export } className=\"btn btn-primary\">\r\n                        Выгрузить\r\n                    </button>: null }\r\n                </div>\r\n                <hr/>\r\n                <BootstrapTable\r\n                    remote\r\n                    keyField=\"id\"\r\n                    data={this.props.data}\r\n                    columns={this.props.columns}\r\n                    filter={filterFactory()}\r\n                    selectRow={ selectRow }\r\n                    pagination={paginationFactory({\r\n                        page: this.props.page,\r\n                        sizePerPage: this.props.sizePerPage,\r\n                        totalSize: this.props.totalSize\r\n                    })}\r\n                    onTableChange={this.props.onTableChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableRemote;\r\n","import moment from 'moment'\r\nimport React from 'react';\r\n\r\nexport function typeMasterFormatter(cell) {\r\n    switch (cell) {\r\n        case 'TOP_LEADER':\r\n            return \"Руководитель Топ мастер\";\r\n        case 'TOP':\r\n            return \"Топ мастер\";\r\n        case 'MIDDLE_PLUS':\r\n            return \"Стандарт плюс мастер\";\r\n        case 'MIDDLE':\r\n            return \"Стандартный мастер\";\r\n        case 'START':\r\n            return \"Начинающий мастер\";\r\n        case 'SUPPORT':\r\n            return \"Помощник\";\r\n        case 'TOP_COLORIST':\r\n            return \"Топ колорист\";\r\n        case 'COLORIST':\r\n            return \"Колорист\";\r\n        case 'CARE_MASTER':\r\n            return \"Мастер по уходовым процедурам\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nexport function typeHairFormatter(cell) {\r\n    switch (cell) {\r\n        case 'HAIR_EXTENSION':\r\n            return \"Наращивание волос\";\r\n        case 'HAIR_REMOVAL':\r\n            return \"Снятие волос\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nexport function typeMasterWorkingDayFormatter(cell) {\r\n    switch (cell) {\r\n        case '$2X2':\r\n            return \"2 на 2\";\r\n        case '$5X2':\r\n            return \"5 на 2\";\r\n        case '$4X2':\r\n            return \"4 на 2\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nexport function phoneFormatter(cell, row) {\r\n    if (row.person.phone) {\r\n        return (\r\n            <span>\r\n                {phoneFormatterToString(row.person.phone)}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <span>$ { cell } NTD</span>\r\n    );\r\n}\r\n\r\nexport function phoneFormatterToString(phone) {\r\n    return '+' + phone.substring(0,1)+' ('\r\n        + phone.substring(1,4) + ') '\r\n        + phone.substring(4, 7) + '-'\r\n        + phone.substring(7, 9) + '-'\r\n        + phone.substring(9, 11);\r\n}\r\n\r\nexport function dateFormatter(cell) {\r\n    return (\r\n        <span>{moment.unix(cell).toDate().toLocaleDateString()}</span>\r\n    );\r\n}\r\n","import {phoneFormatter} from \"../data/formatter\";\r\n\r\nexport default [\r\n    {\r\n        dataField: 'person.name',\r\n        text: 'Имя',\r\n        sort: true\r\n    },\r\n    {\r\n        dataField: 'person.phone',\r\n        text: 'Телефон',\r\n        sort: true,\r\n        formatter: phoneFormatter\r\n    },\r\n    {\r\n        dataField: 'person.mail',\r\n        text: 'Почта',\r\n        sort: true\r\n    },\r\n    {\r\n        dataField: 'description',\r\n        text: 'Описание',\r\n        sort: true\r\n    }\r\n]","export default class PageParams {\r\n    page;\r\n    size;\r\n    sortField;\r\n    sortOrder;\r\n    filters;\r\n\r\n    constructor(page, size, sortField, sortOrder, filters) {\r\n        this.page = page;\r\n        this.size = size;\r\n        this.sortField = sortField;\r\n        this.sortOrder = sortOrder;\r\n        this.filters = filters;\r\n    }\r\n}","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getClients(params) {\r\n    return fetch(getUrl() + \"/api/clients?page=\" + params.page + \"&size=\" + params.size)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getClientsByFiO(name) {\r\n    return fetch(getUrl() + \"/api/clients/name/\" + name)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getClientsByPhone(filter) {\r\n    return fetch(getUrl() + \"/api/clients/phone/\" + filter)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function removeClient(clientId) {\r\n    return fetch(getUrl() + \"/api/client/\" + clientId, {method: \"DELETE\"})\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nexport function updateClient(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createClient(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/client\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_CLIENTS} from \"../constants/clientConstants\";\nimport {getClients} from \"../service/clientService\";\n\nexport const getClientsAction = (params) => dispatch => {\n    getClients(params).then(clients => {\n        dispatch({\n            type: GET_CLIENTS,\n            payload: clients\n        })\n    });\n};","export const GET_CLIENTS = \"GET_CLIENTS\";","import React, {Component} from 'react';\nimport '../App.css';\nimport Modal from 'react-responsive-modal';\n\nclass DeleteModal extends Component {\n\n    constructor() {\n        super();\n        this.refused = this.refused.bind(this);\n        this.accept = this.accept.bind(this);\n    }\n\n    refused = () => {\n        this.props.close();\n    };\n\n    accept = () => {\n        this.props.accept();\n    };\n\n    render() {\n        return (\n            <div>\n                <Modal open={this.props.open}\n                       closeOnOverlayClick={false}\n                       showCloseIcon={false}\n                       onClose={this.refused}\n                       closeOnEsc={false} center={false}>\n                    <h2>Вы действительно хотите удалить {this.props.entity}?</h2>\n                    <div className=\"button-group\">\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\n                            Да\n                        </button>\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\n                            Нет\n                        </button>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default DeleteModal;\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getProcedures() {\r\n    return fetch(getUrl() + \"/api/procedures\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function createProcedure(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nexport function updateProcedure(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/procedure\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport NumberFormat from 'react-number-format';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from 'react-select';\r\nimport {getProcedures} from \"../service/procedureService\";\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport {typeMasterFormatter, typeMasterWorkingDayFormatter} from \"../data/formatter\";\r\nimport moment from \"moment/moment\";\r\nimport {masterTypeOptions, masterWorkOptions} from \"../data/selectOptions\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControlServices: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    },\r\n});\r\n\r\nfunction NumberFormatCustomPhone(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            format=\"+# (###) ###-####\" mask=\"_\"\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator\r\n            prefix=\"$\"\r\n        />\r\n    );\r\n}\r\n\r\nclass UpdateModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            person: {\r\n                phone: '',\r\n                name:'',\r\n                mail:''\r\n            },\r\n            procedure: {\r\n                description: '',\r\n                minPrice: 0,\r\n                maxPrice: 0\r\n            },\r\n            type: '',\r\n            selectType: undefined,\r\n            procedures: [],\r\n            submit: false,\r\n            submitProcedure: false,\r\n            selectedProcedures: [],\r\n            optionProcedures: [],\r\n            startDateWork: new Date(),\r\n            workingDay: '',\r\n            selectWorkingDay: undefined\r\n\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangePerson = this.handleChangePerson.bind(this);\r\n\r\n        getProcedures().then(data => {\r\n            let procedures = data.map(procedure => {\r\n                return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n            });\r\n            this.setState({\r\n                optionProcedures: procedures\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            let selectedProcedures = [];\r\n            if (this.props.update.procedures)\r\n                selectedProcedures = this.props.update.procedures.map(procedure => {\r\n                    return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n                });\r\n            let selectType, selectWorkingDay = undefined;\r\n            if (this.props.update.type) {\r\n                selectType = {\r\n                    value: this.props.update.type,\r\n                    label: typeMasterFormatter(this.props.update.type)\r\n                };\r\n\r\n            }\r\n            if (this.props.update.workingDay) {\r\n                selectWorkingDay = {\r\n                    value: this.props.update.workingDay,\r\n                    label: typeMasterWorkingDayFormatter(this.props.update.workingDay)\r\n                };\r\n            }\r\n            this.setState({\r\n                person: {\r\n                    phone: this.props.update.person.phone ? this.props.update.person.phone : '',\r\n                    name: this.props.update.person.name ? this.props.update.person.name : '',\r\n                    mail: this.props.update.person.mail ? this.props.update.person.mail : '',\r\n                },\r\n                type: this.props.update.type ? this.props.update.type : '',\r\n                selectType: selectType,\r\n                procedures: this.props.update.procedures,\r\n                selectedProcedures: selectedProcedures,\r\n                selectWorkingDay: selectWorkingDay,\r\n                workingDay: this.props.update.workingDay,\r\n                startDateWork: this.props.update.startDateWork ? moment.unix(this.props.update.startDateWork).toDate() : new Date(),\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            person: {\r\n                phone: '',\r\n                name:'',\r\n                mail:''\r\n            },\r\n            type: '',\r\n            procedures:[],\r\n            procedure: {\r\n                description: '',\r\n                minPrice: 0,\r\n                maxPrice: 0\r\n            },\r\n            selectType: undefined,\r\n            submit: false,\r\n            submitProcedure: false,\r\n            selectedProcedures: [],\r\n            startDateWork: new Date(),\r\n            workingDay: '',\r\n            selectWorkingDay: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.person.name\r\n            && this.state.person.phone.length === 11\r\n            && ((this.state.procedures && this.state.procedures.length>0)\r\n                || this.props.entity !== 'мастера')) {\r\n            this.props.accept(this.state);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangePerson = name => event => {\r\n        this.setState({\r\n            person: {\r\n                ...this.state.person,\r\n                [name]: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        if (field === 'phone')\r\n            return this.state.person.phone.length !== 10;\r\n        return (!this.state.person || !this.state.person[field]);\r\n    };\r\n\r\n    validateProcedures() {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state.procedures || this.state.procedures.length === 0);\r\n    }\r\n\r\n    validateState(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    };\r\n\r\n    handleChangeTypeMaster = (newValue) => {\r\n        this.setState({\r\n            type: newValue.value,\r\n            selectType: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeWorkingDay = (newValue) => {\r\n        this.setState({\r\n            workingDay: newValue.value,\r\n            selectWorkingDay: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeProcedures = (selectedProcedures) => {\r\n        let procedures = selectedProcedures.map(option => {\r\n            return option.procedure;\r\n        });\r\n        this.setState({\r\n            selectedProcedures: selectedProcedures,\r\n            procedures: procedures\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            startDateWork: newValue\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className=\"modal-div\">\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    { this.props.update ? <h2>Редактирование {this.props.entity}</h2>: null }\r\n                    { !this.props.update ? <h2>Создание {this.props.entity}</h2>: null }\r\n                    <div className={classes.container}>\r\n                        <FormControl className={classes.formControl} error={this.validate('name')} aria-describedby=\"name-error-text\">\r\n                            <InputLabel htmlFor=\"name\">Имя</InputLabel>\r\n                            <Input id=\"name\" value={this.state.person.name} onChange={this.handleChangePerson('name')} />\r\n                            { this.validate('name') ? <FormHelperText id=\"name-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl} error={this.validate('phone')} aria-describedby=\"phone-error-text\">\r\n                            <InputLabel htmlFor=\"phone\">Телефон</InputLabel>\r\n                            <Input id=\"phone\" value={this.state.person.phone} inputComponent={NumberFormatCustomPhone} onChange={this.handleChangePerson('phone')} />\r\n                            { this.validate('phone') ? <FormHelperText id=\"phone-error-text\">Телефон введен неверно</FormHelperText>: null }\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl} error={this.validate('mail')} aria-describedby=\"mail-error-text\">\r\n                            <InputLabel htmlFor=\"mail\">Почта</InputLabel>\r\n                            <Input id=\"mail\" value={this.state.person.mail} onChange={this.handleChangePerson('mail')} />\r\n                        </FormControl>\r\n                        { this.props.entity === 'клиента' ? <FormControl className={classes.formControl} error={this.validate('description')} aria-describedby=\"description-error-text\">\r\n                            <InputLabel htmlFor=\"type\">Описание</InputLabel>\r\n                            <Input id=\"description\" value={this.state.description} onChange={this.handleChange('description')} />\r\n                            { this.validate('description') ? <FormHelperText id=\"description-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                        </FormControl> : null}\r\n                    </div>\r\n                    { this.props.entity === 'мастера' ?  <hr/> : null}\r\n                    { this.props.entity === 'мастера' ? <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Дата начала работы:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                value={this.state.startDateWork}\r\n                                onDayChange={this.handleChangeDate}\r\n                                formatDate={formatDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                }}/>\r\n                            <FormControl className={classes.formControl} error={this.validateState('startDateWork')} aria-describedby=\"startDateWork-error-text\">\r\n                                { this.validateState('startDateWork') ? <FormHelperText id=\"startDateWork-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className=\"col-sm-2\">\r\n                            График работы:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Select\r\n                                value={this.state.selectWorkingDay}\r\n                                options={masterWorkOptions()}\r\n                                placeholder={'Выберите график'}\r\n                                onChange={this.handleChangeWorkingDay}\r\n                            />\r\n                            <FormControl className={classes.formControl} error={this.validateState('workingDay')} aria-describedby=\"workingDay-error-text\">\r\n                                { this.validateState('workingDay') ? <FormHelperText id=\"workingDay-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div> : null}\r\n\r\n                    { this.props.entity === 'мастера' ? <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Категория мастера:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Select\r\n                                value={this.state.selectType}\r\n                                options={masterTypeOptions()}\r\n                                placeholder={'Выберите категорию'}\r\n                                onChange={this.handleChangeTypeMaster}\r\n                            />\r\n                            <FormControl className={classes.formControl} error={this.validateState('type')} aria-describedby=\"type-error-text\">\r\n                                { this.validateState('type') ? <FormHelperText id=\"type-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className=\"col-sm-2\">\r\n                            Услуги мастера:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Select id=\"procedures\"\r\n                                    isMulti\r\n                                    closeMenuOnSelect={false}\r\n                                    value={this.state.selectedProcedures}\r\n                                    onChange={this.handleChangeProcedures}\r\n                                    placeholder=\"Выберите услуги\"\r\n                                    options={this.state.optionProcedures}\r\n                            />\r\n                            <FormControl className={classes.formControl} error={this.validateProcedures()} aria-describedby=\"procedures-error-text\">\r\n                                { this.validateProcedures() ? <FormHelperText id=\"procedures-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div> : null}\r\n                    <hr/>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(UpdateModal);\r\n","export function reportOptions() {\r\n    return [\r\n        { value: 0, label: 'Отчет по мастерам' },\r\n        { value: 1, label: 'Отчет по прибыли' }\r\n    ];\r\n}\r\n\r\nexport function hourOptions() {\r\n    return [\r\n        { value: 10, label: '10' },\r\n        { value: 11, label: '11' },\r\n        { value: 12, label: '12' },\r\n        { value: 13, label: '13' },\r\n        { value: 14, label: '14' },\r\n        { value: 15, label: '15' },\r\n        { value: 16, label: '16' },\r\n        { value: 17, label: '17' },\r\n        { value: 18, label: '18' },\r\n        { value: 19, label: '19' },\r\n        { value: 20, label: '20' },\r\n        { value: 21, label: '21' },\r\n        { value: 22, label: '22' }\r\n    ];\r\n}\r\n\r\nexport function minuteOptions() {\r\n    return [\r\n        { value: 0, label: '00' },\r\n        { value: 5, label: '05' },\r\n        { value: 10, label: '10' },\r\n        { value: 15, label: '15' },\r\n        { value: 20, label: '20' },\r\n        { value: 25, label: '25' },\r\n        { value: 30, label: '30' },\r\n        { value: 35, label: '35' },\r\n        { value: 40, label: '40' },\r\n        { value: 45, label: '45' },\r\n        { value: 50, label: '50' },\r\n        { value: 55, label: '55' }\r\n    ];\r\n}\r\n\r\nexport function masterTypeOptions() {\r\n    return [\r\n        { value: 'TOP_LEADER', label: 'Руководитель Топ мастер' },\r\n        { value: 'TOP', label: 'Топ мастер' },\r\n        { value: 'MIDDLE_PLUS', label: 'Стандарт плюс мастер' },\r\n        { value: 'MIDDLE', label: 'Стандартный мастер' },\r\n        { value: 'START', label: 'Начинающий мастер' },\r\n        { value: 'SUPPORT', label: 'Помощник' },\r\n        { value: 'TOP_COLORIST', label: 'Топ колорист' },\r\n        { value: 'COLORIST', label: 'Колорист' },\r\n        { value: 'CARE_MASTER', label: 'Мастер по уходовым процедурам' }\r\n    ];\r\n}\r\n\r\nexport function masterWorkOptions() {\r\n    return [\r\n        { value: '$2X2', label: '2 на 2' },\r\n        { value: '$4X2', label: '4 на 2' },\r\n        { value: '$5X2', label: '5 на 2' }\r\n    ];\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport colClient from \"../data/colClient\";\r\nimport PageParams from \"../model/PageParams\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {getClientsAction} from \"../actions/clientActions\";\r\nimport {createClient, removeClient, updateClient} from \"../service/clientService\";\r\nimport DeleteModal from \"../modal/DeleteModal\";\r\nimport UpdateModal from \"../modal/UpdateModal\";\r\n\r\nclass Clients extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openDelete: false,\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.removeClient = this.removeClient.bind(this);\r\n        this.onOpenDeleteModal = this.onOpenDeleteModal.bind(this);\r\n        this.onCloseDeleteModal = this.onCloseDeleteModal.bind(this);\r\n\r\n        this.updateClient = this.updateClient.bind(this);\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.createClient = this.createClient.bind(this);\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.props.clientActions(new PageParams(0, 10));\r\n    }\r\n\r\n    onOpenDeleteModal (row) {\r\n        this.setState({\r\n            openDelete: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n        });\r\n    };\r\n\r\n    onCloseDeleteModal = () => {\r\n        this.setState({\r\n            openDelete: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {page, sizePerPage}) => {\r\n        this.props.clientActions(new PageParams(page - 1, sizePerPage));\r\n    };\r\n\r\n    updateClient(entity) {\r\n        let client = this.state.row;\r\n        client.person = entity.person;\r\n        client.description = entity.description;\r\n        updateClient(client).then(() => {\r\n            this.props.clientActions(new PageParams(this.props.clients.number, this.props.clients.size));\r\n            this.setState({\r\n                openUpdate: false,\r\n                row: undefined\r\n            });\r\n        });\r\n    };\r\n\r\n    createClient(entity) {\r\n        createClient(entity).then(() => {\r\n            this.props.clientActions(new PageParams(this.props.clients.number, this.props.clients.size));\r\n            this.setState({\r\n                openCreate: false\r\n            });\r\n        });\r\n    };\r\n\r\n    removeClient(id) {\r\n        removeClient(id).then(() => {\r\n            this.props.clientActions(new PageParams(this.props.clients.number, this.props.clients.size));\r\n            this.setState({\r\n                openDelete: false,\r\n                row: undefined\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                {this.props.clients ? <TableRemote data={this.props.clients.content}\r\n                                                   page={this.props.clients.number + 1}\r\n                                                   columns={colClient}\r\n                                                   entity=\"клиента\"\r\n                                                   buttonCreateTitle='Создание нового клиента'\r\n                                                   buttonEditTitle='Изменение клиента'\r\n                                                   remove={this.onOpenDeleteModal}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   sizePerPage={this.props.clients.size}\r\n                                                   totalSize={this.props.clients.totalElements}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n                    : null}\r\n                <DeleteModal accept={this.removeClient}\r\n                             open={this.state.openDelete}\r\n                             close={this.onCloseDeleteModal}\r\n                             entity=\"клиента\" />\r\n\r\n                {this.state.row ? <UpdateModal accept={this.updateClient}\r\n                                               open={this.state.openUpdate}\r\n                                               update={this.state.row}\r\n                                               close={this.onCloseUpdateModal}\r\n                                               entity=\"клиента\" />: null}\r\n\r\n                <UpdateModal accept={this.createClient}\r\n                             open={this.state.openCreate}\r\n                             close={this.onCloseCreateModal}\r\n                             entity=\"клиента\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    clients: state.clientReducer.clients\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        clientActions: bindActionCreators(getClientsAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Clients);\r\n","import React from 'react';\r\nimport {dateFormatter, phoneFormatter, typeMasterFormatter, typeMasterWorkingDayFormatter} from \"../data/formatter\";\r\n\r\nfunction type(cell) {\r\n    return (\r\n        <span>{typeMasterFormatter(cell)}</span>\r\n    );\r\n}\r\n\r\nfunction workingDay(cell) {\r\n    return (\r\n        <span>{typeMasterWorkingDayFormatter(cell)}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'person.name',\r\n        text: 'Имя'\r\n    },\r\n    {\r\n        dataField: 'person.phone',\r\n        text: 'Телефон',\r\n        formatter: phoneFormatter\r\n    },\r\n    {\r\n        dataField: 'person.mail',\r\n        text: 'Почта'\r\n    },\r\n    {\r\n        dataField: 'type',\r\n        text: 'Категория',\r\n        formatter: type\r\n    },\r\n    {\r\n        dataField: 'startDateWork',\r\n        text: 'Дата начала работы',\r\n        formatter: dateFormatter\r\n    },\r\n    {\r\n        dataField: 'workingDay',\r\n        text: 'График',\r\n        formatter: workingDay\r\n    }\r\n]","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getMasters(params) {\r\n    return fetch(getUrl() + \"/api/masters?page=\" + params.page + \"&size=\" + params.size)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getAllMasters() {\r\n    return fetch(getUrl() + \"/api/allMasters\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function allMastersByWorkDay(date) {\r\n    return fetch(getUrl() + \"/api/allMastersByWorkDay?date=\" + date)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function allMastersByDayOff(date) {\r\n    return fetch(getUrl() + \"/api/allMastersByDayOff?date=\" + date)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getMastersByFiO(name) {\r\n    return fetch(getUrl() + \"/api/masters/name/\" + name)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function removeMaster(master) {\r\n    return fetch(getUrl() + \"/api/master/\" + master, {method: \"DELETE\"})\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nexport function updateMaster(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createMaster(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/master\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_ALL_MASTERS, GET_MASTERS} from \"../constants/masterConstants\";\nimport {getAllMasters, getMasters} from \"../service/masterService\";\n\nexport const getMastersAction = (params) => dispatch => {\n    getMasters(params).then(masters => {\n        dispatch({\n            type: GET_MASTERS,\n            payload: masters\n        })\n    });\n};\n\nexport const getAllMastersAction = () => dispatch => {\n    getAllMasters().then(masters => {\n        dispatch({\n            type: GET_ALL_MASTERS,\n            payload: masters\n        })\n    });\n};","export const GET_MASTERS = \"GET_MASTERS\";\r\nexport const GET_ALL_MASTERS = \"GET_ALL_MASTERS\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport colMaster from \"../data/colMaster\";\r\nimport {connect} from 'react-redux';\r\nimport {getMastersAction} from \"../actions/masterActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport {createMaster, removeMaster, updateMaster} from \"../service/masterService\";\r\nimport DeleteModal from \"../modal/DeleteModal\";\r\nimport UpdateModal from \"../modal/UpdateModal\";\r\n\r\nclass Masters extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openDelete: false,\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.removeMaster = this.removeMaster.bind(this);\r\n        this.onOpenDeleteModal = this.onOpenDeleteModal.bind(this);\r\n        this.onCloseDeleteModal = this.onCloseDeleteModal.bind(this);\r\n\r\n        this.updateMaster = this.updateMaster.bind(this);\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.createMaster = this.createMaster.bind(this);\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.props.masterActions(new PageParams(0, 10));\r\n    }\r\n\r\n    onOpenDeleteModal (row) {\r\n        this.setState({\r\n            openDelete: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n        });\r\n    };\r\n\r\n    onCloseDeleteModal = () => {\r\n        this.setState({\r\n            openDelete: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {page, sizePerPage}) => {\r\n        this.props.masterActions(new PageParams(page - 1, sizePerPage));\r\n    };\r\n\r\n    removeMaster() {\r\n        removeMaster(this.state.row.id).then(() => {\r\n            this.props.masterActions(new PageParams(this.props.masters.number, this.props.masters.size));\r\n            this.setState({\r\n                openDelete: false,\r\n                row: undefined\r\n            });\r\n        });\r\n    };\r\n\r\n    updateMaster(entity) {\r\n        let master = this.state.row;\r\n        master.person = entity.person;\r\n        master.procedures = entity.procedures;\r\n        master.type = entity.type;\r\n        master.workingDay = entity.workingDay;\r\n        master.startDateWork = entity.startDateWork;\r\n        updateMaster(master).then(() => {\r\n            this.props.masterActions(new PageParams(this.props.masters.number, this.props.masters.size));\r\n            this.setState({\r\n                openUpdate: false,\r\n                row: undefined\r\n            });\r\n        });\r\n    };\r\n\r\n    createMaster(entity) {\r\n        createMaster(entity).then(() => {\r\n            this.props.masterActions(new PageParams(this.props.masters.number, this.props.masters.size));\r\n            this.setState({\r\n                openCreate: false\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                {this.props.masters ? <TableRemote data={this.props.masters.content}\r\n                                                   page={this.props.masters.number + 1}\r\n                                                   columns={colMaster}\r\n                                                   entity=\"мастера\"\r\n                                                   buttonCreateTitle='Создание нового мастера'\r\n                                                   buttonEditTitle='Изменение мастера'\r\n                                                   sizePerPage={this.props.masters.size}\r\n                                                   remove={this.onOpenDeleteModal}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   totalSize={this.props.masters.totalElements}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n                    : null}\r\n                <DeleteModal accept={this.removeMaster}\r\n                             open={this.state.openDelete}\r\n                             close={this.onCloseDeleteModal}\r\n                             entity=\"мастера\" />\r\n\r\n                {this.state.row ? <UpdateModal accept={this.updateMaster}\r\n                             open={this.state.openUpdate}\r\n                             update={this.state.row}\r\n                             close={this.onCloseUpdateModal}\r\n                             entity=\"мастера\" />: null}\r\n\r\n                <UpdateModal accept={this.createMaster}\r\n                             open={this.state.openCreate}\r\n                             close={this.onCloseCreateModal}\r\n                             entity=\"мастера\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    masters: state.masterReducer.masters\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        masterActions: bindActionCreators(getMastersAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Masters);\r\n","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nfunction priceFormatter(cell) {\r\n    return (\r\n        <span>{cell.toLocaleString()} руб.</span>\r\n    );\r\n}\r\n\r\nfunction dateFormatter(cell) {\r\n    return (\r\n        <span>{moment.unix(cell).toDate().toLocaleDateString()}</span>\r\n    );\r\n}\r\n\r\nfunction statusFormatter(cell) {\r\n    let status ='';\r\n    if (cell === 'NEW') status = 'Ожидание клиента';\r\n    if (cell === 'DONE') status = 'Клиент пришел';\r\n    if (cell === 'CANCELED') status = 'Клиент не пришел';\r\n    if (cell === 'READY') status = 'Клиент подтвердил';\r\n    return (\r\n        <span>{status}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'master.person.name',\r\n        text: 'Мастер'\r\n    },\r\n    {\r\n        dataField: 'allPrice',\r\n        text: 'Сумма',\r\n        formatter: priceFormatter\r\n    },\r\n    {\r\n        dataField: 'startSlot',\r\n        text: 'Дата',\r\n        formatter: dateFormatter\r\n    },\r\n    {\r\n        dataField: 'status',\r\n        text: 'Статус заказа',\r\n        formatter: statusFormatter\r\n    }\r\n]","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getTimeSlotsByDate(start, end) {\r\n    return fetch(getUrl() + \"/api/timeSlotsByDate?start=\" + start +\r\n        \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getTimeSlotsByClientId(clientId) {\r\n    return fetch(getUrl() + \"/api/timeSlotsByClientId?clientId=\" + clientId)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function createTimeSlot(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nexport function deleteTimeSlot(id) {\r\n    return fetch(getUrl() + \"/api/timeSlot/\" + id, {\r\n        method: 'delete'\r\n    }).then(res => res);\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/timeSlot\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colClientSlot from \"../data/colClientSlot\";\r\nimport {getTimeSlotsByClientId} from \"../service/timeSlotService\";\r\n\r\nclass HistoryClients extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.client) {\r\n            getTimeSlotsByClientId(this.props.client.id).then(slots => {\r\n                this.setState({\r\n                    data: slots\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const expandRow = {\r\n            renderer: row => (\r\n                <div>\r\n                    {row.hairCountExtension>0 ? <p>{ `Количество наращенных прядей: ${row.hairCountExtension}` }</p> : null}\r\n                    {row.hairWeight>0 ? <p>{ `Вес наращенных волос: ${row.hairWeight}` }</p> : null}\r\n                    {row.hairCountRemoval>0 ? <p>{ `Количество сгятых прядей: ${row.hairCountRemoval}` }</p> : null}\r\n                </div>\r\n            )\r\n        };\r\n        return (\r\n            <div className=\"main-div\">\r\n                <BootstrapTable\r\n                    keyField=\"id\"\r\n                    expandableRow={true}\r\n                    expandRow={ expandRow }\r\n                    data={this.state.data}\r\n                    columns={colClientSlot}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryClients;\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getAllHairCategories() {\r\n    return fetch(getUrl() + \"/api/getAllHairCategories\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getAllHairs() {\r\n    return fetch(getUrl() + \"/api/getAllHairs\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nfunction dateFormatter(cell) {\r\n    return (\r\n        <span>{moment.unix(cell).toDate().toLocaleDateString()}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'date',\r\n        text: 'Дата',\r\n        formatter: dateFormatter\r\n    },\r\n    {\r\n        dataField: 'change',\r\n        text: 'Изменение'\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colChangeSlot from \"../data/colChangeSlot\";\r\n\r\nclass HistoryChangeSlot extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <BootstrapTable\r\n                    keyField=\"date\"\r\n                    data={this.props.changes}\r\n                    columns={colChangeSlot}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryChangeSlot;\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport '../react-day-picker.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getClientsByFiO, getClientsByPhone} from \"../service/clientService\";\r\nimport {getMasters, getMastersByFiO} from \"../service/masterService\";\r\nimport PageParams from \"../model/PageParams\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from 'react-select';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport NumberFormat from 'react-number-format';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport MomentLocaleUtils, {parseDate} from 'react-day-picker/moment';\r\nimport 'moment/locale/ru';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport HistoryClients from \"../components/HistoryClients\";\r\nimport {getAllHairCategories, getAllHairs} from \"../service/hairService\";\r\nimport HistoryChangeSlot from \"../components/HistoryChangeSlot\";\r\nimport {hourOptions, minuteOptions} from \"../data/selectOptions\";\r\nimport {phoneFormatterToString, typeMasterFormatter} from \"../data/formatter\";\r\nimport {createTimeSlot, deleteTimeSlot} from \"../service/timeSlotService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop: 16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        display: 'flex'\r\n    },\r\n    formControlHairs: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 250\r\n    }\r\n});\r\n\r\nasync function getOptionMastersByFIO(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getMasters(new PageParams(0, 100));\r\n    else response = await getMastersByFiO(search);\r\n    let cachedOptions = response.content.map((d) => ({\r\n        value: d.id,\r\n        label: d.person.name + \" - \" + typeMasterFormatter(d.type),\r\n        master: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator={' '}\r\n        />\r\n    );\r\n}\r\n\r\nconst getClientName = client => client.person.name;\r\nconst getClientPhone = client => client.person.phone;\r\n\r\nconst renderClient = client => {\r\n    return (\r\n        <span>{client.person.name}</span>\r\n    );\r\n};\r\n\r\nconst renderSectionTitle = section => {\r\n    return (\r\n        <strong>{section.title}</strong>\r\n    );\r\n};\r\n\r\nconst getSectionClients = section => {\r\n    return section.clients;\r\n};\r\n\r\nclass TimeSlotModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectMaster: undefined,\r\n            selectMasterName: undefined,\r\n            selectClient: undefined,\r\n            selectClientName: '',\r\n            selectClientPhone: '',\r\n            clientDescription: '',\r\n            startHour: { value: 10, label: '10' },\r\n            startMinutes: { value: 0, label: '00' },\r\n            endHour: { value: 10, label: '10' },\r\n            endMinutes: { value: 0, label: '00' },\r\n            date: new Date(),\r\n            id: undefined,\r\n            allPrice: 0,\r\n            masterWorkPrice: 0,\r\n            status: 'NEW',\r\n            value: '',\r\n            clients: [],\r\n            menu:'MAIN',\r\n            selectProductByDescription: undefined,\r\n            optionHairs: [],\r\n            selectedHair: undefined,\r\n            hairWeight: 0,\r\n            hairCountExtension: 0,\r\n            hairCountRemoval: 0,\r\n            hairsCategory: [],\r\n            procedures: [],\r\n            submitProcedure: false,\r\n            selectedProcedures: [],\r\n            optionProcedures: []\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.handleInputMasterChange = this.handleInputMasterChange.bind(this);\r\n        this.handleChangeStartHour = this.handleChangeStartHour.bind(this);\r\n        this.handleChangeStartMinutes = this.handleChangeStartMinutes.bind(this);\r\n        this.handleChangeEndHour = this.handleChangeEndHour.bind(this);\r\n        this.handleChangeEndMinutes = this.handleChangeEndMinutes.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeHair = this.handleChangeHair.bind(this);\r\n        this.setStatus = this.setStatus.bind(this);\r\n        this.handleChangeProcedures = this.handleChangeProcedures.bind(this);\r\n\r\n        getAllHairs().then(data => {\r\n            let hairs = data.map(hair => {\r\n                return { value: hair.id, label: \"Волосы \" + hair.minLength + \" - \" + (hair.maxLength !== 0 ? hair.maxLength : \"более\"), hair: hair };\r\n            });\r\n            this.setState({\r\n                optionHairs: hairs\r\n            });\r\n        });\r\n\r\n        getAllHairCategories().then(data => {\r\n            this.setState({\r\n                hairsCategory: data\r\n            })\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let selectMasterName,\r\n            selectMaster,\r\n            selectClient,\r\n            selectClientName = '',\r\n            selectClientPhone = '',\r\n            clientDescription = '',\r\n            status,\r\n            selectedHair,\r\n            procedures = [],\r\n            selectedProcedures = [];\r\n        if (this.props.event.timeSlot) {\r\n            selectedProcedures = this.props.event.timeSlot.procedures.map(procedure => {\r\n                return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n            });\r\n            procedures = this.props.event.timeSlot.procedures;\r\n            selectMasterName = {\r\n                value: this.props.event.timeSlot.master.id,\r\n                label: this.props.event.timeSlot.master.person.name + \" - \" + typeMasterFormatter(this.props.event.timeSlot.master.type),\r\n                master: this.props.event.timeSlot.master\r\n            };\r\n            if (this.props.event.timeSlot.hair)\r\n                selectedHair = {\r\n                    value: this.props.event.timeSlot.hair.id,\r\n                    label: \"Волосы \" + this.props.event.timeSlot.hair.minLength + \" - \" +\r\n                        (this.props.event.timeSlot.hair.maxLength !== 0 ? this.props.event.timeSlot.hair.maxLength : \"более\"),\r\n                    hair: this.props.event.timeSlot.hair\r\n                };\r\n            selectMaster = this.props.event.timeSlot.master ? this.props.event.timeSlot.master : undefined;\r\n            status = this.props.event.timeSlot.status ? this.props.event.timeSlot.status : 'NEW';\r\n            selectClient = this.props.event.timeSlot.client;\r\n            selectClientName = this.props.event.timeSlot.client.person.name;\r\n            clientDescription = this.props.event.timeSlot.client.description ? this.props.event.timeSlot.client.description : '';\r\n\r\n            selectClientPhone = phoneFormatterToString(this.props.event.timeSlot.client.person.phone);\r\n        } else if (this.props.selectMaster) {\r\n            selectMasterName = {\r\n                value: this.props.selectMaster.master.id,\r\n                label: this.props.selectMaster.master.person.name + \" - \" + typeMasterFormatter(this.props.selectMaster.master.type),\r\n                master: this.props.selectMaster.master\r\n            };\r\n            selectMaster = this.props.selectMaster.master;\r\n        }\r\n        let optionProcedures = selectMaster.procedures.map(procedure => {\r\n            return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n        });\r\n        this.setState({\r\n            date: this.props.event.start,\r\n            id: this.props.event.id,\r\n            allPrice: this.props.event.timeSlot ? this.props.event.timeSlot.allPrice : 0,\r\n            masterWorkPrice: this.props.event.timeSlot ? this.props.event.timeSlot.masterWorkPrice : 0,\r\n            startHour: {\r\n                value: this.props.event.start.getHours(),\r\n                label: this.props.event.start.getHours()\r\n            },\r\n            startMinutes: {\r\n                value: this.props.event.start.getMinutes(),\r\n                label: this.props.event.start.getMinutes().toString().length < 2 ? '0' +\r\n                    this.props.event.start.getMinutes().toString():this.props.event.start.getMinutes()\r\n            },\r\n            endHour: {\r\n                value: this.props.event.end.getHours(),\r\n                label: this.props.event.end.getHours()\r\n            },\r\n            endMinutes: {\r\n                value: this.props.event.end.getMinutes(),\r\n                label: this.props.event.end.getMinutes().toString().length < 2 ? '0' +\r\n                    this.props.event.end.getMinutes().toString():this.props.event.end.getMinutes()\r\n            },\r\n            selectMasterName: selectMasterName,\r\n            selectMaster: selectMaster,\r\n            status: status ? status : 'NEW',\r\n            clientDescription: clientDescription,\r\n            selectClient: selectClient,\r\n            selectClientName: selectClientName,\r\n            selectClientPhone: selectClientPhone,\r\n            menu:'MAIN',\r\n            hairWeight: this.props.event.timeSlot ? this.props.event.timeSlot.hairWeight : 0,\r\n            hairCountExtension: this.props.event.timeSlot ? this.props.event.timeSlot.hairCountExtension : 0,\r\n            hairCountRemoval: this.props.event.timeSlot ? this.props.event.timeSlot.hairCountRemoval : 0,\r\n            selectedHair: selectedHair,\r\n            selectedProcedures: selectedProcedures,\r\n            optionProcedures: optionProcedures,\r\n            procedures: procedures\r\n        });\r\n    }\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    delete = () => {\r\n        deleteTimeSlot(this.state.id).then(() => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true,\r\n            menu: 'MAIN'\r\n        });\r\n\r\n        let client = this.state.selectClient;\r\n\r\n        if (this.state.selectClientName && this.state.selectClientPhone) {\r\n            if (!client)\r\n                client = {\r\n                    person: {\r\n                        name: this.state.selectClientName,\r\n                        phone: this.state.selectClientPhone.replace(/[.*+ ?^${}()|[\\]\\\\]/g, \"\"),\r\n                    }\r\n                }\r\n        }\r\n\r\n        if (!client || !this.state.selectMaster || !this.state.date || !this.state.procedures || this.state.procedures.length === 0)\r\n            return false;\r\n\r\n        if (this.state.procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION') && !this.state.selectedHair)\r\n            return false;\r\n\r\n        client.description = this.state.clientDescription;\r\n\r\n        let startDate = new Date(this.state.date);\r\n        startDate.setHours(this.state.startHour.value);\r\n        startDate.setMinutes(this.state.startMinutes.value);\r\n        let endDate = new Date(this.state.date);\r\n        endDate.setHours(this.state.endHour.value);\r\n        endDate.setMinutes(this.state.endMinutes.value);\r\n\r\n        let timeSlot = {\r\n            id: this.state.id,\r\n            client: client,\r\n            master: this.state.selectMaster,\r\n            startSlot: startDate,\r\n            endSlot: endDate,\r\n            allPrice: this.state.allPrice,\r\n            masterWorkPrice: this.state.masterWorkPrice,\r\n            status: this.state.status,\r\n            hairWeight: this.state.hairWeight,\r\n            hairCountExtension: this.state.hairCountExtension,\r\n            hairCountRemoval: this.state.hairCountRemoval,\r\n            procedures: this.state.procedures,\r\n            hair: this.state.selectedHair ? this.state.selectedHair.hair : undefined\r\n        };\r\n        createTimeSlot(timeSlot).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    clear() {\r\n        this.setState({\r\n            selectClient: undefined,\r\n            selectMaster: undefined,\r\n            selectMasterName: undefined,\r\n            selectClientName: '',\r\n            selectClientPhone: '',\r\n            clientDescription: '',\r\n            submit: false,\r\n            startHour: { value: 10, label: '10' },\r\n            startMinutes: { value: 0, label: '00' },\r\n            endHour: { value: 10, label: '10' },\r\n            endMinutes: { value: 0, label: '00' },\r\n            date: new Date(),\r\n            allPrice: 0,\r\n            masterWorkPrice: 0,\r\n            status: 'NEW',\r\n            clients:[],\r\n            menu:'MAIN',\r\n            selectProductByDescription: undefined,\r\n            optionHairs: [],\r\n            selectedHair: undefined,\r\n            hairWeight: 0,\r\n            hairCountExtension: 0,\r\n            hairCountRemoval: 0,\r\n            procedures: [],\r\n            submitProcedure: false,\r\n            selectedProcedures: [],\r\n            optionProcedures: []\r\n        });\r\n    }\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        let procedures = newValue.master.procedures.map(procedure => {\r\n            return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n        });\r\n        this.setState({\r\n            selectMaster: newValue.master,\r\n            selectMasterName: {\r\n                value: newValue.value,\r\n                label: newValue.master.person.name + \" - \" + typeMasterFormatter(newValue.master.type),\r\n                master: newValue.master\r\n            },\r\n            allPrice: 0,\r\n            masterWorkPrice: 0,\r\n            selectedProcedures: [],\r\n            procedures: [],\r\n            selectedHair: undefined,\r\n            hairWeight: 0,\r\n            hairCountExtension: 0,\r\n            hairCountRemoval: 0,\r\n            optionProcedures: procedures\r\n        });\r\n    };\r\n\r\n    handleChangeStartHour = (newValue) => {\r\n        this.setState({\r\n            startHour: newValue\r\n        });\r\n    };\r\n    handleChangeStartMinutes = (newValue) => {\r\n        this.setState({\r\n            startMinutes: newValue\r\n        });\r\n    };\r\n    handleChangeEndHour = (newValue) => {\r\n        this.setState({\r\n            endHour: newValue\r\n        });\r\n    };\r\n    handleChangeEndMinutes = (newValue) => {\r\n        this.setState({\r\n            endMinutes: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeAndRecountSum = name => event => {\r\n        let allSum = 0, masterWorkSum = 0;\r\n        let hairCountExtension = this.state.hairCountExtension;\r\n        let hairCountRemoval = this.state.hairCountRemoval;\r\n        let hairWeight = this.state.hairWeight;\r\n\r\n        if (name==='hairCountExtension') hairCountExtension=event.target.value;\r\n        if (name==='hairWeight') hairWeight=event.target.value;\r\n        if (name==='hairCountRemoval') hairCountRemoval=event.target.value;\r\n\r\n        if (this.state.selectedHair) {\r\n            this.state.hairsCategory.filter(hairCategory => (hairCategory.masterType === this.state.selectMaster.type && hairCategory.hairType === 'HAIR_EXTENSION'))\r\n                .forEach(hairCategory => {\r\n                    allSum = allSum + hairCategory.price * hairCountExtension + this.state.selectedHair.hair.price * hairWeight;\r\n                    masterWorkSum = masterWorkSum + hairCategory.price * hairCountExtension;\r\n                });\r\n        }\r\n        this.state.hairsCategory.filter(hairCategory => hairCategory.hairType === 'HAIR_REMOVAL')\r\n            .forEach(hairCategory => {\r\n                allSum = allSum + hairCategory.price*hairCountRemoval;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*hairCountRemoval;\r\n            });\r\n        this.setState({\r\n            [name]: event.target.value,\r\n            allPrice: allSum,\r\n            masterWorkPrice: masterWorkSum\r\n        });\r\n    };\r\n\r\n    setStatus(status) {\r\n        this.setState({\r\n            status: status\r\n        });\r\n    }\r\n\r\n    setMenu(menu) {\r\n        this.setState({\r\n            menu: menu\r\n        });\r\n    }\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    validateProcedures() {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state.procedures || this.state.procedures.length === 0);\r\n    }\r\n\r\n    onClientsFetchRequestedByName = ({ value }) => {\r\n        if (value && value.length>3) getClientsByFiO(value).then(\r\n            clients => this.changeClients(clients)\r\n        );\r\n    };\r\n\r\n    onClientsFetchRequestedByPhone = ({ value }) => {\r\n        let phone = '';\r\n        if (value.length<2) phone = value;\r\n        else phone = value.substring(4);\r\n        phone = phone.replace(/[.*-+?^${}()|[\\]\\\\\\s]/g, '');\r\n        phone = phone.substring(0, 10);\r\n        if (phone && phone.length>3) getClientsByPhone(phone).then(\r\n            clients => this.changeClients(clients)\r\n        );\r\n    };\r\n\r\n    changeClients(clients) {\r\n        let options = clients.map(client => {\r\n            return {\r\n                title: phoneFormatterToString(client.person.phone),\r\n                clients: [\r\n                    client\r\n                ]\r\n            }\r\n        });\r\n        this.setState({\r\n            clients: options\r\n        });\r\n    }\r\n\r\n    onClientsClearRequested = () => {\r\n        this.setState({\r\n            clients: []\r\n        });\r\n    };\r\n\r\n    onChangeClientName = (event, { newValue }) => {\r\n        this.setState({\r\n            selectClientName: newValue,\r\n            selectClient: undefined,\r\n            clientDescription: ''\r\n        });\r\n    };\r\n\r\n    onChangeClientPhone = (event, { newValue }) => {\r\n        let phone = newValue;\r\n        if (newValue.length === 1) phone = '+7 (' + newValue;\r\n        else if (newValue.length === 7) phone = newValue + \") \";\r\n        else if (newValue.length === 12) phone = newValue + \" \";\r\n        else if (newValue.length === 15) phone = newValue + \" \";\r\n        else if (newValue.length > 18) return false;\r\n        else phone = newValue;\r\n        this.setState({\r\n            selectClientPhone: phone,\r\n            selectClient: undefined,\r\n            clientDescription: ''\r\n        });\r\n    };\r\n\r\n    onClientSelected = (event, { suggestion })  => {\r\n        this.setState({\r\n            selectClient: suggestion,\r\n            selectClientName: suggestion.person.name,\r\n            clientDescription: suggestion.description ? suggestion.description : \"\",\r\n            selectClientPhone: phoneFormatterToString(suggestion.person.phone)\r\n        });\r\n    };\r\n\r\n    handleChangeHair = (newValue) => {\r\n        let allSum = 0, masterWorkSum = 0;\r\n        this.state.hairsCategory.filter(hairCategory => (hairCategory.masterType === this.state.selectMaster.type && hairCategory.hairType === 'HAIR_EXTENSION'))\r\n            .forEach(hairCategory => {\r\n                allSum = allSum + hairCategory.price*this.state.hairCountExtension + newValue.hair.price*this.state.hairWeight;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*this.state.hairCountExtension;\r\n            });\r\n        this.state.hairsCategory.filter(hairCategory => hairCategory.hairType === 'HAIR_REMOVAL')\r\n            .forEach(hairCategory => {\r\n                allSum = allSum + hairCategory.price*this.state.hairCountRemoval;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*this.state.hairCountRemoval;\r\n            });\r\n\r\n        this.setState({\r\n            selectedHair: newValue,\r\n            allPrice: allSum,\r\n            masterWorkPrice: masterWorkSum\r\n        });\r\n    };\r\n\r\n    handleChangeProcedures = (selectedProcedures) => {\r\n        let allSum = 0, masterWorkSum = 0;\r\n        let procedures = selectedProcedures.map(option => {\r\n            return option.procedure;\r\n        });\r\n\r\n        let hairCountExtension = procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION') ? this.state.hairCountExtension : 0;\r\n        let hairCountRemoval = procedures.some(procedure => procedure.hairType === 'HAIR_REMOVAL') ? this.state.hairCountRemoval : 0;\r\n        let hairWeight = procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION') ? this.state.hairWeight : 0;\r\n        let selectedHair = procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION') ? this.state.selectedHair : undefined;\r\n\r\n        this.state.hairsCategory.filter(hairCategory => (hairCategory.masterType === this.state.selectMaster.type && hairCategory.hairType === 'HAIR_EXTENSION'))\r\n            .forEach(hairCategory => {\r\n                if (selectedHair) allSum = allSum + hairCategory.price*hairCountExtension + selectedHair.hair.price*hairWeight;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*hairCountExtension;\r\n            });\r\n        this.state.hairsCategory.filter(hairCategory => hairCategory.hairType === 'HAIR_REMOVAL')\r\n            .forEach(hairCategory => {\r\n                allSum = allSum + hairCategory.price*hairCountRemoval;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*hairCountRemoval;\r\n            });\r\n\r\n        this.setState({\r\n            selectedProcedures: selectedProcedures,\r\n            procedures: procedures,\r\n            allPrice: allSum,\r\n            masterWorkPrice: masterWorkSum,\r\n            selectedHair: selectedHair,\r\n            hairWeight: hairWeight,\r\n            hairCountExtension: hairCountExtension,\r\n            hairCountRemoval: hairCountRemoval\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const inputClientNameProps = {\r\n            placeholder: 'Введите имя клиента',\r\n            value:  this.state.selectClientName,\r\n            onChange: this.onChangeClientName\r\n        };\r\n        const inputClientPhoneProps = {\r\n            placeholder: 'Введите телефон клиента',\r\n            value: this.state.selectClientPhone,\r\n            onChange: this.onChangeClientPhone\r\n        };\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    { this.props.event ? <div className=\"time_slot_modal\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2 time-slot-menu\">\r\n                                <ul>\r\n                                    <li>\r\n                                        <a href=\"#\" onClick={() => this.setMenu('MAIN')}>Детали заказа</a>\r\n                                    </li>\r\n                                    {this.state.selectClient ? <li>\r\n                                        <a href=\"#\" onClick={() => this.setMenu('HISTORY')}>История посещений</a>\r\n                                    </li> : null}\r\n                                    {this.props.event.timeSlot ? <li>\r\n                                        <a href=\"#\" onClick={() => this.setMenu('HISTORY_CHANGE')}>История изменений</a>\r\n                                    </li> : null}\r\n                                </ul>\r\n                            </div>\r\n                            {this.state.menu === 'HISTORY_CHANGE' ? <div className=\"col-sm\">\r\n                                <div className=\"container selectDiv\">\r\n                                    <HistoryChangeSlot changes={this.props.event.timeSlot.changes}/>\r\n                                </div>\r\n                            </div> : null}\r\n                            {this.state.menu === 'HISTORY' ? <div className=\"col-sm\">\r\n                                <div className=\"container selectDiv\">\r\n                                    <HistoryClients client={this.state.selectClient}/>\r\n                                </div>\r\n                            </div> : null}\r\n                            {this.state.menu === 'MAIN' ? <div className=\"col-sm\">\r\n                                <div className=\"container selectDiv\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-2 title-margin-date\">\r\n                                            Дата заказа:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <DayPickerInput\r\n                                                placeholder={`Дата заказа`}\r\n                                                parseDate={parseDate}\r\n                                                value={this.state.date}\r\n                                                onDayChange={this.handleChangeDate}\r\n                                                dayPickerProps={{\r\n                                                    locale: 'ru',\r\n                                                    localeUtils: MomentLocaleUtils,\r\n                                                }}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                    <div className=\"row\">\r\n                                        <button onClick={() => this.setStatus('NEW')} className={\"btn status-button \" + (this.state.status === 'NEW' ? 'active-status-button' : '')}>\r\n                                            Ожидание клиента\r\n                                        </button>\r\n                                        <button onClick={() => this.setStatus('DONE')} className={\"btn status-button \" + (this.state.status === 'DONE' ? 'active-status-button' : '')}>\r\n                                            Клиент пришел\r\n                                        </button>\r\n                                        <button onClick={() => this.setStatus('CANCELED')} className={\"btn status-button \" + (this.state.status === 'CANCELED' ? 'active-status-button' : '')}>\r\n                                            Клиент не пришел\r\n                                        </button>\r\n                                        <button onClick={() => this.setStatus('READY')} className={\"btn status-button \" + (this.state.status === 'READY' ? 'active-status-button' : '')}>\r\n                                            Клиент подтвердил\r\n                                        </button>\r\n                                    </div>\r\n                                    <hr/>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-2 title-margin\">\r\n                                            Время начала:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <div className=\"inlineDiv\">\r\n                                                <Select\r\n                                                    value={this.state.startHour}\r\n                                                    options={hourOptions()}\r\n                                                    placeholder={''}\r\n                                                    onChange={this.handleChangeStartHour}\r\n                                                    className='selectStyle'\r\n                                                />\r\n                                                <div className=\"quote\">:</div>\r\n                                                <Select\r\n                                                    value={this.state.startMinutes}\r\n                                                    options={minuteOptions()}\r\n                                                    placeholder={''}\r\n                                                    onChange={this.handleChangeStartMinutes}\r\n                                                    className='selectStyle'\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-2\">\r\n                                            Время завершения:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <div className=\"inlineDiv\">\r\n                                                <Select\r\n                                                    value={this.state.endHour}\r\n                                                    options={hourOptions()}\r\n                                                    placeholder={''}\r\n                                                    onChange={this.handleChangeEndHour}\r\n                                                    className='selectStyle'\r\n                                                />\r\n                                                <div className=\"quote\">:</div>\r\n                                                <Select\r\n                                                    value={this.state.endMinutes}\r\n                                                    options={minuteOptions()}\r\n                                                    placeholder={''}\r\n                                                    onChange={this.handleChangeEndMinutes}\r\n                                                    className='selectStyle'\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                </div>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        Имя клиента:\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Autosuggest\r\n                                    suggestions={this.state.clients}\r\n                                    multiSection={true}\r\n                                    onSuggestionsFetchRequested={this.onClientsFetchRequestedByName}\r\n                                    onSuggestionsClearRequested={this.onClientsClearRequested}\r\n                                    getSuggestionValue={getClientName}\r\n                                    renderSuggestion={renderClient}\r\n                                    renderSectionTitle={renderSectionTitle}\r\n                                    getSectionSuggestions={getSectionClients}\r\n                                    inputProps={inputClientNameProps}\r\n                                    onSuggestionSelected={this.onClientSelected}\r\n                                />\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('selectClientName')} aria-describedby=\"selectClientName-error-text\">\r\n                                    { this.validate('selectClientName') ? <FormHelperText id=\"selectClientName-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        Телефон клиента:\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Autosuggest\r\n                                    suggestions={this.state.clients}\r\n                                    multiSection={true}\r\n                                    onSuggestionsFetchRequested={this.onClientsFetchRequestedByPhone}\r\n                                    onSuggestionsClearRequested={this.onClientsClearRequested}\r\n                                    getSuggestionValue={getClientPhone}\r\n                                    renderSuggestion={renderClient}\r\n                                    renderSectionTitle={renderSectionTitle}\r\n                                    getSectionSuggestions={getSectionClients}\r\n                                    inputProps={inputClientPhoneProps}\r\n                                    onSuggestionSelected={this.onClientSelected}\r\n                                />\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('selectClientPhone')} aria-describedby=\"selectClientPhone-error-text\">\r\n                                    { this.validate('selectClientPhone') ? <FormHelperText id=\"selectClientPhone-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        Комментарии к клиенту:\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <TextField InputLabelProps={{ shrink: true }} value={this.state.clientDescription}\r\n                                               onChange={this.handleChange('clientDescription')} fullWidth/>\r\n                                </div>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        Мастер:\r\n                                    </div>\r\n                                </div>\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectMasterName}\r\n                                    loadOptions={getOptionMastersByFIO}\r\n                                    onChange={this.handleInputMasterChange}\r\n                                    placeholder={'Выберите мастера'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectMaster')} aria-describedby=\"selectMaster-error-text\">\r\n                                    { this.validate('selectMaster') ? <FormHelperText id=\"selectMaster-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                                <hr/>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-2 title-margin\">\r\n                                            Услуга:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <FormControl className={classes.formControl} error={this.validateProcedures()} aria-describedby=\"procedures-error-text\">\r\n                                                <Select id=\"procedures\"\r\n                                                        isMulti\r\n                                                        closeMenuOnSelect={false}\r\n                                                        value={this.state.selectedProcedures}\r\n                                                        onChange={this.handleChangeProcedures}\r\n                                                        placeholder=\"Выберите услуги\"\r\n                                                        options={this.state.optionProcedures}\r\n                                                />\r\n                                                { this.validateProcedures() ? <FormHelperText id=\"procedures-error-text\">Необходимо выбрать хотя бы один вариант</FormHelperText>: null }\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <hr/>\r\n                                {this.state.procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION' || procedure.hairType === 'HAIR_CORRECTION') ? <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-2 title-margin\">\r\n                                            Расход волос:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <Select value={this.state.selectedHair}\r\n                                                    onChange={this.handleChangeHair}\r\n                                                    placeholder=\"Выберите категорию волос\"\r\n                                                    options={this.state.optionHairs}\r\n                                            />\r\n                                            { this.state.error ? <div className=\"row error_label error_label_slot\">\r\n                                                {this.state.error}\r\n                                            </div> : null}\r\n                                            <FormControl className={classes.formControlHairs} error={this.validate('selectedHair')} aria-describedby=\"selectedHair-error-text\">\r\n                                                { this.validate('selectedHair') ? <FormHelperText id=\"selectedHair-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.state.selectedHair ? <div className=\"row\">\r\n                                        <div className=\"col-sm-3 title-margin-date\">\r\n                                            Количество (шт.):\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.hairCountExtension}\r\n                                                onChange={this.handleChangeAndRecountSum('hairCountExtension')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-sm-3 title-margin-date\">\r\n                                            Вес (гр.):\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.hairWeight}\r\n                                                onChange={this.handleChangeAndRecountSum('hairWeight')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div> : null}\r\n                                    <hr/>\r\n                                </div> : null}\r\n                                {this.state.procedures.some(procedure => procedure.hairType === 'HAIR_REMOVAL' || procedure.hairType === 'HAIR_CORRECTION') ? <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-4 title-margin-date\">\r\n                                            Снятие волос (количество прядей):\r\n                                        </div>\r\n                                        <div className=\"col-sm-3\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.hairCountRemoval}\r\n                                                onChange={this.handleChangeAndRecountSum('hairCountRemoval')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                </div> : null}\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-3 title-margin-date\">\r\n                                            Услуги мастера (руб.):\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.masterWorkPrice}\r\n                                                onChange={this.handleChange('masterWorkPrice')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-sm-3 title-margin-date\">\r\n                                            Общая стоимость (руб.):\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.allPrice}\r\n                                                onChange={this.handleChange('allPrice')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                </div>\r\n                            </div> : null}\r\n                        </div>\r\n                    </div>: null }\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                        {this.state.id ? <button className=\"btn btn-primary\" onClick={this.delete}>\r\n                            Удалить\r\n                        </button> : null}\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(TimeSlotModal);\r\n","import {GET_TIME_SLOTS} from \"../constants/timeSlotConstants\";\nimport {getTimeSlotsByDate} from \"../service/timeSlotService\";\n\nexport const getTimeSlotsByDateAction = (start, end, master, params) => dispatch => {\n    getTimeSlotsByDate(start, end, master, params).then(timeSlots => {\n        dispatch({\n            type: GET_TIME_SLOTS,\n            payload: timeSlots\n        })\n    });\n};","export const GET_TIME_SLOTS = \"GET_TIME_SLOTS\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BigCalendar from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport TimeSlotModal from \"../modal/TimeSlotModal\";\r\nimport {getTimeSlotsByDate} from \"../service/timeSlotService\";\r\nimport 'moment/locale/ru';\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {getTimeSlotsByDateAction} from \"../actions/timeSlotActions\";\r\nimport {allMastersByDayOff, allMastersByWorkDay} from \"../service/masterService\";\r\nimport Modal from 'react-responsive-modal';\r\nimport Select from 'react-select';\r\nimport {typeMasterFormatter} from \"../data/formatter\";\r\n\r\nclass TimeTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let start = moment().startOf('day').format('YYYY-MM-DD HH:mm:ss');\r\n        let end =  moment().endOf('day').format('YYYY-MM-DD HH:mm:ss');\r\n\r\n        this.state = {\r\n            open: false,\r\n            event: {},\r\n            startWeek: start,\r\n            endWeek: end,\r\n            selectMaster: undefined,\r\n            timeSlots:undefined,\r\n            date: new Date(),\r\n            openAddMaster: false,\r\n            addMasterSelect: undefined,\r\n            addMasterOptions: []\r\n        };\r\n        this.onOpenTimeSlotModal = this.onOpenTimeSlotModal.bind(this);\r\n        this.onCloseTimeSlotModal = this.onCloseTimeSlotModal.bind(this);\r\n        this.saveTimeSlot = this.saveTimeSlot.bind(this);\r\n        this.onNavigate = this.onNavigate.bind(this);\r\n        this.onSelectEvent = this.onSelectEvent.bind(this);\r\n        this.handleInputMasterChange = this.handleInputMasterChange.bind(this);\r\n        this.openModalMasterToGraph = this.openModalMasterToGraph.bind(this);\r\n        this.closeModalMasterToGraph = this.closeModalMasterToGraph.bind(this);\r\n        this.addMasterToGraph = this.addMasterToGraph.bind(this);\r\n        this.handleChangeAddMaster = this.handleChangeAddMaster.bind(this);\r\n        this.setTimeSlots = this.setTimeSlots.bind(this);\r\n\r\n        this.setTimeSlots(start, end, undefined);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let date = this.props.location.search.substr(6);\r\n        if (!date) return;\r\n        this.setTimeSlots(date);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        let date = newProps.location.search.substr(6);\r\n        this.setTimeSlots(date);\r\n    }\r\n\r\n    setTimeSlots(date) {\r\n        this.setState({\r\n            timeSlots: undefined\r\n        });\r\n        let start = moment(new Date(moment(date).startOf('day').toDate())).format('YYYY-MM-DD HH:mm:ss');\r\n        let end = moment(new Date(moment(date).endOf('day').toDate())).format('YYYY-MM-DD HH:mm:ss');\r\n        getTimeSlotsByDate(start, end).then(timeSlots => {\r\n            let events = timeSlots.map(timeSlot => {\r\n                return {\r\n                    id: timeSlot.id,\r\n                    resourceId: timeSlot.master.id,\r\n                    title: \"\\nМастер: \"+ timeSlot.master.person.name\r\n                    + \" \\nКлиент: \" + timeSlot.client.person.name\r\n                    + \" Цена: \" + timeSlot.allPrice,\r\n                    timeSlot: timeSlot,\r\n                    start: moment.unix(timeSlot.startSlot).toDate(),\r\n                    end: moment.unix(timeSlot.endSlot).toDate()\r\n                };\r\n            });\r\n            allMastersByWorkDay(start).then(mastersWorkDay => {\r\n                let resources = mastersWorkDay.map(master => {\r\n                    return {\r\n                        id: master.id,\r\n                        title: master.person.name + \" - \" + typeMasterFormatter(master.type),\r\n                        master: master\r\n                    };\r\n                });\r\n                allMastersByDayOff(start).then(mastersWorkOff => {\r\n                    let addMasterOptions = mastersWorkOff.map(master => {\r\n                        return { value: master.id, label: master.person.name, master: master };\r\n                    });\r\n                    this.setState({\r\n                        timeSlots: {\r\n                            events: events,\r\n                            resources: resources\r\n                        },\r\n                        addMasterOptions: addMasterOptions,\r\n                        date: new Date(date),\r\n                        startWeek: start,\r\n                        endWeek: end\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    onCloseTimeSlotModal = () => {\r\n        this.setTimeSlots(this.state.startWeek, this.state.endWeek);\r\n        this.setState({\r\n            open: false,\r\n            event: {}\r\n        });\r\n    };\r\n\r\n    onSelectEvent = (event) => {\r\n        this.setState({\r\n            event: event,\r\n            open: true\r\n        });\r\n    };\r\n\r\n    onOpenTimeSlotModal = (event) => {\r\n        let master = this.state.timeSlots.resources.find(resource => resource.id === event.resourceId).master;\r\n        this.setState({\r\n            event: {\r\n                start: event.start,\r\n                end: event.end\r\n            },\r\n            selectMaster: {\r\n                value: master.id,\r\n                label: master.person.name,\r\n                master: master\r\n            },\r\n            open: true\r\n        });\r\n    };\r\n\r\n    saveTimeSlot() {\r\n        this.setTimeSlots(this.state.startWeek, this.state.endWeek);\r\n        this.setState({\r\n            open: false,\r\n            event: {}\r\n        });\r\n    };\r\n\r\n    onNavigate(date, view) {\r\n        let end = new Date(moment(date).endOf('isoWeek').toDate());\r\n        end.setHours(23);\r\n        end.setMinutes(59);\r\n        end.setSeconds(59);\r\n\r\n        let start = moment(new Date(moment(date).startOf('isoWeek').toDate())).format('YYYY-MM-DD HH:mm:ss');\r\n        let endFormat = moment(end).format('YYYY-MM-DD HH:mm:ss');\r\n\r\n        this.setTimeSlots(start, endFormat);\r\n\r\n        this.setState({\r\n            startWeek: start,\r\n            endWeek: endFormat\r\n        });\r\n    };\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        this.setTimeSlots(this.state.startWeek, this.state.endWeek,);\r\n        this.setState({\r\n            selectMaster: {\r\n                value: newValue.value.id,\r\n                label: newValue.master.person.name,\r\n                master: newValue.master\r\n            }\r\n        });\r\n    };\r\n\r\n    openModalMasterToGraph() {\r\n        this.setState({\r\n            openAddMaster: true\r\n        });\r\n    };\r\n\r\n    closeModalMasterToGraph() {\r\n        this.setState({\r\n            openAddMaster: false\r\n        });\r\n    };\r\n\r\n    handleChangeAddMaster = (newValue) => {\r\n        this.setState({\r\n            addMasterSelect: newValue\r\n        });\r\n    };\r\n\r\n    addMasterToGraph() {\r\n        let addMasterOptions = this.state.addMasterOptions.filter(\r\n            master => {\r\n                return master.value !== this.state.addMasterSelect.value\r\n            }\r\n        );\r\n        let resources = this.state.timeSlots.resources;\r\n        resources.push({\r\n            id: this.state.addMasterSelect.master.id,\r\n            title: this.state.addMasterSelect.master.person.name,\r\n            master: this.state.addMasterSelect.master\r\n        });\r\n\r\n        this.setState((state) => {\r\n            return {\r\n                timeSlots: {\r\n                    events: state.timeSlots.events,\r\n                    resources: resources,\r\n                },\r\n                addMasterOptions: addMasterOptions,\r\n                addMasterSelect: undefined,\r\n                openAddMaster: false\r\n            };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        moment.locale(\"ru\", {\r\n            week: {\r\n                dow: 1\r\n            }\r\n        });\r\n\r\n        const localize = BigCalendar.momentLocalizer(moment);\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.openModalMasterToGraph } className=\"btn btn-primary\">\r\n                        Добавить мастера в расписание\r\n                    </button>\r\n                </div>\r\n                <hr/>\r\n                { this.state.timeSlots ? <BigCalendar\r\n                    date={this.state.date}\r\n                    localizer={localize}\r\n                    events={this.state.timeSlots.events}\r\n                    resources={this.state.timeSlots.resources}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    selectable={true}\r\n                    defaultView={BigCalendar.Views.DAY}\r\n                    min={new Date(2017, 10, 0, 10, 0, 0)}\r\n                    max={new Date(2017, 10, 0, 22, 0, 0)}\r\n                    views={{day: true}}\r\n                    step={30}\r\n                    toolbar={false}\r\n                    timeslots={1}\r\n                    onSelectEvent={this.onSelectEvent}\r\n                    onSelectSlot={this.onOpenTimeSlotModal}\r\n                    onNavigate={this.onNavigate}\r\n                    eventPropGetter={\r\n                        (event, start, end, isSelected) => {\r\n                            let newStyle = {\r\n                                backgroundColor: \"rgb(104, 14, 14)\",\r\n                                borderRadius: \"0px\",\r\n                                border: \"none\"\r\n                            };\r\n                            if (event.timeSlot.status === 'NEW'){\r\n                                newStyle.backgroundColor = \"gray\"\r\n                            }\r\n                            if (event.timeSlot.status === 'CANCELED'){\r\n                                newStyle.backgroundColor = \"#f30808\"\r\n                            }\r\n                            if (event.timeSlot.status === 'DONE'){\r\n                                newStyle.backgroundColor = \"rgb(39, 38, 42)\"\r\n                            }\r\n                            return {\r\n                                style: newStyle\r\n                            };\r\n                        }\r\n                    }\r\n                />: null}\r\n                {this.state.event.start ? <TimeSlotModal\r\n                    accept={this.saveTimeSlot}\r\n                    event={this.state.event}\r\n                    selectMaster={this.state.selectMaster}\r\n                    open={this.state.open}\r\n                    close={this.onCloseTimeSlotModal}/>: null}\r\n\r\n                <Modal open={this.state.openAddMaster}\r\n                       closeOnOverlayClick={true}\r\n                       showCloseIcon={false}\r\n                       onClose={this.closeModalMasterToGraph}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container add_master_modal\">\r\n                        <div className='row'>\r\n                            <div className=\"col-sm\">\r\n                                <Select closeMenuOnSelect={false}\r\n                                        value={this.state.addMasterSelect}\r\n                                        onChange={this.handleChangeAddMaster}\r\n                                        placeholder=\"Выберите мастера\"\r\n                                        options={this.state.addMasterOptions}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.addMasterToGraph}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.closeModalMasterToGraph}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    timeSlots: state.timeSlotReducer.timeSlots,\r\n    resources: state.timeSlotReducer.resources\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        timeSlotActions: bindActionCreators(getTimeSlotsByDateAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeTable);","export default [\r\n    {\r\n        dataField: 'description',\r\n        text: 'Название аксессуара'\r\n    },\r\n    {\r\n        dataField: 'purchasePrice',\r\n        text: 'Закупочная цена'\r\n    },\r\n    {\r\n        dataField: 'sellingPrice',\r\n        text: 'Цена продажи'\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport '../react-day-picker.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NumberFormat from 'react-number-format';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControlDescription: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator={' '}\r\n        />\r\n    );\r\n}\r\n\r\nclass ProductModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: {\r\n                description: '',\r\n                purchasePrice: '',\r\n                sellingPrice: ''\r\n            },\r\n            submit: false\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.select)\r\n            this.setState({\r\n                product: this.props.select\r\n            });\r\n    }\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.product.description\r\n            && this.state.product.purchasePrice\r\n            && this.state.product.sellingPrice) {\r\n            this.props.accept(this.state.product);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    clear() {\r\n        this.setState({\r\n            product: {\r\n                description: '',\r\n                purchasePrice: '',\r\n                sellingPrice: ''\r\n            },\r\n            submit: false\r\n        });\r\n    }\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state.product || !this.state.product[field]);\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            product: {\r\n                ...this.state.product,\r\n                [name]: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div>\r\n                        <div className={classes.container}>\r\n                            <FormControl className={classes.formControl} error={this.validate('description')} aria-describedby=\"description-error-text\">\r\n                                <InputLabel htmlFor=\"description\">Описание</InputLabel>\r\n                                <Input id=\"description\" value={this.state.product.description} onChange={this.handleChange('description')} />\r\n                                { this.validate('description') ? <FormHelperText id=\"description-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                            <FormControl className={classes.formControl} error={this.validate('purchasePrice')} aria-describedby=\"purchasePrice-error-text\">\r\n                                <InputLabel htmlFor=\"purchasePrice\">Закупочная цена (руб.)</InputLabel>\r\n                                <Input id=\"purchasePrice\" inputComponent={NumberFormatCustom} value={this.state.product.purchasePrice} onChange={this.handleChange('purchasePrice')} />\r\n                                { this.validate('purchasePrice') ? <FormHelperText id=\"purchasePrice-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                            <FormControl className={classes.formControl} error={this.validate('sellingPrice')} aria-describedby=\"sellingPrice-error-text\">\r\n                                <InputLabel htmlFor=\"sellingPrice\">Цена продажи (руб.)</InputLabel>\r\n                                <Input id=\"sellingPrice\" inputComponent={NumberFormatCustom} value={this.state.product.sellingPrice} onChange={this.handleChange('sellingPrice')} />\r\n                                { this.validate('sellingPrice') ? <FormHelperText id=\"sellingPrice-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ProductModal);\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getProducts() {\r\n    return fetch(getUrl() + \"/api/products\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getProductsByDescription(description) {\r\n    return fetch(getUrl() + \"/api/products/description/\" + description)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function createProduct(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nexport function updateProduct(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/product\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colProduct from \"../data/colProduct\";\r\nimport ProductModal from \"../modal/ProductModal\";\r\nimport {createProduct, getProducts, updateProduct} from \"../service/productService\";\r\n\r\nclass Products extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            openCreate: false,\r\n            openUpdate: false\r\n        };\r\n        this.createProduct = this.createProduct.bind(this);\r\n        this.updateProduct = this.updateProduct.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.handleOnSelect = this.handleOnSelect.bind(this);\r\n        getProducts().then(data => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        });\r\n    }\r\n\r\n    createProduct(entity) {\r\n        createProduct(entity).then(() => {\r\n            getProducts().then(data => {\r\n                this.setState({\r\n                    openCreate: false,\r\n                    data: data\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    updateProduct(entity) {\r\n        updateProduct(entity).then(() => {\r\n            getProducts().then(data => {\r\n                this.setState({\r\n                    openUpdate: false,\r\n                    data: data,\r\n                    select: entity\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false\r\n        });\r\n    };\r\n\r\n    onOpenUpdateModal () {\r\n        this.setState({\r\n            openUpdate: true\r\n        });\r\n    };\r\n\r\n    handleOnSelect = (row) => {\r\n        this.setState({\r\n            select : row\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const selectRow = {\r\n            mode: 'radio',\r\n            clickToSelect: true,\r\n            hideSelectColumn: true,\r\n            bgColor: '#00BFFF',\r\n            onSelect: this.handleOnSelect,\r\n        };\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.onOpenCreateModal } className=\"btn btn-primary\">\r\n                        Добавить аксессуар\r\n                    </button>\r\n                    { this.state.select ? <button onClick = { this.onOpenUpdateModal } className=\"btn btn-primary\">\r\n                        Изменить аксессуар\r\n                    </button> : null }\r\n                </div>\r\n                {this.state.data ? <BootstrapTable\r\n                    keyField=\"id\"\r\n                    selectRow={ selectRow }\r\n                    data={this.state.data}\r\n                    columns={colProduct}\r\n                />: null}\r\n                <ProductModal accept={this.createProduct}\r\n                              open={this.state.openCreate}\r\n                              close={this.onCloseCreateModal} />\r\n                {this.state.openUpdate ? <ProductModal accept={this.updateProduct}\r\n                              open={this.state.openUpdate}\r\n                              select={this.state.select}\r\n                              close={this.onCloseUpdateModal} /> : null }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getExpenses(params, start, end) {\r\n    let sort = params.sortField ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterMaster= params.filters && params.filters['master.person.name'] ? \"&masterId=\" + params.filters['master.person.name'].filterVal : '';\r\n    let filterProduct= params.filters && params.filters['product.description'] ? \"&productId=\" + params.filters['product.description'].filterVal : '';\r\n    return fetch(getUrl() + \"/api/expenses?page=\" + params.page\r\n        + \"&size=\" + params.size + sort + filterMaster + filterProduct + \"&start=\" + start + \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function updateExpense(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createExpense(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/expense\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_EXPENSES} from \"../constants/expenseConstants\";\r\nimport {getExpenses} from \"../service/expenseService\";\r\n\r\nexport const getExpensesAction = (params, start, end) => dispatch => {\r\n    getExpenses(params, start, end).then(expenses => {\r\n        dispatch({\r\n            type: GET_EXPENSES,\r\n            payload: expenses\r\n        })\r\n    });\r\n};","export const GET_EXPENSES = \"GET_EXPENSES\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getProducts, getProductsByDescription} from \"../service/productService\";\r\nimport {getMasters, getMastersByFiO} from \"../service/masterService\";\r\nimport PageParams from \"../model/PageParams\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {createExpense, updateExpense} from \"../service/expenseService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionMastersByFIO(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getMasters(new PageParams(0, 100));\r\n    else response = await getMastersByFiO(search);\r\n    let cachedOptions = response.content.map((d) => ({\r\n        value: d.id,\r\n        label: d.person.name,\r\n        master: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\n\r\nasync function getOptionExpensesByDescription(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getProducts();\r\n    else response = await getProductsByDescription(search);\r\n    let cachedOptions = response.map((d) => ({\r\n        value: d.id,\r\n        label: d.description,\r\n        product: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass ExpenseModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectMaster: undefined,\r\n            selectProductByDescription: undefined,\r\n            selectMasterFio: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputProductChange = this.handleInputProductChange.bind(this);\r\n        this.handleInputMasterChange = this.handleInputMasterChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeCountProduct = this.handleChangeCountProduct.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                id: this.props.update.id,\r\n                date: this.props.update.date ? moment.unix(this.props.update.date).toDate() : new Date(),\r\n                countProduct: this.props.update.countProduct,\r\n                selectProduct: this.props.update.product,\r\n                selectMaster: this.props.update.master,\r\n                selectMasterFio: {\r\n                    value: this.props.update.master.id,\r\n                    label: this.props.update.master.person.name,\r\n                    master: this.props.update.master\r\n                },\r\n                selectProductByDescription: {\r\n                    value: this.props.update.product.id,\r\n                    label: this.props.update.product.description,\r\n                    product: this.props.update.product\r\n                },\r\n                error: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectMaster: undefined,\r\n            selectProductByDescription: undefined,\r\n            selectMasterFio: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.selectProduct\r\n            && this.state.countProduct>0\r\n            && this.state.selectMaster\r\n            && this.state.date) {\r\n            let expense = {\r\n                id: this.state.id,\r\n                date: this.state.date,\r\n                product: this.state.selectProduct,\r\n                master: this.state.selectMaster,\r\n                countProduct: this.state.countProduct\r\n            };\r\n            if (this.props.isCreate) this.createExpense(expense);\r\n            else this.updateExpense(expense);\r\n        }\r\n    };\r\n\r\n    updateExpense(entity) {\r\n        updateExpense(entity).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    createExpense(entity) {\r\n        createExpense(entity).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    handleInputProductChange = (newValue) => {\r\n        this.setState({\r\n            selectProduct: newValue.product,\r\n            selectProductByDescription: {\r\n                value: newValue.value,\r\n                label: newValue.product.description,\r\n                product: newValue.product\r\n            },\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        this.setState({\r\n            selectMaster: newValue.master,\r\n            selectMasterFio: {\r\n                value: newValue.value,\r\n                label: newValue.master.person.name,\r\n                master: newValue.master\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeCountProduct = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                countProduct: event.target.value,\r\n                error: undefined\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Товар:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectProductByDescription}\r\n                                    loadOptions={getOptionExpensesByDescription}\r\n                                    onChange={this.handleInputProductChange}\r\n                                    placeholder={'Выберите товар'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectProduct')} aria-describedby=\"selectProduct-error-text\">\r\n                                    { this.validate('selectProduct') ? <FormHelperText id=\"selectProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                Количество:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.countProduct}\r\n                                           onChange={this.handleChangeCountProduct} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Мастер:\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectMasterFio}\r\n                                    loadOptions={getOptionMastersByFIO}\r\n                                    onChange={this.handleInputMasterChange}\r\n                                    placeholder={'Выберите мастера'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectMaster')} aria-describedby=\"selectMaster-error-text\">\r\n                                    { this.validate('selectMaster') ? <FormHelperText id=\"selectMaster-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Дата:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <DayPickerInput\r\n                                placeholder={`Дата расхода`}\r\n                                parseDate={parseDate}\r\n                                value={this.state.date}\r\n                                onDayChange={this.handleChangeDate}\r\n                                formatDate={formatDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                }}/>\r\n                            <FormControl className={classes.formControl} error={this.validate('date')} aria-describedby=\"date-error-text\">\r\n                                { this.validate('date') ? <FormHelperText id=\"date-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    { this.state.error ? <div className=\"row error_label\">\r\n                        {this.state.error}\r\n                    </div> : null}\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ExpenseModal);\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getMastersReport(start, end) {\r\n    return fetch(getUrl() + \"/report/getMastersReport?start=\" + start + \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => {\r\n            return res.blob();\r\n        }).then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'отчет.xlsx';\r\n            a.click();\r\n        }).catch(err => console.error(err));\r\n}\r\n\r\nexport function getExpensesReport(params, start, end) {\r\n    let sort = params.sortOrder ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterMaster= params.filters && params.filters['master.person.name'] ? \"&masterId=\" + params.filters['master.person.name'].filterVal : '';\r\n    let filterProduct= params.filters && params.filters['product.description'] ? \"&productId=\" + params.filters['product.description'].filterVal : '';\r\n    return fetch(getUrl() + \"/report/getExpensesReport?start=\" + start + \"&end=\" + end + sort + filterMaster + filterProduct)\r\n        .then(handleErrors)\r\n        .then(res => {\r\n            return res.blob();\r\n        }).then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'отчет.xlsx';\r\n            a.click();\r\n        }).catch(err => console.error(err));\r\n}\r\n\r\nexport function getIncomingReport(params, start, end) {\r\n    let sort = params.sortOrder ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterProduct= params.filters && params.filters['product.description'] ? \"&productId=\" + params.filters['product.description'].filterVal : '';\r\n    return fetch(getUrl() + \"/report/getIncomingReport?start=\" + start + \"&end=\" + end + sort + filterProduct)\r\n        .then(handleErrors)\r\n        .then(res => {\r\n            return res.blob();\r\n        }).then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'отчет.xlsx';\r\n            a.click();\r\n        }).catch(err => console.error(err));\r\n}\r\n\r\nexport function getAdditionalIncomingReport(params, start, end) {\r\n    let sort = params.sortOrder ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterMaster= params.filters && params.filters['master.person.name'] ? \"&masterId=\" + params.filters['master.person.name'].filterVal : '';\r\n    return fetch(getUrl() + \"/report/getAdditionalIncomingReport?start=\" + start + \"&end=\" + end + sort + filterMaster)\r\n        .then(handleErrors)\r\n        .then(res => {\r\n            return res.blob();\r\n        }).then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'отчет.xlsx';\r\n            a.click();\r\n        }).catch(err => console.error(err));\r\n}\r\n\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport {connect} from 'react-redux';\r\nimport {getExpensesAction} from \"../actions/expenseActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport ExpenseModal from \"../modal/ExpenseModal\";\r\nimport {getAllMasters} from \"../service/masterService\";\r\nimport {selectFilter} from \"react-bootstrap-table2-filter\";\r\nimport {getProducts} from \"../service/productService\";\r\nimport moment from 'moment'\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport {getExpensesReport} from \"../service/reportService\";\r\n\r\nclass Expenses extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            sortField: '',\r\n            sortOrder: '',\r\n            masterOptions: {},\r\n            productOptions: {},\r\n            filters: {},\r\n            row: undefined,\r\n            error: undefined,\r\n            start: moment().startOf('month').toDate(),\r\n            end: moment().endOf('month').toDate()\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.accept = this.accept.bind(this);\r\n        this.export = this.export.bind(this);\r\n\r\n        this.props.expenseActions(new PageParams(0, 10, \"date\", \"asc\"),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n\r\n        getAllMasters().then(masters => {\r\n            let masterOptions = {};\r\n            masters.forEach(master => {\r\n                masterOptions[master.id] = master.person.name;\r\n            });\r\n            this.setState({\r\n                masterOptions: masterOptions\r\n            })\r\n        });\r\n        getProducts().then(products => {\r\n            let productOptions = {};\r\n            products.forEach(product => {\r\n                productOptions[product.id] = product.description;\r\n            });\r\n            this.setState({\r\n                productOptions: productOptions\r\n            })\r\n        });\r\n    }\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {sortField, sortOrder, filters, page, sizePerPage}) => {\r\n        this.setState({\r\n            sortField: sortField,\r\n            sortOrder: sortOrder,\r\n            filters: filters\r\n        });\r\n        this.props.expenseActions(new PageParams(page - 1, sizePerPage, sortField, sortOrder, filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    };\r\n\r\n    accept() {\r\n        this.props.expenseActions(new PageParams(\r\n            this.props.expenses.number,\r\n            this.props.expenses.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeStartDate = (newValue) => {\r\n        this.props.expenseActions(new PageParams(\r\n            this.props.expenses.number,\r\n            this.props.expenses.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            start: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeEndDate = (newValue) => {\r\n        this.props.expenseActions(new PageParams(\r\n            this.props.expenses.number,\r\n            this.props.expenses.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            end: newValue\r\n        });\r\n    };\r\n\r\n    export() {\r\n        getExpensesReport(new PageParams(\r\n            this.props.expenses.number,\r\n            this.props.expenses.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    }\r\n\r\n    render() {\r\n        const colExpense = [\r\n            {\r\n                dataField: 'date',\r\n                text: 'Дата расхода',\r\n                sort: true,\r\n                formatter: (cellContent) => {\r\n                    return (\r\n                        <div>\r\n                            {moment.unix(cellContent).format(\"DD.MM.YYYY\")}\r\n                        </div>\r\n                    )\r\n                }\r\n            },{\r\n                dataField: 'master.person.name',\r\n                text: '',\r\n                sort: true,\r\n                filter: selectFilter({\r\n                    placeholder: 'Мастер',\r\n                    style: {\r\n                        backgroundColor: '#e4e4e1'\r\n                    },\r\n                    options: this.state.masterOptions\r\n                })\r\n            },\r\n            {\r\n                dataField: 'product.description',\r\n                text: '',\r\n                sort: true,\r\n                filter: selectFilter({\r\n                    placeholder: 'Товар',\r\n                    style: {\r\n                        backgroundColor: '#e4e4e1'\r\n                    },\r\n                    options: this.state.productOptions\r\n                })\r\n            },\r\n            {\r\n                dataField: 'countProduct',\r\n                text: 'Количество товара'\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            c\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.start}\r\n                                onDayChange={this.handleChangeStartDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            по\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.end}\r\n                                onDayChange={this.handleChangeEndDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TableRemote data={this.props.expenses ? this.props.expenses.content : []}\r\n                                                   page={this.props.expenses ? this.props.expenses.number + 1 : 1}\r\n                                                   columns={colExpense}\r\n                                                   entity=\"расход\"\r\n                                                   buttonCreateTitle='Создание нового расхода'\r\n                                                   buttonEditTitle='Изменение расхода'\r\n                                                   sizePerPage={this.props.expenses ? this.props.expenses.size : 0}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   isExport={true}\r\n                                                   export={this.export}\r\n                                                   totalSize={this.props.expenses ? this.props.expenses.totalElements : 0}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n\r\n                {this.state.row ? <ExpenseModal accept={this.accept}\r\n                             open={this.state.openUpdate}\r\n                             isCreate={false}\r\n                             update={this.state.row}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <ExpenseModal accept={this.accept}\r\n                             open={this.state.openCreate} isCreate={true}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    expenses: state.expenseReducer.expenses\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        expenseActions: bindActionCreators(getExpensesAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Expenses);\r\n","export default [\r\n    {\r\n        dataField: 'product.description',\r\n        text: 'Пролукт'\r\n    },\r\n    {\r\n        dataField: 'count',\r\n        text: 'Остаток'\r\n    }\r\n]","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getAllProductsBalance() {\r\n    return fetch(getUrl() + \"/api/getAllProductsBalance\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function createIncoming(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/incoming\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getProducts, getProductsByDescription} from \"../service/productService\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionExpensesByDescription(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getProducts();\r\n    else response = await getProductsByDescription(search);\r\n    let cachedOptions = response.map((d) => ({\r\n        value: d.id,\r\n        label: d.description,\r\n        product: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass BalanceModal extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: undefined,\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputProductChange = this.handleInputProductChange.bind(this);\r\n        this.handleChangeCountProduct = this.handleChangeCountProduct.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.selectProduct\r\n            && this.state.countProduct>0) {\r\n            let incoming = {\r\n                id: this.state.id,\r\n                product: this.state.selectProduct,\r\n                countProduct: this.state.countProduct\r\n            };\r\n            this.props.accept(incoming);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    handleInputProductChange = (newValue) => {\r\n        this.setState({\r\n            selectProduct: newValue.product,\r\n            selectProductByDescription: {\r\n                value: newValue.value,\r\n                label: newValue.product.description,\r\n                product: newValue.product\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeCountProduct = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                countProduct: event.target.value\r\n            });\r\n        }\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2 title-margin\">\r\n                                Товар:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectProductByDescription}\r\n                                    loadOptions={getOptionExpensesByDescription}\r\n                                    onChange={this.handleInputProductChange}\r\n                                    placeholder={'Выберите товар'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectProduct')} aria-describedby=\"selectProduct-error-text\">\r\n                                    { this.validate('selectProduct') ? <FormHelperText id=\"selectProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2 title-margin\">\r\n                                Количество:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.countProduct}\r\n                                           onChange={this.handleChangeCountProduct} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(BalanceModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport colProductBalance from \"../data/colProductBalance\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport {getAllProductsBalance} from \"../service/productBlanceService\";\r\nimport {createIncoming} from \"../service/balanceService\";\r\nimport BalanceModal from \"../modal/BalanceModal\";\r\n\r\nclass Balance extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            openCreate: false\r\n        };\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n        this.createIncoming = this.createIncoming.bind(this);\r\n\r\n        getAllProductsBalance().then(data => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        });\r\n    }\r\n\r\n    createIncoming(entity) {\r\n        createIncoming(entity).then(() => {\r\n            getAllProductsBalance().then(data => {\r\n                this.setState({\r\n                    data: data,\r\n                    openCreate: false\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.onOpenCreateModal } className=\"btn btn-primary\">\r\n                        Добавить приход продукта\r\n                    </button>\r\n                </div>\r\n                <BootstrapTable\r\n                    keyField=\"product.description\"\r\n                    data={this.state.data}\r\n                    columns={colProductBalance}\r\n                />\r\n                <BalanceModal accept={this.createIncoming}\r\n                              open={this.state.openCreate}\r\n                              close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Balance;\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getStatisticMastersReport(start, end, reportType, master) {\r\n    let masterId = master ? \"&masterId=\" + master.id : '';\r\n    let report = reportType===0 ? \"getStatisticMastersReport\" : \"getIncomesBetweenDate\";\r\n    return fetch(getUrl() + \"/report/\" + report + \"?start=\" + start + \"&end=\" + end + masterId)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport '../style.css';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {getMastersReport} from \"../service/reportService\";\r\nimport {getMasters, getMastersByFiO} from \"../service/masterService\";\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport PageParams from \"../model/PageParams\";\r\nimport {getStatisticMastersReport} from \"../service/dashboardService\";\r\nimport ReactTable from 'react-table'\r\nimport {reportOptions} from \"../data/selectOptions\";\r\nimport Select from 'react-select';\r\n\r\nasync function getOptionMastersByFIO(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getMasters(new PageParams(0, 100));\r\n    else response = await getMastersByFiO(search);\r\n    let cachedOptions = response.content.map((d) => ({\r\n        value: d.id,\r\n        label: d.person.name,\r\n        master: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            masters: undefined,\r\n            all: undefined,\r\n            start: moment().startOf('month').toDate(),\r\n            end: moment().endOf('month').toDate(),\r\n            selectMasterFio: undefined,\r\n            data: [],\r\n            columns: [{\r\n                dataField: 'day',\r\n                text: 'Дата'\r\n            }],\r\n            pageSize: 30,\r\n            reportType: undefined,\r\n            report: 0\r\n        };\r\n        this.handleChangeStartDate = this.handleChangeStartDate.bind(this);\r\n        this.handleChangeEndDate = this.handleChangeEndDate.bind(this);\r\n\r\n        getStatisticMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'), this.state.report).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                pageSize: data.data.length + 1\r\n            });\r\n        });\r\n    }\r\n\r\n    handleChangeStartDate = (newValue) => {\r\n        getStatisticMastersReport(moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'), this.state.report).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                start: newValue,\r\n                pageSize: data.data.length + 1\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeEndDate = (newValue) => {\r\n        getStatisticMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(newValue)).set({hour:23,minute:59,second:59,millisecond:0}).format('YYYY-MM-DD HH:mm:ss'),\r\n            this.state.report).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                end: newValue,\r\n                pageSize: data.data.length + 1\r\n            });\r\n        });\r\n    };\r\n\r\n    export = () => {\r\n        getMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    };\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        getStatisticMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'), this.state.report, newValue.master).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                pageSize: data.data.length + 1,\r\n                selectMaster: newValue.master,\r\n                selectMasterFio: {\r\n                    value: newValue.value,\r\n                    label: newValue.master.person.name,\r\n                    master: newValue.master\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeReport = (newValue) => {\r\n        getStatisticMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'), newValue.value, this.state.selectMaster).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                pageSize: data.data.length + 1,\r\n                reportType: newValue,\r\n                report: newValue.value\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-1 title-margin-date\">\r\n                            c\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.start}\r\n                                onDayChange={this.handleChangeStartDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-1 title-margin-date\">\r\n                            по\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.end}\r\n                                onDayChange={this.handleChangeEndDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-1 title-margin-date\">\r\n                            Мастер:\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <AsyncPaginate\r\n                                value={this.state.selectMasterFio}\r\n                                loadOptions={getOptionMastersByFIO}\r\n                                onChange={this.handleInputMasterChange}\r\n                                placeholder={'Выберите мастера'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <div className=\"container\" >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-3 title-margin-date\">\r\n                                <button onClick = { this.export } className=\"btn btn-primary\">\r\n                                    Выгрузить сводный отчет\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-sm-1  title-margin-date\">\r\n                                Отчет:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <Select\r\n                                    value={this.state.reportType}\r\n                                    options={reportOptions()}\r\n                                    placeholder={''}\r\n                                    onChange={this.handleChangeReport}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <ReactTable\r\n                        data={this.state.data}\r\n                        columns={this.state.columns}\r\n                        showPagination={false}\r\n                        pageSize={this.state.pageSize}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport const userService = {\r\n    login,\r\n    logout\r\n};\r\n\r\nfunction login(login, password) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ login, password })\r\n    };\r\n\r\n    return fetch(getUrl() + `/api/login`, requestOptions)\r\n        .then(handleResponse)\r\n        .then(user => {\r\n            if (user) {\r\n                user.authdata = window.btoa(login + ':' + password);\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            }\r\n            return user;\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                logout();\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}","import React from 'react';\r\n\r\nimport {userService} from '../service/userService';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        userService.logout();\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false,\r\n            loading: false,\r\n            error: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value,\r\n            error: ''\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({ submitted: true });\r\n        const { username, password } = this.state;\r\n        if (!(username && password)) {\r\n            return;\r\n        }\r\n        this.setState({ loading: true });\r\n        userService.login(username, password)\r\n            .then(\r\n                user => {\r\n                    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n                    this.props.history.push(from);\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                    this.setState({ error: 'Логин или пароль введены неверно', loading: false });\r\n                }\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const { username, password, submitted, loading, error } = this.state;\r\n        return (\r\n            <div className=\"login-div\">\r\n                <form name=\"form\" onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <div className={'form-group' + (submitted && !username ? ' has-error' : '')}>\r\n                        <label htmlFor=\"username\">Логин</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"username\" value={username} onChange={this.handleChange} />\r\n                        {submitted && !username &&\r\n                        <div className=\"help-block\">Введите логин</div>\r\n                        }\r\n                    </div>\r\n                    <div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\r\n                        <label htmlFor=\"password\">Пароль</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={this.handleChange} />\r\n                        {submitted && !password &&\r\n                        <div className=\"help-block\">Введите пароль</div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary\" disabled={loading}>Войти</button>\r\n                    </div>\r\n                    {error &&\r\n                    <div className={'alert alert-danger'}>{error}</div>\r\n                    }\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        localStorage.getItem('user')\n            ? <Component {...props} />\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    )} />\n)","import styled from \"styled-components\";\r\n\r\nexport const AppContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Navigation = styled.div`\r\n  width: 220px;\r\n  flex-shrink: 0;\r\n  background: #fff;\r\n  border-right: 1px solid rgba(0, 0, 0, 0.125);\r\n  background-color: rgba(79, 88, 87, 0.54);\r\n`;\r\nexport const Body = styled.div`\r\n  padding: 12px;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 12px;\r\n  background-color: rgba(79, 88, 87, 0.54);\r\n`;\r\n","export default [\r\n    {\r\n        dataField: 'id',\r\n        text: 'ID'\r\n    },\r\n    {\r\n        dataField: 'description',\r\n        text: 'Название услуги'\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport '../react-day-picker.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControlDescription: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nclass ProcedureModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            service: {\r\n                description: ''\r\n            },\r\n            submit: false\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.select)\r\n            this.setState({\r\n                service: this.props.select\r\n            });\r\n    }\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.service.description) {\r\n            this.props.accept(this.state.service);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    clear() {\r\n        this.setState({\r\n            service: {\r\n                description: ''\r\n            },\r\n            submit: false\r\n        });\r\n    }\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state.service || !this.state.service[field]);\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            service: {\r\n                ...this.state.service,\r\n                [name]: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div>\r\n                        <div className={classes.container}>\r\n                            <FormControl className={classes.formControlDescription} error={this.validate('description')} aria-describedby=\"description-error-text\">\r\n                                <InputLabel htmlFor=\"description\">Описание</InputLabel>\r\n                                <Input id=\"description\" value={this.state.service.description} onChange={this.handleChange('description')} />\r\n                                { this.validate('description') ? <FormHelperText id=\"description-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ProcedureModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colProcedure from \"../data/colProcedure\";\r\nimport ServiceModal from \"../modal/ProcedureModal\";\r\nimport {createProcedure, getProcedures, updateProcedure} from \"../service/procedureService\";\r\n\r\nclass Procedures extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            openCreate: false,\r\n            openUpdate: false\r\n        };\r\n        this.createProcedure = this.createProcedure.bind(this);\r\n        this.updateProcedure = this.updateProcedure.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.handleOnSelect = this.handleOnSelect.bind(this);\r\n        getProcedures().then(data => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        });\r\n    }\r\n\r\n    createProcedure(entity) {\r\n        createProcedure(entity).then(() => {\r\n            getProcedures().then(data => {\r\n                this.setState({\r\n                    openCreate: false,\r\n                    data: data\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    updateProcedure(entity) {\r\n        updateProcedure(entity).then(() => {\r\n            getProcedures().then(data => {\r\n                this.setState({\r\n                    openUpdate: false,\r\n                    data: data,\r\n                    select: entity\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false\r\n        });\r\n    };\r\n\r\n    onOpenUpdateModal () {\r\n        this.setState({\r\n            openUpdate: true\r\n        });\r\n    };\r\n\r\n    handleOnSelect = (row) => {\r\n        this.setState({\r\n            select : row\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const selectRow = {\r\n            mode: 'radio',\r\n            clickToSelect: true,\r\n            hideSelectColumn: true,\r\n            bgColor: '#00BFFF',\r\n            onSelect: this.handleOnSelect,\r\n        };\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.onOpenCreateModal } className=\"btn btn-primary\">\r\n                        Добавить новую услугу\r\n                    </button>\r\n                    { this.state.select ? <button onClick = { this.onOpenUpdateModal } className=\"btn btn-primary\">\r\n                        Редактировать услугу\r\n                    </button> : null }\r\n                </div>\r\n                {this.state.data ? <BootstrapTable\r\n                    keyField=\"id\"\r\n                    selectRow={ selectRow }\r\n                    data={this.state.data}\r\n                    columns={colProcedure}\r\n                />: null}\r\n                <ServiceModal accept={this.createProcedure}\r\n                              open={this.state.openCreate}\r\n                              close={this.onCloseCreateModal} />\r\n                {this.state.openUpdate ? <ServiceModal accept={this.updateProcedure}\r\n                                                       open={this.state.openUpdate}\r\n                                                       select={this.state.select}\r\n                                                       close={this.onCloseUpdateModal} /> : null }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Procedures;\r\n","import React from \"react\";\r\n\r\nfunction  maxLength(cell) {\r\n    let max = cell !== 0 ? cell : \"более\";\r\n    return (\r\n        <span>{max}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'minLength',\r\n        text: 'Минимальная длина'\r\n    },\r\n    {\r\n        dataField: 'maxLength',\r\n        text: 'Максимальная длина',\r\n        formatter: maxLength\r\n    },\r\n    {\r\n        dataField: 'price',\r\n        text: 'Стоимость за грамм'\r\n    }\r\n]","import {typeHairFormatter, typeMasterFormatter} from \"../data/formatter\";\r\n\r\nimport React from \"react\";\r\n\r\nfunction typeMaster(cell) {\r\n    return (\r\n        <span>{typeMasterFormatter(cell)}</span>\r\n    );\r\n}\r\n\r\nfunction typeHair(cell) {\r\n    return (\r\n        <span>{typeHairFormatter(cell)}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'price',\r\n        text: 'Стоимсоть за прядь'\r\n    },\r\n    {\r\n        dataField: 'masterType',\r\n        text: 'Категория мастера',\r\n        formatter: typeMaster\r\n    },\r\n    {\r\n        dataField: 'hairType',\r\n        text: 'Тип работ',\r\n        formatter: typeHair\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport {getAllHairCategories, getAllHairs} from \"../service/hairService\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colHair from \"../data/colHair\";\r\nimport colHairCategory from \"../data/colHairCategory\";\r\n\r\nclass Directory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hairsCategory: [],\r\n            hairs: []\r\n        };\r\n        getAllHairCategories().then(data => {\r\n            this.setState({\r\n                hairsCategory: data\r\n            })\r\n        });\r\n        getAllHairs().then(data => {\r\n            this.setState({\r\n                hairs: data\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <h4>\r\n                    Прайс стоимсоти услуг мастеров:\r\n                </h4>\r\n                <BootstrapTable\r\n                    keyField=\"id\"\r\n                    data={this.state.hairsCategory}\r\n                    columns={colHairCategory}\r\n                />\r\n                <hr/>\r\n                <h4>\r\n                    Прайс стоимости волос:\r\n                </h4>\r\n                <BootstrapTable\r\n                    keyField=\"id\"\r\n                    data={this.state.hairs}\r\n                    columns={colHair}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Directory;\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getSales(params) {\r\n    return fetch(getUrl() + \"/api/sales?page=\" + params.page\r\n        + \"&size=\" + params.size)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function updateSale(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createSale(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/sale\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_SALES} from \"../constants/saleConstants\";\r\nimport {getSales} from \"../service/saleService\";\r\n\r\nexport const getSalesAction = (params) => dispatch => {\r\n    getSales(params).then(sales => {\r\n        dispatch({\r\n            type: GET_SALES,\r\n            payload: sales\r\n        })\r\n    });\r\n};","export const GET_SALES = \"GET_SALES\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getProducts, getProductsByDescription} from \"../service/productService\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {createSale, updateSale} from \"../service/saleService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionExpensesByDescription(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getProducts();\r\n    else response = await getProductsByDescription(search);\r\n    let cachedOptions = response.map((d) => ({\r\n        value: d.id,\r\n        label: d.description,\r\n        product: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass SaleModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputProductChange = this.handleInputProductChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeCountProduct = this.handleChangeCountProduct.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                id: this.props.update.id,\r\n                date: this.props.update.date ? moment.unix(this.props.update.date).toDate() : new Date(),\r\n                countProduct: this.props.update.countProduct,\r\n                selectProduct: this.props.update.product,\r\n                cost: this.props.update.cost,\r\n                selectProductByDescription: {\r\n                    value: this.props.update.product.id,\r\n                    label: this.props.update.product.description,\r\n                    product: this.props.update.product\r\n                },\r\n                error: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.selectProduct\r\n            && this.state.countProduct>0\r\n            && this.state.date) {\r\n            let sale = {\r\n                id: this.state.id,\r\n                date: this.state.date,\r\n                product: this.state.selectProduct,\r\n                cost: this.state.cost,\r\n                countProduct: this.state.countProduct\r\n            };\r\n            if (this.props.isCreate) this.createSale(sale);\r\n            else this.updateSale(sale);\r\n        }\r\n    };\r\n\r\n    updateSale(entity) {\r\n        updateSale(entity).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    createSale(entity) {\r\n        createSale(entity).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    handleInputProductChange = (newValue) => {\r\n        this.setState({\r\n            selectProduct: newValue.product,\r\n            selectProductByDescription: {\r\n                value: newValue.value,\r\n                label: newValue.product.description,\r\n                product: newValue.product\r\n            },\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeCountProduct = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                countProduct: event.target.value,\r\n                error: undefined\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Товар:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectProductByDescription}\r\n                                    loadOptions={getOptionExpensesByDescription}\r\n                                    onChange={this.handleInputProductChange}\r\n                                    placeholder={'Выберите товар'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectProduct')} aria-describedby=\"selectProduct-error-text\">\r\n                                    { this.validate('selectProduct') ? <FormHelperText id=\"selectProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                Количество:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.countProduct}\r\n                                           onChange={this.handleChangeCountProduct} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Дата:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <DayPickerInput\r\n                                    placeholder={`Дата расхода`}\r\n                                    parseDate={parseDate}\r\n                                    value={this.state.date}\r\n                                    onDayChange={this.handleChangeDate}\r\n                                    formatDate={formatDate}\r\n                                    dayPickerProps={{\r\n                                        locale: 'ru',\r\n                                        localeUtils: MomentLocaleUtils,\r\n                                    }}/>\r\n                                <FormControl className={classes.formControl} error={this.validate('date')} aria-describedby=\"date-error-text\">\r\n                                    { this.validate('date') ? <FormHelperText id=\"date-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { this.state.error ? <div className=\"row error_label\">\r\n                        {this.state.error}\r\n                    </div> : null}\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SaleModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport {connect} from 'react-redux';\r\nimport {getSalesAction} from \"../actions/saleActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport {getProducts} from \"../service/productService\";\r\nimport moment from 'moment'\r\nimport SaleModal from \"../modal/SaleModal\";\r\n\r\nclass Sales extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            productOptions: {},\r\n            row: undefined,\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.accept = this.accept.bind(this);\r\n\r\n        this.props.saleActions(new PageParams(0, 10));\r\n\r\n        getProducts().then(products => {\r\n            let productOptions = {};\r\n            products.forEach(product => {\r\n                productOptions[product.id] = product.description;\r\n            });\r\n            this.setState({\r\n                productOptions: productOptions\r\n            })\r\n        });\r\n    }\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined,\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false,\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {sortField, sortOrder, filters, page, sizePerPage}) => {\r\n        this.props.saleActions(new PageParams(page - 1, sizePerPage, sortField, sortOrder, filters));\r\n    };\r\n\r\n    accept() {\r\n        this.props.saleActions(new PageParams(\r\n            this.props.sales.number,\r\n            this.props.sales.size\r\n        ));\r\n        this.setState({\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const colSale = [\r\n            {\r\n                dataField: 'date',\r\n                text: 'Дата продажи',\r\n                formatter: (cellContent) => {\r\n                    return (\r\n                        <div>\r\n                            {moment.unix(cellContent).format(\"DD.MM.YYYY\")}\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                dataField: 'product.description',\r\n                text: 'Товар'\r\n            },\r\n            {\r\n                dataField: 'countProduct',\r\n                text: 'Количество товара'\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"main-div\">\r\n                <TableRemote data={this.props.sales ? this.props.sales.content : []}\r\n                                                   page={this.props.sales ? this.props.sales.number + 1 : 1}\r\n                                                   columns={colSale}\r\n                                                   entity=\"продажа\"\r\n                                                   buttonCreateTitle='Создание новой продажи'\r\n                                                   buttonEditTitle='Изменение продажи'\r\n                                                   sizePerPage={this.props.sales ? this.props.sales.size : 0}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   totalSize={this.props.sales ? this.props.sales.totalElements : 0}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n\r\n                {this.state.row ? <SaleModal accept={this.accept}\r\n                             open={this.state.openUpdate}\r\n                             update={this.state.row}\r\n                             isCreate={false}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <SaleModal accept={this.accept}\r\n                             open={this.state.openCreate}\r\n                             isCreate={true}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    sales: state.saleReducer.sales\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        saleActions: bindActionCreators(getSalesAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sales);\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getIncomings(params, start, end) {\r\n    let sort = params.sortField ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterProduct= params.filters && params.filters['product.description'] ? \"&productId=\" + params.filters['product.description'].filterVal : '';\r\n    return fetch(getUrl() + \"/api/incomings?page=\" + params.page\r\n        + \"&size=\" + params.size + sort + filterProduct + \"&start=\" + start + \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function updateIncoming(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createIncoming(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/incoming\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","export const GET_INCOMINGS = \"GET_INCOMINGS\";","import {getIncomings} from \"../service/incomingService\";\r\nimport {GET_INCOMINGS} from \"../constants/incomingConstants\";\r\n\r\nexport const getIncomingAction = (params, start, end) => dispatch => {\r\n    getIncomings(params, start, end).then(incoming => {\r\n        dispatch({\r\n            type: GET_INCOMINGS,\r\n            payload: incoming\r\n        })\r\n    });\r\n};","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getProducts, getProductsByDescription} from \"../service/productService\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {createIncoming, updateIncoming} from \"../service/incomingService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionIncomingByDescription(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getProducts();\r\n    else response = await getProductsByDescription(search);\r\n    let cachedOptions = response.map((d) => ({\r\n        value: d.id,\r\n        label: d.description,\r\n        product: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass IncomingModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputProductChange = this.handleInputProductChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeCountProduct = this.handleChangeCountProduct.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                id: this.props.update.id,\r\n                date: this.props.update.date ? moment.unix(this.props.update.date).toDate() : new Date(),\r\n                countProduct: this.props.update.countProduct,\r\n                selectProduct: this.props.update.product,\r\n                selectProductByDescription: {\r\n                    value: this.props.update.product.id,\r\n                    label: this.props.update.product.description,\r\n                    product: this.props.update.product\r\n                },\r\n                error: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.selectProduct\r\n            && this.state.countProduct>0\r\n            && this.state.date) {\r\n            let incoming = {\r\n                id: this.state.id,\r\n                date: this.state.date,\r\n                product: this.state.selectProduct,\r\n                countProduct: this.state.countProduct\r\n            };\r\n            if (this.props.isCreate) this.createIncoming(incoming);\r\n            else this.updateIncoming(incoming);\r\n        }\r\n    };\r\n\r\n    updateIncoming(entity) {\r\n        updateIncoming(entity).then(resp => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    createIncoming(entity) {\r\n        createIncoming(entity).then(resp => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    handleInputProductChange = (newValue) => {\r\n        this.setState({\r\n            selectProduct: newValue.product,\r\n            selectProductByDescription: {\r\n                value: newValue.value,\r\n                label: newValue.product.description,\r\n                product: newValue.product\r\n            },\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeCountProduct = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                countProduct: event.target.value,\r\n                error: undefined\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Товар:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectProductByDescription}\r\n                                    loadOptions={getOptionIncomingByDescription}\r\n                                    onChange={this.handleInputProductChange}\r\n                                    placeholder={'Выберите товар'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectProduct')} aria-describedby=\"selectProduct-error-text\">\r\n                                    { this.validate('selectProduct') ? <FormHelperText id=\"selectProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                Количество:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.countProduct}\r\n                                           onChange={this.handleChangeCountProduct} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Дата:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <DayPickerInput\r\n                                placeholder={`Дата прихода`}\r\n                                parseDate={parseDate}\r\n                                value={this.state.date}\r\n                                onDayChange={this.handleChangeDate}\r\n                                formatDate={formatDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                }}/>\r\n                            <FormControl className={classes.formControl} error={this.validate('date')} aria-describedby=\"date-error-text\">\r\n                                { this.validate('date') ? <FormHelperText id=\"date-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    { this.state.error ? <div className=\"row error_label\">\r\n                        {this.state.error}\r\n                    </div> : null}\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(IncomingModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport {connect} from 'react-redux';\r\nimport {getIncomingAction} from \"../actions/incomingActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport IncomingModal from \"../modal/IncomingModal\";\r\nimport {selectFilter} from \"react-bootstrap-table2-filter\";\r\nimport {getProducts} from \"../service/productService\";\r\nimport moment from 'moment'\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport {getIncomingReport} from \"../service/reportService\";\r\n\r\nclass Incoming extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            sortField: '',\r\n            sortOrder: '',\r\n            productOptions: {},\r\n            filters: {},\r\n            row: undefined,\r\n            error: undefined,\r\n            start: moment().startOf('month').toDate(),\r\n            end: moment().endOf('month').toDate()\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.accept = this.accept.bind(this);\r\n        this.export = this.export.bind(this);\r\n\r\n        this.props.incomingActions(new PageParams(0, 10, \"date\", \"asc\"),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n\r\n        getProducts().then(products => {\r\n            let productOptions = {};\r\n            products.forEach(product => {\r\n                productOptions[product.id] = product.description;\r\n            });\r\n            this.setState({\r\n                productOptions: productOptions\r\n            })\r\n        });\r\n    }\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {sortField, sortOrder, filters, page, sizePerPage}) => {\r\n        this.setState({\r\n            sortField: sortField,\r\n            sortOrder: sortOrder,\r\n            filters: filters\r\n        });\r\n        this.props.incomingActions(new PageParams(page - 1, sizePerPage, sortField, sortOrder, filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    };\r\n\r\n    accept() {\r\n        this.props.incomingActions(new PageParams(\r\n            this.props.incoming.number,\r\n            this.props.incoming.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeStartDate = (newValue) => {\r\n        this.props.incomingActions(new PageParams(\r\n            this.props.incoming.number,\r\n            this.props.incoming.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            start: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeEndDate = (newValue) => {\r\n        this.props.expenseActions(new PageParams(\r\n            this.props.incoming.number,\r\n            this.props.incoming.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            end: newValue\r\n        });\r\n    };\r\n\r\n    export() {\r\n        getIncomingReport(new PageParams(\r\n            this.props.incoming.number,\r\n            this.props.incoming.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    }\r\n\r\n    render() {\r\n        const colIncoming = [\r\n            {\r\n                dataField: 'date',\r\n                text: 'Дата прихода',\r\n                sort: true,\r\n                formatter: (cellContent) => {\r\n                    return (\r\n                        <div>\r\n                            {moment.unix(cellContent).format(\"DD.MM.YYYY\")}\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                dataField: 'product.description',\r\n                text: '',\r\n                sort: true,\r\n                filter: selectFilter({\r\n                    placeholder: 'Товар',\r\n                    style: {\r\n                        backgroundColor: '#e4e4e1'\r\n                    },\r\n                    options: this.state.productOptions\r\n                })\r\n            },\r\n            {\r\n                dataField: 'countProduct',\r\n                text: 'Количество товара'\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            c\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.start}\r\n                                onDayChange={this.handleChangeStartDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            по\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.end}\r\n                                onDayChange={this.handleChangeEndDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TableRemote data={this.props.incoming ? this.props.incoming.content : []}\r\n                                                   page={this.props.incoming ? this.props.incoming.number + 1 : 1}\r\n                                                   columns={colIncoming}\r\n                                                   entity=\"приход\"\r\n                                                   buttonCreateTitle='Создание нового прихода'\r\n                                                   buttonEditTitle='Изменение прихода'\r\n                                                   sizePerPage={this.props.incoming ? this.props.incoming.size : 0}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   isExport={true}\r\n                                                   export={this.export}\r\n                                                   totalSize={this.props.incoming ? this.props.incoming.totalElements : 0}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n\r\n                {this.state.row ? <IncomingModal accept={this.accept}\r\n                             open={this.state.openUpdate}\r\n                             isCreate={false}\r\n                             update={this.state.row}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <IncomingModal accept={this.accept}\r\n                             open={this.state.openCreate} isCreate={true}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    incoming: state.incomingReducer.incoming\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        incomingActions: bindActionCreators(getIncomingAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Incoming);\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getAdditionalIncomes(params, start, end) {\r\n    let sort = params.sortField ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterMaster= params.filters && params.filters['master.person.name'] ? \"&masterId=\" + params.filters['master.person.name'].filterVal : '';\r\n    return fetch(getUrl() + \"/api/additionalIncomes?page=\" + params.page\r\n        + \"&size=\" + params.size + sort + filterMaster + \"&start=\" + start + \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function updateAdditionalIncome(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createAdditionalIncome(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/additionalIncome\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_ADDITIONAL_INCOME} from \"../constants/additionalIncomeConstants\";\r\nimport {getAdditionalIncomes} from \"../service/additionalIncomeService\";\r\n\r\nexport const getAdditionalIncomesAction = (params, start, end) => dispatch => {\r\n    getAdditionalIncomes(params, start, end).then(incomes => {\r\n        dispatch({\r\n            type: GET_ADDITIONAL_INCOME,\r\n            payload: incomes\r\n        })\r\n    });\r\n};","export const GET_ADDITIONAL_INCOME = \"GET_ADDITIONAL_INCOME\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getMasters, getMastersByFiO} from \"../service/masterService\";\r\nimport PageParams from \"../model/PageParams\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {createAdditionalIncome, updateAdditionalIncome} from \"../service/additionalIncomeService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionMastersByFIO(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getMasters(new PageParams(0, 100));\r\n    else response = await getMastersByFiO(search);\r\n    let cachedOptions = response.content.map((d) => ({\r\n        value: d.id,\r\n        label: d.person.name,\r\n        master: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass AdditionalIncomeModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectMaster: undefined,\r\n            selectMasterFio: undefined,\r\n            sum: 0,\r\n            submit: false,\r\n            error: undefined\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputMasterChange = this.handleInputMasterChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeSum = this.handleChangeSum.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                id: this.props.update.id,\r\n                date: this.props.update.date ? moment.unix(this.props.update.date).toDate() : new Date(),\r\n                sum: this.props.update.sum,\r\n                selectMaster: this.props.update.master,\r\n                selectMasterFio: {\r\n                    value: this.props.update.master.id,\r\n                    label: this.props.update.master.person.name,\r\n                    master: this.props.update.master\r\n                },\r\n                error: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectMaster: undefined,\r\n            selectMasterFio: undefined,\r\n            sum: 0,\r\n            submit: false,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.sum>0\r\n            && this.state.selectMaster\r\n            && this.state.date) {\r\n            let additionalIncome = {\r\n                id: this.state.id,\r\n                date: this.state.date,\r\n                master: this.state.selectMaster,\r\n                sum: this.state.sum\r\n            };\r\n            if (this.props.isCreate) this.createAdditionalIncome(additionalIncome);\r\n            else this.updateAdditionalIncome(additionalIncome);\r\n        }\r\n    };\r\n\r\n    updateAdditionalIncome(entity) {\r\n        updateAdditionalIncome(entity).then(resp => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    createAdditionalIncome(entity) {\r\n        createAdditionalIncome(entity).then(resp => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        this.setState({\r\n            selectMaster: newValue.master,\r\n            selectMasterFio: {\r\n                value: newValue.value,\r\n                label: newValue.master.person.name,\r\n                master: newValue.master\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeSum = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                sum: event.target.value,\r\n                error: undefined\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Мастер:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectMasterFio}\r\n                                    loadOptions={getOptionMastersByFIO}\r\n                                    onChange={this.handleInputMasterChange}\r\n                                    placeholder={'Выберите мастера'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectMaster')} aria-describedby=\"selectMaster-error-text\">\r\n                                    { this.validate('selectMaster') ? <FormHelperText id=\"selectMaster-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                Сумма:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.sum}\r\n                                           onChange={this.handleChangeSum} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Дата:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <DayPickerInput\r\n                                placeholder={`Дата расхода`}\r\n                                parseDate={parseDate}\r\n                                value={this.state.date}\r\n                                onDayChange={this.handleChangeDate}\r\n                                formatDate={formatDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                }}/>\r\n                            <FormControl className={classes.formControl} error={this.validate('date')} aria-describedby=\"date-error-text\">\r\n                                { this.validate('date') ? <FormHelperText id=\"date-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    { this.state.error ? <div className=\"row error_label\">\r\n                        {this.state.error}\r\n                    </div> : null}\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AdditionalIncomeModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport {connect} from 'react-redux';\r\nimport {getAdditionalIncomesAction} from \"../actions/additionalIncomeActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport AdditionalIncomeModal from \"../modal/AdditionalIncomeModal\";\r\nimport {getAllMasters} from \"../service/masterService\";\r\nimport {selectFilter} from \"react-bootstrap-table2-filter\";\r\nimport moment from 'moment'\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport {getAdditionalIncomingReport} from \"../service/reportService\";\r\n\r\nclass AdditionalIncome extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            sortField: '',\r\n            sortOrder: '',\r\n            masterOptions: {},\r\n            filters: {},\r\n            row: undefined,\r\n            error: undefined,\r\n            start: moment().startOf('month').toDate(),\r\n            end: moment().endOf('month').toDate()\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.accept = this.accept.bind(this);\r\n        this.export = this.export.bind(this);\r\n\r\n        this.props.additionalIncomesActions(new PageParams(0, 10, \"date\", \"asc\"),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n\r\n        getAllMasters().then(masters => {\r\n            let masterOptions = {};\r\n            masters.forEach(master => {\r\n                masterOptions[master.id] = master.person.name;\r\n            });\r\n            this.setState({\r\n                masterOptions: masterOptions\r\n            })\r\n        });\r\n    }\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {sortField, sortOrder, filters, page, sizePerPage}) => {\r\n        this.setState({\r\n            sortField: sortField,\r\n            sortOrder: sortOrder,\r\n            filters: filters\r\n        });\r\n        this.props.additionalIncomesActions(new PageParams(page - 1, sizePerPage, sortField, sortOrder, filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    };\r\n\r\n    accept() {\r\n        this.props.additionalIncomesActions(new PageParams(\r\n            this.props.incomes.number,\r\n            this.props.incomes.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeStartDate = (newValue) => {\r\n        this.props.additionalIncomesActions(new PageParams(\r\n            this.props.incomes.number,\r\n            this.props.incomes.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            start: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeEndDate = (newValue) => {\r\n        this.props.additionalIncomesActions(new PageParams(\r\n            this.props.incomes.number,\r\n            this.props.incomes.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            end: newValue\r\n        });\r\n    };\r\n\r\n    export() {\r\n        getAdditionalIncomingReport(new PageParams(\r\n            this.props.incomes.number,\r\n            this.props.incomes.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    }\r\n\r\n    render() {\r\n        const colAdditionalIncome = [\r\n            {\r\n                dataField: 'date',\r\n                text: 'Дата',\r\n                sort: true,\r\n                formatter: (cellContent) => {\r\n                    return (\r\n                        <div>\r\n                            {moment.unix(cellContent).format(\"DD.MM.YYYY\")}\r\n                        </div>\r\n                    )\r\n                }\r\n            },{\r\n                dataField: 'master.person.name',\r\n                text: '',\r\n                sort: true,\r\n                filter: selectFilter({\r\n                    placeholder: 'Мастер',\r\n                    style: {\r\n                        backgroundColor: '#e4e4e1'\r\n                    },\r\n                    options: this.state.masterOptions\r\n                })\r\n            },\r\n            {\r\n                dataField: 'sum',\r\n                text: 'Сумма'\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            c\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.start}\r\n                                onDayChange={this.handleChangeStartDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            по\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.end}\r\n                                onDayChange={this.handleChangeEndDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TableRemote data={this.props.incomes ? this.props.incomes.content : []}\r\n                                                   page={this.props.incomes ? this.props.incomes.number + 1 : 1}\r\n                                                   columns={colAdditionalIncome}\r\n                                                   entity=\"заработок\"\r\n                                                   buttonCreateTitle='Создание новой записи'\r\n                                                   buttonEditTitle='Изменение записи'\r\n                                                   sizePerPage={this.props.incomes ? this.props.incomes.size : 0}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   isExport={true}\r\n                                                   export={this.export}\r\n                                                   totalSize={this.props.incomes ? this.props.incomes.totalElements : 0}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n\r\n                {this.state.row ? <AdditionalIncomeModal accept={this.accept}\r\n                             open={this.state.openUpdate}\r\n                             isCreate={false}\r\n                             update={this.state.row}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <AdditionalIncomeModal accept={this.accept}\r\n                             open={this.state.openCreate} isCreate={true}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    incomes: state.additionalIncomeReducer.incomes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        additionalIncomesActions: bindActionCreators(getAdditionalIncomesAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdditionalIncome);\r\n","import React, {Component} from 'react';\r\nimport {MemoryRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Clients from './components/Clients';\r\nimport Masters from './components/Masters';\r\nimport Timetable from \"./components/TimeTable\";\r\nimport Products from \"./components/Products\";\r\nimport Expenses from \"./components/Expenses\";\r\nimport Balance from \"./components/Balance\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport {PrivateRoute} from './route/PrivateRoute';\r\nimport Calendar from 'react-calendar';\r\nimport SideNav, {NavIcon, NavItem, NavText} from '@trendmicro/react-sidenav';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport {Title} from \"./model/containers\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport logo from './logo.jpg';\r\nimport Procedures from \"./components/Procedures\";\r\nimport Directory from \"./components/Directory\";\r\nimport Sales from \"./components/Sales\";\r\nimport moment from \"moment/moment\";\r\nimport Incoming from \"./components/Incoming\";\r\nimport AdditionalIncome from \"./components/AdditionalIncome\";\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedPath: ''\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Route render={({location, history}) => (\r\n                    <React.Fragment>\r\n                        {localStorage.getItem('user') ? <SideNav defaultExpanded={true}\r\n                            onSelect={(selected) => {\r\n                                if (selected === 'logout') {\r\n                                    localStorage.clear();\r\n                                    window.location.reload();\r\n                                }\r\n                                const to = '/' + selected;\r\n                                if (location.pathname !== to) {\r\n                                    history.push(to);\r\n                                }\r\n                            }}>\r\n                            <SideNav.Nav defaultSelected=\"\">\r\n                                <Title><img src={logo} className='logo-image'/><span className='logo-span'>Укротители волос</span></Title>\r\n                                <Calendar onChange={date => history.push(\"/?date=\" + moment(date).format('YYYY-MM-DD HH:mm:ss'))}/>\r\n                                <NavItem eventKey=\"\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-home\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        График\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"masters\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-user\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Мастера\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"clients\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-users\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Клиенты\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"products\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-product-hunt\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Аксессуары\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"balance\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-balance-scale\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Остатки\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"incoming\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-plus-circle\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Приход\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"expenses\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-minus-circle\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Расход\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"sales\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-shopping-cart\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Продажи\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"additionalIncomes\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-user\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Доп. заработок\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"procedures\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-cut\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Услуги\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"directory\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-book fa-fw\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Справочники\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"dashboard\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-bar-chart-o fa-fw\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Статистика\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"logout\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-sign-out\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Выход\r\n                                    </NavText>\r\n                                </NavItem>\r\n                            </SideNav.Nav>\r\n                        </SideNav> : null}\r\n                        <main>\r\n                            <Route path=\"/login\" component={LoginPage}/>\r\n                            <PrivateRoute exact path='/' component={Timetable}/>\r\n                            <PrivateRoute path=\"/masters\" component={Masters}/>\r\n                            <PrivateRoute path=\"/clients\" component={Clients}/>\r\n                            <PrivateRoute path=\"/products\" component={Products}/>\r\n                            <PrivateRoute path=\"/balance\" component={Balance}/>\r\n                            <PrivateRoute path=\"/expenses\" component={Expenses}/>\r\n                            <PrivateRoute path=\"/incoming\" component={Incoming}/>\r\n                            <PrivateRoute path=\"/sales\" component={Sales}/>\r\n                            <PrivateRoute path=\"/additionalIncomes\" component={AdditionalIncome}/>\r\n                            <PrivateRoute path=\"/procedures\" component={Procedures}/>\r\n                            <PrivateRoute path=\"/dashboard\" component={Dashboard}/>\r\n                            <PrivateRoute path=\"/directory\" component={Directory}/>\r\n                        </main>\r\n                    </React.Fragment>\r\n                )}\r\n                />\r\n            </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport masterReducer from './masterReducer';\r\nimport clientReducer from './clientReducer';\r\nimport timeSlotReducer from './timeSlotReducer';\r\nimport expenseReducer from './expenseReducer';\r\nimport saleReducer from './saleReducer';\r\nimport incomingReducer from './incomingReducer';\r\nimport additionalIncomeReducer from './additionalIncomeReducer';\r\n\r\nexport default combineReducers({\r\n    masterReducer,\r\n    clientReducer,\r\n    timeSlotReducer,\r\n    expenseReducer,\r\n    saleReducer,\r\n    incomingReducer,\r\n    additionalIncomeReducer\r\n});","import {GET_ALL_MASTERS, GET_MASTERS} from \"../constants/masterConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_MASTERS:\n            return { ...state, masters:action.payload };\n        case GET_ALL_MASTERS:\n            return { ...state, allMasters:action.payload };\n        default:\n            return state\n    }\n}","import {GET_CLIENTS} from \"../constants/clientConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_CLIENTS:\n            return { ...state, clients:action.payload };\n        default:\n            return state\n    }\n}","import {GET_TIME_SLOTS} from \"../constants/timeSlotConstants\";\nimport moment from \"moment/moment\";\n\nexport default (state = {timeSlots:[], resources:[]}, action) => {\n    switch (action.type) {\n        case GET_TIME_SLOTS:\n            let evants = action.payload.map(timeSlot => {\n                let event = {\n                    id: timeSlot.id,\n                    resourceId: timeSlot.master.id,\n                    title: \"\\nМастер: \" + timeSlot.master.person.name\n                        + \" \\nКлиент: \" + timeSlot.client.person.name\n                        + \" \\nУслуга: \" + timeSlot.service.description\n                        + \" Цена: \" + timeSlot.price,\n                    timeSlot: timeSlot,\n                    start: moment.unix(timeSlot.startSlot).toDate(),\n                    end: moment.unix(timeSlot.endSlot).toDate()\n                };\n                return event;\n            });\n            let resources = action.payload.map(timeSlot => {\n                let resource = {\n                    id: timeSlot.master.id,\n                    title: timeSlot.master.person.name\n                };\n                return resource;\n            });\n            return {\n                ...state,\n                timeSlots:evants,\n                resources:resources\n            };\n        default:\n            return state\n    }\n}","import {GET_EXPENSES} from \"../constants/expenseConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_EXPENSES:\n            return { ...state, expenses:action.payload };\n        default:\n            return state\n    }\n}","import {GET_SALES} from \"../constants/saleConstants\";\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_SALES:\r\n            return { ...state, sales:action.payload };\r\n        default:\r\n            return state\r\n    }\r\n}","import {GET_INCOMINGS} from \"../constants/incomingConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_INCOMINGS:\n            return { ...state, incoming:action.payload };\n        default:\n            return state\n    }\n}","import {GET_ADDITIONAL_INCOME} from \"../constants/additionalIncomeConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_ADDITIONAL_INCOME:\n            return { ...state, incomes:action.payload };\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport configureStore from './store';\nimport {MemoryRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer/rootReducer';\nexport default function configureStore() {\n    return createStore(\n        rootReducer,\n        applyMiddleware(thunk)\n    );\n}"],"sourceRoot":""}