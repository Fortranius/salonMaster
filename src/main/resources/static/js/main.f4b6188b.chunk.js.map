{"version":3,"sources":["logo.jpg","components/remote/TableRemote.js","data/formatter.js","data/colClient.js","model/PageParams.js","service/clientService.js","actions/clientActions.js","constants/clientConstants.js","modal/DeleteModal.js","modal/ClientModal.js","components/Clients.js","data/colMaster.js","service/masterService.js","actions/masterActions.js","constants/masterConstants.js","service/procedureService.js","modal/MasterModal.js","data/selectOptions.js","components/Masters.js","data/colClientSlot.js","service/timeSlotService.js","components/HistoryClients.js","service/hairService.js","data/colChangeSlot.js","components/HistoryChangeSlot.js","modal/TimeSlotModal.js","actions/timeSlotActions.js","constants/timeSlotConstants.js","components/TimeTable.js","data/colProduct.js","modal/ProductModal.js","service/productService.js","components/Products.js","service/expenseService.js","actions/expenseActions.js","constants/expenseConstants.js","modal/ExpenseModal.js","service/reportService.js","components/Expenses.js","data/colProductBalance.js","service/productBlanceService.js","service/balanceService.js","modal/BalanceModal.js","components/Balance.js","service/dashboardService.js","components/Dashboard.js","service/userService.js","components/LoginPage.js","route/PrivateRoute.js","model/containers.js","data/colProcedure.js","modal/ProcedureModal.js","components/Procedures.js","data/colHair.js","data/colHairCategory.js","components/Directory.js","service/saleService.js","actions/saleActions.js","constants/saleConstants.js","modal/SaleModal.js","components/Sales.js","service/incomingService.js","constants/incomingConstants.js","actions/incomingActions.js","modal/IncomingModal.js","components/Incoming.js","service/additionalIncomeService.js","actions/additionalIncomeActions.js","constants/additionalIncomeConstants.js","modal/AdditionalIncomeModal.js","components/AdditionalIncome.js","App.js","serviceWorker.js","reducer/rootReducer.js","reducer/masterReducer.js","reducer/clientReducer.js","reducer/timeSlotReducer.js","reducer/expenseReducer.js","reducer/saleReducer.js","reducer/incomingReducer.js","reducer/additionalIncomeReducer.js","index.js","store.js"],"names":["module","exports","__webpack_require__","p","TableRemote","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleOnSelect","row","setState","select","state","undefined","bind","assertThisInitialized","removeEntity","updateEntity","createEntity","remove","id","update","create","selectRow","mode","clickToSelect","hideSelectColumn","bgColor","onSelect","react_default","a","createElement","className","onClick","buttonCreateTitle","buttonEditTitle","isExport","export","lib_default","remote","keyField","data","columns","filter","filterFactory","pagination","paginationFactory","page","sizePerPage","totalSize","onTableChange","Component","typeMasterFormatter","cell","typeMasterWorkingDayFormatter","phoneFormatter","person","phone","phoneFormatterToString","substring","NumberFormatCustomPhone","inputRef","onChange","other","objectWithoutProperties","number_format_default","assign","getInputRef","format","mask","onValueChange","values","target","value","thousandSeparator","prefix","colClient","dataField","text","sort","formatter","PageParams","size","sortField","sortOrder","filters","sendRequest","entity","method","options","headers","Headers","content-type","body","JSON","stringify","fetch","getUrl","then","handleErrors","res","response","ok","Error","statusText","getClientsAction","params","dispatch","json","val","getClients","clients","type","payload","DeleteModal","refused","close","accept","index_es","open","closeOnOverlayClick","showCloseIcon","onClose","closeOnEsc","center","ClientModal","clear","submit","name","length","handleChange","event","defineProperty","handleChangePerson","objectSpread","mail","description","field","classes","container","FormControl_default","formControl","error","validate","aria-describedby","InputLabel_default","htmlFor","Input_default","FormHelperText_default","inputComponent","withStyles","theme","display","flexWrap","textField","marginLeft","spacing","unit","marginRight","marginTop","width","formControlServices","Clients","onCloseDeleteModal","openDelete","onCloseUpdateModal","openUpdate","onCloseCreateModal","openCreate","handleTableChange","_ref","clientActions","removeClient","onOpenDeleteModal","updateClient","onOpenUpdateModal","createClient","onOpenCreateModal","_this2","client","number","_this3","clientId","_this4","remote_TableRemote","content","totalElements","modal_DeleteModal","modal_ClientModal","connect","clientReducer","bindActionCreators","colMaster","moment","unix","toDate","toLocaleDateString","getMasters","getAllMasters","getMastersByFiO","getMastersAction","masters","getProcedures","MasterModal","procedures","handleChangeTypeMaster","newValue","selectType","handleChangeWorkingDay","workingDay","selectWorkingDay","handleChangeProcedures","selectedProcedures","map","option","procedure","handleChangeDate","startDateWork","minPrice","maxPrice","workDays","submitProcedure","optionProcedures","Date","startDate","subtract","endDate","add","currentDate","handleDayClick","label","day","selected","selectedIndex","findIndex","selectedDay","DateUtils","isSameDay","splice","push","DayPickerInput_default","placeholder","parseDate","onDayChange","formatDate","dayPickerProps","locale","localeUtils","MomentLocaleUtils","validateState","react_select_esm","isMulti","closeMenuOnSelect","validateProcedures","DayPicker_default","selectedDays","numberOfMonths","month","fromMonth","toMonth","onDayClick","Masters","masterActions","removeMaster","updateMaster","createMaster","master","modal_MasterModal","masterReducer","colClientSlot","toLocaleString","status","getTimeSlotsByDate","start","end","createTimeSlot","HistoryClients","slots","expandRow","renderer","hairCountExtension","concat","hairWeight","hairCountRemoval","expandableRow","getAllHairCategories","getAllHairs","colChangeSlot","HistoryChangeSlot","changes","getOptionMastersByFIO","_callee","search","loadedOptions","cachedOptions","regenerator_default","wrap","_context","prev","next","sent","d","abrupt","hasMore","stop","NumberFormatCustom","getClientName","getClientPhone","renderClient","renderSectionTitle","section","title","getSectionClients","TimeSlotModal","delete","menu","selectClient","selectClientName","selectClientPhone","replace","selectMaster","date","some","hairType","selectedHair","clientDescription","setHours","startHour","setMinutes","startMinutes","endHour","endMinutes","startSlot","endSlot","allPrice","masterWorkPrice","hair","resp","handleInputMasterChange","selectMasterName","handleChangeStartHour","handleChangeStartMinutes","handleChangeEndHour","handleChangeEndMinutes","handleChangeAndRecountSum","_this$setState2","allSum","masterWorkSum","hairsCategory","hairCategory","masterType","forEach","price","onClientsFetchRequestedByName","changeClients","onClientsFetchRequestedByPhone","_ref2","onClientsClearRequested","onChangeClientName","_ref3","onChangeClientPhone","_ref4","onClientSelected","_ref5","suggestion","handleChangeHair","selectProductByDescription","optionHairs","setStatus","hairs","minLength","maxLength","timeSlot","getHours","getMinutes","toString","inputClientNameProps","inputClientPhoneProps","href","setMenu","components_HistoryChangeSlot","components_HistoryClients","dist_default","suggestions","multiSection","onSuggestionsFetchRequested","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","getSectionSuggestions","inputProps","onSuggestionSelected","TextField_default","InputLabelProps","shrink","fullWidth","react_select_async_paginate_lib_default","loadOptions","formControlHairs","InputProps","getTimeSlotsByDateAction","timeSlots","TimeTable","onCloseTimeSlotModal","setTimeSlots","startWeek","endWeek","onSelectEvent","onOpenTimeSlotModal","resources","find","resource","resourceId","handleChangeAddMaster","addMasterSelect","startOf","endOf","openAddMaster","addMasterOptions","saveTimeSlot","onNavigate","openModalMasterToGraph","closeModalMasterToGraph","addMasterToGraph","location","substr","newProps","events","allMastersByWorkDay","mastersWorkDay","breakLine","allMastersByDayOff","mastersWorkOff","regex","indexOf","split","line","index","match","key","view","setSeconds","endFormat","week","dow","localize","BigCalendar","momentLocalizer","react_big_calendar_lib_default","localizer","startAccessor","endAccessor","selectable","defaultView","Views","DAY","min","max","views","step","toolbar","timeslots","onSelectSlot","eventPropGetter","isSelected","newStyle","backgroundColor","borderRadius","border","style","modal_TimeSlotModal","timeSlotReducer","timeSlotActions","colProduct","ProductModal","product","purchasePrice","sellingPrice","formControlDescription","getProducts","getProductsByDescription","Products","createProduct","updateProduct","modal_ProductModal","getExpensesAction","filterMaster","filterVal","filterProduct","getExpenses","expenses","getOptionExpensesByDescription","_callee2","_context2","ExpenseModal","selectProduct","countProduct","expense","isCreate","createExpense","updateExpense","handleInputProductChange","selectMasterFio","handleChangeCountProduct","Expenses","expenseActions","handleChangeStartDate","handleChangeEndDate","masterOptions","productOptions","products","blob","url","window","URL","createObjectURL","document","download","click","catch","err","console","getExpensesReport","colExpense","cellContent","selectFilter","modal_ExpenseModal","expenseReducer","colProductBalance","getAllProductsBalance","createIncoming","BalanceModal","incoming","Balance","modal_BalanceModal","getStatisticMastersReport","reportType","masterId","Dashboard","report","pageSize","set","hour","minute","second","millisecond","handleChangeReport","all","react_table_es","showPagination","userService","login","password","requestOptions","Content-Type","handleResponse","user","authdata","btoa","localStorage","setItem","logout","removeItem","parse","message","Promise","reject","LoginPage","username","submitted","loading","handleSubmit","e","_this$setState","_e$target","preventDefault","_this$state","from","pathname","history","log","_this$state2","onSubmit","disabled","React","PrivateRoute","component","rest","Route","render","getItem","Redirect","to","styled","div","_templateObject","_templateObject2","_templateObject3","Title","_templateObject4","colProcedure","ProcedureModal","service","Procedures","createProcedure","updateProcedure","modal_ProcedureModal","colHair","colHairCategory","typeHairFormatter","Directory","getSalesAction","getSales","sales","SaleModal","sale","cost","createSale","updateSale","Sales","saleActions","colSale","modal_SaleModal","saleReducer","getIncomingAction","getIncomings","getOptionIncomingByDescription","IncomingModal","updateIncoming","Incoming","incomingActions","getIncomingReport","colIncoming","modal_IncomingModal","incomingReducer","getAdditionalIncomesAction","getAdditionalIncomes","incomes","AdditionalIncomeModal","sum","additionalIncome","createAdditionalIncome","updateAdditionalIncome","handleChangeSum","AdditionalIncome","additionalIncomesActions","getAdditionalIncomingReport","colAdditionalIncome","modal_AdditionalIncomeModal","additionalIncomeReducer","App","selectedPath","MemoryRouter","Fragment","react_sidenav_lib_default","defaultExpanded","reload","Nav","defaultSelected","src","logo","entry_default","react_sidenav_lib","eventKey","fontSize","path","PrivateRoute_PrivateRoute","exact","Timetable","Boolean","hostname","combineReducers","arguments","action","allMasters","evants","ReactDOM","es","store","createStore","rootReducer","applyMiddleware","thunk","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4b6188b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.10b1bb98.jpg\";","import React, {Component} from 'react';\r\nimport '../../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport filterFactory from 'react-bootstrap-table2-filter';\r\n\r\nclass TableRemote extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            select: undefined\r\n        };\r\n        this.handleOnSelect = this.handleOnSelect.bind(this);\r\n        this.removeEntity = this.removeEntity.bind(this);\r\n        this.updateEntity = this.updateEntity.bind(this);\r\n        this.createEntity = this.createEntity.bind(this);\r\n    }\r\n\r\n    handleOnSelect = (row) => {\r\n        this.setState({\r\n            select : row\r\n        });\r\n    };\r\n\r\n    removeEntity() {\r\n        this.props.remove(this.state.select.id);\r\n        this.setState({\r\n            select: undefined\r\n        })\r\n    };\r\n\r\n    updateEntity() {\r\n        this.props.update(this.state.select);\r\n        this.setState({\r\n            select: undefined\r\n        })\r\n    };\r\n\r\n    createEntity() {\r\n        this.props.create();\r\n    };\r\n\r\n    render() {\r\n        const selectRow = {\r\n            mode: 'radio',\r\n            clickToSelect: true,\r\n            hideSelectColumn: true,\r\n            bgColor: '#00BFFF',\r\n            onSelect: this.handleOnSelect,\r\n        };\r\n        return (\r\n            <div>\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.createEntity } className=\"btn btn-primary\">\r\n                        {this.props.buttonCreateTitle}\r\n                    </button>\r\n                    { this.state.select ? <button onClick = { this.updateEntity } className=\"btn btn-primary\">\r\n                        {this.props.buttonEditTitle}\r\n                    </button>: null }\r\n                    { this.props.isExport ? <button onClick = { this.props.export } className=\"btn btn-primary\">\r\n                        Выгрузить\r\n                    </button>: null }\r\n                </div>\r\n                <hr/>\r\n                <BootstrapTable\r\n                    remote\r\n                    keyField=\"id\"\r\n                    data={this.props.data}\r\n                    columns={this.props.columns}\r\n                    filter={filterFactory()}\r\n                    selectRow={ selectRow }\r\n                    pagination={paginationFactory({\r\n                        page: this.props.page,\r\n                        sizePerPage: this.props.sizePerPage,\r\n                        totalSize: this.props.totalSize\r\n                    })}\r\n                    onTableChange={this.props.onTableChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TableRemote;\r\n","import moment from 'moment'\r\nimport React from 'react';\r\nimport NumberFormat from \"react-number-format\";\r\n\r\nexport function typeMasterFormatter(cell) {\r\n    switch (cell) {\r\n        case 'GRAND_MASTER':\r\n            return \"Гранд мастер\";\r\n        case 'TOP_LEADER':\r\n            return \"Руководитель Топ мастер\";\r\n        case 'TOP':\r\n            return \"Топ мастер\";\r\n        case 'MIDDLE_PLUS':\r\n            return \"Стандарт плюс мастер\";\r\n        case 'MIDDLE':\r\n            return \"Стандартный мастер\";\r\n        case 'START':\r\n            return \"Начинающий мастер\";\r\n        case 'SUPPORT':\r\n            return \"Помощник\";\r\n        case 'TOP_COLORIST':\r\n            return \"Топ колорист\";\r\n        case 'COLORIST':\r\n            return \"Колорист\";\r\n        case 'CARE_MASTER':\r\n            return \"Мастер по уходовым процедурам\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nexport function typeHairFormatter(cell) {\r\n    switch (cell) {\r\n        case 'HAIR_EXTENSION':\r\n            return \"Наращивание волос\";\r\n        case 'HAIR_REMOVAL':\r\n            return \"Снятие волос\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nexport function typeMasterWorkingDayFormatter(cell) {\r\n    switch (cell) {\r\n        case '$2X2':\r\n            return \"2 на 2\";\r\n        case '$5X2':\r\n            return \"5 на 2\";\r\n        case '$4X2':\r\n            return \"4 на 2\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\nexport function phoneFormatter(cell, row) {\r\n    if (row.person.phone) {\r\n        return (\r\n            <span>\r\n                {phoneFormatterToString(row.person.phone)}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <span>$ { cell } NTD</span>\r\n    );\r\n}\r\n\r\nexport function phoneFormatterToString(phone) {\r\n    return '+' + phone.substring(0,1)+' ('\r\n        + phone.substring(1,4) + ') '\r\n        + phone.substring(4, 7) + '-'\r\n        + phone.substring(7, 9) + '-'\r\n        + phone.substring(9, 11);\r\n}\r\n\r\nexport function dateFormatter(cell) {\r\n    return (\r\n        <span>{moment.unix(cell).toDate().toLocaleDateString()}</span>\r\n    );\r\n}\r\n\r\nexport function NumberFormatCustomPhone(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            format=\"+# (###) ###-####\" mask=\"_\"\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator\r\n            prefix=\"$\"\r\n        />\r\n    );\r\n}\r\n\r\n","import {phoneFormatter} from \"../data/formatter\";\r\n\r\nexport default [\r\n    {\r\n        dataField: 'person.name',\r\n        text: 'Имя',\r\n        sort: true\r\n    },\r\n    {\r\n        dataField: 'person.phone',\r\n        text: 'Телефон',\r\n        sort: true,\r\n        formatter: phoneFormatter\r\n    },\r\n    {\r\n        dataField: 'person.mail',\r\n        text: 'Почта',\r\n        sort: true\r\n    },\r\n    {\r\n        dataField: 'description',\r\n        text: 'Описание',\r\n        sort: true\r\n    }\r\n]","export default class PageParams {\r\n    page;\r\n    size;\r\n    sortField;\r\n    sortOrder;\r\n    filters;\r\n\r\n    constructor(page, size, sortField, sortOrder, filters) {\r\n        this.page = page;\r\n        this.size = size;\r\n        this.sortField = sortField;\r\n        this.sortOrder = sortOrder;\r\n        this.filters = filters;\r\n    }\r\n}","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getClients(params) {\r\n    return fetch(getUrl() + \"/api/clients?page=\" + params.page + \"&size=\" + params.size)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getClientsByFiO(name) {\r\n    return fetch(getUrl() + \"/api/clients/name/\" + name)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getClientsByPhone(filter) {\r\n    return fetch(getUrl() + \"/api/clients/phone/\" + filter)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function removeClient(clientId) {\r\n    return fetch(getUrl() + \"/api/client/\" + clientId, {method: \"DELETE\"})\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nexport function updateClient(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createClient(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/client\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_CLIENTS} from \"../constants/clientConstants\";\nimport {getClients} from \"../service/clientService\";\n\nexport const getClientsAction = (params) => dispatch => {\n    getClients(params).then(clients => {\n        dispatch({\n            type: GET_CLIENTS,\n            payload: clients\n        })\n    });\n};","export const GET_CLIENTS = \"GET_CLIENTS\";","import React, {Component} from 'react';\nimport '../App.css';\nimport Modal from 'react-responsive-modal';\n\nclass DeleteModal extends Component {\n\n    constructor() {\n        super();\n        this.refused = this.refused.bind(this);\n        this.accept = this.accept.bind(this);\n    }\n\n    refused = () => {\n        this.props.close();\n    };\n\n    accept = () => {\n        this.props.accept();\n    };\n\n    render() {\n        return (\n            <div>\n                <Modal open={this.props.open}\n                       closeOnOverlayClick={false}\n                       showCloseIcon={false}\n                       onClose={this.refused}\n                       closeOnEsc={false} center={false}>\n                    <h2>Вы действительно хотите удалить {this.props.entity}?</h2>\n                    <div className=\"button-group\">\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\n                            Да\n                        </button>\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\n                            Нет\n                        </button>\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default DeleteModal;\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport {NumberFormatCustomPhone} from \"../data/formatter\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControlServices: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    },\r\n});\r\n\r\nclass ClientModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            person: {\r\n                phone: '',\r\n                name: '',\r\n                mail: ''\r\n            },\r\n            description: '',\r\n            submit: false\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangePerson = this.handleChangePerson.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                person: {\r\n                    phone: this.props.update.person.phone ? this.props.update.person.phone : '',\r\n                    name: this.props.update.person.name ? this.props.update.person.name : '',\r\n                    mail: this.props.update.person.mail ? this.props.update.person.mail : '',\r\n                },\r\n                description: this.props.update.description\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            person: {\r\n                phone: '',\r\n                name: '',\r\n                mail: ''\r\n            },\r\n            description: '',\r\n            submit: false\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.person.name\r\n            && this.state.person.phone.length === 11) {\r\n            this.props.accept(this.state);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangePerson = name => event => {\r\n        this.setState({\r\n            person: {\r\n                ...this.state.person,\r\n                [name]: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        if (field === 'phone')\r\n            return this.state.person.phone.length !== 10;\r\n        return (!this.state.person || !this.state.person[field]);\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className=\"modal-div\">\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    { this.props.update ? <h2>Изменение клиента</h2>: null }\r\n                    { !this.props.update ? <h2>Создание клиента</h2>: null }\r\n                    <div className={classes.container}>\r\n                        <FormControl className={classes.formControl} error={this.validate('name')} aria-describedby=\"name-error-text\">\r\n                            <InputLabel htmlFor=\"name\">Имя</InputLabel>\r\n                            <Input id=\"name\" value={this.state.person.name} onChange={this.handleChangePerson('name')} />\r\n                            { this.validate('name') ? <FormHelperText id=\"name-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl} error={this.validate('phone')} aria-describedby=\"phone-error-text\">\r\n                            <InputLabel htmlFor=\"phone\">Телефон</InputLabel>\r\n                            <Input id=\"phone\" value={this.state.person.phone} inputComponent={NumberFormatCustomPhone} onChange={this.handleChangePerson('phone')} />\r\n                            { this.validate('phone') ? <FormHelperText id=\"phone-error-text\">Телефон введен неверно</FormHelperText>: null }\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl} error={this.validate('mail')} aria-describedby=\"mail-error-text\">\r\n                            <InputLabel htmlFor=\"mail\">Почта</InputLabel>\r\n                            <Input id=\"mail\" value={this.state.person.mail} onChange={this.handleChangePerson('mail')} />\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl} error={this.validate('description')} aria-describedby=\"description-error-text\">\r\n                            <InputLabel htmlFor=\"type\">Описание</InputLabel>\r\n                            <Input id=\"description\" value={this.state.description} onChange={this.handleChange('description')} />\r\n                            { this.validate('description') ? <FormHelperText id=\"description-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                        </FormControl>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ClientModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport colClient from \"../data/colClient\";\r\nimport PageParams from \"../model/PageParams\";\r\nimport {connect} from \"react-redux\";\r\nimport {bindActionCreators} from \"redux\";\r\nimport {getClientsAction} from \"../actions/clientActions\";\r\nimport {createClient, removeClient, updateClient} from \"../service/clientService\";\r\nimport DeleteModal from \"../modal/DeleteModal\";\r\nimport ClientModal from \"../modal/ClientModal\";\r\n\r\nclass Clients extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openDelete: false,\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.removeClient = this.removeClient.bind(this);\r\n        this.onOpenDeleteModal = this.onOpenDeleteModal.bind(this);\r\n        this.onCloseDeleteModal = this.onCloseDeleteModal.bind(this);\r\n\r\n        this.updateClient = this.updateClient.bind(this);\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.createClient = this.createClient.bind(this);\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.props.clientActions(new PageParams(0, 10));\r\n    }\r\n\r\n    onOpenDeleteModal (row) {\r\n        this.setState({\r\n            openDelete: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n        });\r\n    };\r\n\r\n    onCloseDeleteModal = () => {\r\n        this.setState({\r\n            openDelete: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {page, sizePerPage}) => {\r\n        this.props.clientActions(new PageParams(page - 1, sizePerPage));\r\n    };\r\n\r\n    updateClient(entity) {\r\n        let client = this.state.row;\r\n        client.person = entity.person;\r\n        client.description = entity.description;\r\n        updateClient(client).then(() => {\r\n            this.props.clientActions(new PageParams(this.props.clients.number, this.props.clients.size));\r\n            this.setState({\r\n                openUpdate: false,\r\n                row: undefined\r\n            });\r\n        });\r\n    };\r\n\r\n    createClient(entity) {\r\n        createClient(entity).then(() => {\r\n            this.props.clientActions(new PageParams(this.props.clients.number, this.props.clients.size));\r\n            this.setState({\r\n                openCreate: false\r\n            });\r\n        });\r\n    };\r\n\r\n    removeClient(id) {\r\n        removeClient(id).then(() => {\r\n            this.props.clientActions(new PageParams(this.props.clients.number, this.props.clients.size));\r\n            this.setState({\r\n                openDelete: false,\r\n                row: undefined\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                {this.props.clients ? <TableRemote data={this.props.clients.content}\r\n                                                   page={this.props.clients.number + 1}\r\n                                                   columns={colClient}\r\n                                                   entity=\"клиента\"\r\n                                                   buttonCreateTitle='Создание нового клиента'\r\n                                                   buttonEditTitle='Изменение клиента'\r\n                                                   remove={this.onOpenDeleteModal}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   sizePerPage={this.props.clients.size}\r\n                                                   totalSize={this.props.clients.totalElements}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n                    : null}\r\n                <DeleteModal accept={this.removeClient}\r\n                             open={this.state.openDelete}\r\n                             close={this.onCloseDeleteModal}\r\n                             entity=\"клиента\" />\r\n\r\n                {this.state.row ? <ClientModal accept={this.updateClient}\r\n                                               open={this.state.openUpdate}\r\n                                               update={this.state.row}\r\n                                               close={this.onCloseUpdateModal} />: null}\r\n\r\n                <ClientModal accept={this.createClient}\r\n                             open={this.state.openCreate}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    clients: state.clientReducer.clients\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        clientActions: bindActionCreators(getClientsAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Clients);\r\n","import React from 'react';\r\nimport {dateFormatter, phoneFormatter, typeMasterFormatter, typeMasterWorkingDayFormatter} from \"../data/formatter\";\r\n\r\nfunction type(cell) {\r\n    return (\r\n        <span>{typeMasterFormatter(cell)}</span>\r\n    );\r\n}\r\n\r\nfunction workingDay(cell) {\r\n    return (\r\n        <span>{typeMasterWorkingDayFormatter(cell)}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'person.name',\r\n        text: 'Имя'\r\n    },\r\n    {\r\n        dataField: 'person.phone',\r\n        text: 'Телефон',\r\n        formatter: phoneFormatter\r\n    },\r\n    {\r\n        dataField: 'person.mail',\r\n        text: 'Почта'\r\n    },\r\n    {\r\n        dataField: 'type',\r\n        text: 'Категория',\r\n        formatter: type\r\n    },\r\n    {\r\n        dataField: 'startDateWork',\r\n        text: 'Дата начала работы',\r\n        formatter: dateFormatter\r\n    },\r\n    {\r\n        dataField: 'workingDay',\r\n        text: 'График',\r\n        formatter: workingDay\r\n    }\r\n]","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getMasters(params) {\r\n    return fetch(getUrl() + \"/api/masters?page=\" + params.page + \"&size=\" + params.size + \"&sort=id&id.dir=desc\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getAllMasters() {\r\n    return fetch(getUrl() + \"/api/allMasters\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function allMastersByWorkDay(date) {\r\n    return fetch(getUrl() + \"/api/allMastersByWorkDay?date=\" + date)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function allMastersByDayOff(date) {\r\n    return fetch(getUrl() + \"/api/allMastersByDayOff?date=\" + date)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getMastersByFiO(name) {\r\n    return fetch(getUrl() + \"/api/masters/name/\" + name)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function removeMaster(master) {\r\n    return fetch(getUrl() + \"/api/master/\" + master, {method: \"DELETE\"})\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nexport function updateMaster(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createMaster(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/master\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_ALL_MASTERS, GET_MASTERS} from \"../constants/masterConstants\";\nimport {getAllMasters, getMasters} from \"../service/masterService\";\n\nexport const getMastersAction = (params) => dispatch => {\n    getMasters(params).then(masters => {\n        dispatch({\n            type: GET_MASTERS,\n            payload: masters\n        })\n    });\n};\n\nexport const getAllMastersAction = () => dispatch => {\n    getAllMasters().then(masters => {\n        dispatch({\n            type: GET_ALL_MASTERS,\n            payload: masters\n        })\n    });\n};","export const GET_MASTERS = \"GET_MASTERS\";\r\nexport const GET_ALL_MASTERS = \"GET_ALL_MASTERS\";","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getProcedures() {\r\n    return fetch(getUrl() + \"/api/procedures\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function createProcedure(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nexport function updateProcedure(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/procedure\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from 'react-select';\r\nimport {getProcedures} from \"../service/procedureService\";\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, {formatDate, parseDate} from 'react-day-picker/moment';\r\nimport {NumberFormatCustomPhone, typeMasterFormatter, typeMasterWorkingDayFormatter} from \"../data/formatter\";\r\nimport moment from \"moment/moment\";\r\nimport {masterTypeOptions, masterWorkOptions} from \"../data/selectOptions\";\r\nimport DayPicker, {DateUtils} from 'react-day-picker';\r\nimport 'moment/locale/ru';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControlServices: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    },\r\n});\r\n\r\nclass MasterModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            person: {\r\n                phone: '',\r\n                name:'',\r\n                mail:''\r\n            },\r\n            procedure: {\r\n                description: '',\r\n                minPrice: 0,\r\n                maxPrice: 0\r\n            },\r\n            workDays: [],\r\n            type: '',\r\n            selectType: undefined,\r\n            procedures: [],\r\n            submit: false,\r\n            submitProcedure: false,\r\n            selectedProcedures: [],\r\n            optionProcedures: [],\r\n            startDateWork: new Date(),\r\n            workingDay: '',\r\n            selectWorkingDay: undefined,\r\n            startDate: moment().subtract(6, 'months').toDate(),\r\n            endDate: moment().add(6, 'months').toDate(),\r\n            currentDate: moment().subtract(1, 'months').toDate()\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangePerson = this.handleChangePerson.bind(this);\r\n        this.handleDayClick = this.handleDayClick.bind(this);\r\n\r\n        getProcedures().then(data => {\r\n            let procedures = data.map(procedure => {\r\n                return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n            });\r\n            this.setState({\r\n                optionProcedures: procedures\r\n            });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            let selectedProcedures = [];\r\n            if (this.props.update.procedures)\r\n                selectedProcedures = this.props.update.procedures.map(procedure => {\r\n                    return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n                });\r\n            let selectType, selectWorkingDay = undefined;\r\n            if (this.props.update.type) {\r\n                selectType = {\r\n                    value: this.props.update.type,\r\n                    label: typeMasterFormatter(this.props.update.type)\r\n                };\r\n\r\n            }\r\n            if (this.props.update.workingDay) {\r\n                selectWorkingDay = {\r\n                    value: this.props.update.workingDay,\r\n                    label: typeMasterWorkingDayFormatter(this.props.update.workingDay)\r\n                };\r\n            }\r\n            this.setState({\r\n                person: {\r\n                    phone: this.props.update.person.phone ? this.props.update.person.phone : '',\r\n                    name: this.props.update.person.name ? this.props.update.person.name : '',\r\n                    mail: this.props.update.person.mail ? this.props.update.person.mail : '',\r\n                },\r\n                workDays: this.props.update.workDays ? this.props.update.workDays\r\n                    .map(value => moment.unix(value).toDate()) : [],\r\n                type: this.props.update.type ? this.props.update.type : '',\r\n                selectType: selectType,\r\n                procedures: this.props.update.procedures,\r\n                selectedProcedures: selectedProcedures,\r\n                selectWorkingDay: selectWorkingDay,\r\n                workingDay: this.props.update.workingDay,\r\n                startDateWork: this.props.update.startDateWork ? moment.unix(this.props.update.startDateWork).toDate() : new Date(),\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            person: {\r\n                phone: '',\r\n                name:'',\r\n                mail:''\r\n            },\r\n            type: '',\r\n            procedures: [],\r\n            procedure: {\r\n                description: '',\r\n                minPrice: 0,\r\n                maxPrice: 0\r\n            },\r\n            workDays: [],\r\n            selectType: undefined,\r\n            submit: false,\r\n            submitProcedure: false,\r\n            selectedProcedures: [],\r\n            startDateWork: new Date(),\r\n            workingDay: '',\r\n            selectWorkingDay: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.person.name\r\n            && this.state.procedures\r\n            && this.state.procedures.length>0) {\r\n            this.props.accept(this.state);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangePerson = name => event => {\r\n        this.setState({\r\n            person: {\r\n                ...this.state.person,\r\n                [name]: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state.person || !this.state.person[field]);\r\n    };\r\n\r\n    validateProcedures() {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state.procedures || this.state.procedures.length === 0);\r\n    }\r\n\r\n    validateState(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    };\r\n\r\n    handleChangeTypeMaster = (newValue) => {\r\n        this.setState({\r\n            type: newValue.value,\r\n            selectType: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeWorkingDay = (newValue) => {\r\n        this.setState({\r\n            workingDay: newValue.value,\r\n            selectWorkingDay: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeProcedures = (selectedProcedures) => {\r\n        let procedures = selectedProcedures.map(option => {\r\n            return option.procedure;\r\n        });\r\n        this.setState({\r\n            selectedProcedures: selectedProcedures,\r\n            procedures: procedures\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            startDateWork: newValue\r\n        });\r\n    };\r\n\r\n    handleDayClick(day, { selected }) {\r\n        const { workDays } = this.state;\r\n        if (selected) {\r\n            const selectedIndex = workDays.findIndex(selectedDay =>\r\n                DateUtils.isSameDay(selectedDay, day)\r\n            );\r\n            workDays.splice(selectedIndex, 1);\r\n        } else {\r\n            workDays.push(day);\r\n        }\r\n        this.setState({ workDays });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div className=\"modal-div\">\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    { this.props.update ? <h2>Редактирование мастера</h2>: null }\r\n                    { !this.props.update ? <h2>Создание мастера</h2>: null }\r\n                    <div className={classes.container}>\r\n                        <FormControl className={classes.formControl} error={this.validate('name')} aria-describedby=\"name-error-text\">\r\n                            <InputLabel htmlFor=\"name\">Имя</InputLabel>\r\n                            <Input id=\"name\" value={this.state.person.name} onChange={this.handleChangePerson('name')} />\r\n                            { this.validate('name') ? <FormHelperText id=\"name-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl} error={this.validate('phone')} aria-describedby=\"phone-error-text\">\r\n                            <InputLabel htmlFor=\"phone\">Телефон</InputLabel>\r\n                            <Input id=\"phone\" value={this.state.person.phone} inputComponent={NumberFormatCustomPhone} onChange={this.handleChangePerson('phone')} />\r\n                            { this.validate('phone') ? <FormHelperText id=\"phone-error-text\">Телефон введен неверно</FormHelperText>: null }\r\n                        </FormControl>\r\n                        <FormControl className={classes.formControl} error={this.validate('mail')} aria-describedby=\"mail-error-text\">\r\n                            <InputLabel htmlFor=\"mail\">Почта</InputLabel>\r\n                            <Input id=\"mail\" value={this.state.person.mail} onChange={this.handleChangePerson('mail')} />\r\n                        </FormControl>\r\n                    </div>\r\n                    <hr/>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Дата начала работы:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                value={this.state.startDateWork}\r\n                                onDayChange={this.handleChangeDate}\r\n                                formatDate={formatDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                }}/>\r\n                            <FormControl className={classes.formControl} error={this.validateState('startDateWork')} aria-describedby=\"startDateWork-error-text\">\r\n                                { this.validateState('startDateWork') ? <FormHelperText id=\"startDateWork-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className=\"col-sm-2\">\r\n                            График работы:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Select\r\n                                value={this.state.selectWorkingDay}\r\n                                options={masterWorkOptions()}\r\n                                placeholder={'Выберите график'}\r\n                                onChange={this.handleChangeWorkingDay}\r\n                            />\r\n                            <FormControl className={classes.formControl} error={this.validateState('workingDay')} aria-describedby=\"workingDay-error-text\">\r\n                                { this.validateState('workingDay') ? <FormHelperText id=\"workingDay-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Категория мастера:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Select\r\n                                value={this.state.selectType}\r\n                                options={masterTypeOptions()}\r\n                                placeholder={'Выберите категорию'}\r\n                                onChange={this.handleChangeTypeMaster}\r\n                            />\r\n                            <FormControl className={classes.formControl} error={this.validateState('type')} aria-describedby=\"type-error-text\">\r\n                                { this.validateState('type') ? <FormHelperText id=\"type-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                        <div className=\"col-sm-2\">\r\n                            Услуги мастера:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <Select id=\"procedures\"\r\n                                    isMulti\r\n                                    closeMenuOnSelect={false}\r\n                                    value={this.state.selectedProcedures}\r\n                                    onChange={this.handleChangeProcedures}\r\n                                    placeholder=\"Выберите услуги\"\r\n                                    options={this.state.optionProcedures}\r\n                            />\r\n                            <FormControl className={classes.formControl} error={this.validateProcedures()} aria-describedby=\"procedures-error-text\">\r\n                                { this.validateProcedures() ? <FormHelperText id=\"procedures-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <hr/>\r\n                    <h3>\r\n                        Рабочие и выходные дни\r\n                    </h3>\r\n                    <DayPicker selectedDays={this.state.workDays}\r\n                               numberOfMonths={8}\r\n                               month={this.state.currentDate}\r\n                               fromMonth={this.state.startDate}\r\n                               toMonth={this.state.endDate}\r\n                               localeUtils={MomentLocaleUtils} locale='ru'\r\n                               onDayClick={this.handleDayClick}/>\r\n                    <hr/>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(MasterModal);\r\n","export function reportOptions() {\r\n    return [\r\n        { value: 0, label: 'Отчет по мастерам' },\r\n        { value: 1, label: 'Отчет по прибыли' }\r\n    ];\r\n}\r\n\r\nexport function hourOptions() {\r\n    return [\r\n        { value: 10, label: '10' },\r\n        { value: 11, label: '11' },\r\n        { value: 12, label: '12' },\r\n        { value: 13, label: '13' },\r\n        { value: 14, label: '14' },\r\n        { value: 15, label: '15' },\r\n        { value: 16, label: '16' },\r\n        { value: 17, label: '17' },\r\n        { value: 18, label: '18' },\r\n        { value: 19, label: '19' },\r\n        { value: 20, label: '20' },\r\n        { value: 21, label: '21' },\r\n        { value: 22, label: '22' }\r\n    ];\r\n}\r\n\r\nexport function minuteOptions() {\r\n    return [\r\n        { value: 0, label: '00' },\r\n        { value: 5, label: '05' },\r\n        { value: 10, label: '10' },\r\n        { value: 15, label: '15' },\r\n        { value: 20, label: '20' },\r\n        { value: 25, label: '25' },\r\n        { value: 30, label: '30' },\r\n        { value: 35, label: '35' },\r\n        { value: 40, label: '40' },\r\n        { value: 45, label: '45' },\r\n        { value: 50, label: '50' },\r\n        { value: 55, label: '55' }\r\n    ];\r\n}\r\n\r\nexport function masterTypeOptions() {\r\n    return [\r\n        { value: 'GRAND_MASTER', label: 'Гранд мастер' },\r\n        { value: 'TOP_LEADER', label: 'Руководитель Топ мастер' },\r\n        { value: 'TOP', label: 'Топ мастер' },\r\n        { value: 'MIDDLE_PLUS', label: 'Стандарт плюс мастер' },\r\n        { value: 'MIDDLE', label: 'Стандартный мастер' },\r\n        { value: 'START', label: 'Начинающий мастер' },\r\n        { value: 'SUPPORT', label: 'Помощник' },\r\n        { value: 'TOP_COLORIST', label: 'Топ колорист' },\r\n        { value: 'COLORIST', label: 'Колорист' },\r\n        { value: 'CARE_MASTER', label: 'Мастер по уходовым процедурам' }\r\n    ];\r\n}\r\n\r\nexport function masterWorkOptions() {\r\n    return [\r\n        { value: '$2X2', label: '2 на 2' },\r\n        { value: '$4X2', label: '4 на 2' },\r\n        { value: '$5X2', label: '5 на 2' }\r\n    ];\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport colMaster from \"../data/colMaster\";\r\nimport {connect} from 'react-redux';\r\nimport {getMastersAction} from \"../actions/masterActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport {createMaster, removeMaster, updateMaster} from \"../service/masterService\";\r\nimport DeleteModal from \"../modal/DeleteModal\";\r\nimport MasterModal from \"../modal/MasterModal\";\r\n\r\nclass Masters extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openDelete: false,\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.removeMaster = this.removeMaster.bind(this);\r\n        this.onOpenDeleteModal = this.onOpenDeleteModal.bind(this);\r\n        this.onCloseDeleteModal = this.onCloseDeleteModal.bind(this);\r\n\r\n        this.updateMaster = this.updateMaster.bind(this);\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.createMaster = this.createMaster.bind(this);\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.props.masterActions(new PageParams(0, 50));\r\n    }\r\n\r\n    onOpenDeleteModal (row) {\r\n        this.setState({\r\n            openDelete: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n        });\r\n    };\r\n\r\n    onCloseDeleteModal = () => {\r\n        this.setState({\r\n            openDelete: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {page, sizePerPage}) => {\r\n        this.props.masterActions(new PageParams(page - 1, sizePerPage));\r\n    };\r\n\r\n    removeMaster() {\r\n        removeMaster(this.state.row.id).then(() => {\r\n            this.props.masterActions(new PageParams(this.props.masters.number, this.props.masters.size));\r\n            this.setState({\r\n                openDelete: false,\r\n                row: undefined\r\n            });\r\n        });\r\n    };\r\n\r\n    updateMaster(entity) {\r\n        let master = this.state.row;\r\n        master.person = entity.person;\r\n        master.procedures = entity.procedures;\r\n        master.type = entity.type;\r\n        master.workingDay = entity.workingDay;\r\n        master.startDateWork = entity.startDateWork;\r\n        master.workDays = entity.workDays;\r\n        updateMaster(master).then(() => {\r\n            this.props.masterActions(new PageParams(this.props.masters.number, this.props.masters.size));\r\n            this.setState({\r\n                openUpdate: false,\r\n                row: undefined\r\n            });\r\n        });\r\n    };\r\n\r\n    createMaster(entity) {\r\n        createMaster(entity).then(() => {\r\n            this.props.masterActions(new PageParams(this.props.masters.number, this.props.masters.size));\r\n            this.setState({\r\n                openCreate: false\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                {this.props.masters ? <TableRemote data={this.props.masters.content}\r\n                                                   page={this.props.masters.number + 1}\r\n                                                   columns={colMaster}\r\n                                                   entity=\"мастера\"\r\n                                                   buttonCreateTitle='Создание нового мастера'\r\n                                                   buttonEditTitle='Изменение мастера'\r\n                                                   sizePerPage={this.props.masters.size}\r\n                                                   remove={this.onOpenDeleteModal}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   totalSize={this.props.masters.totalElements}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n                    : null}\r\n                <DeleteModal accept={this.removeMaster}\r\n                             open={this.state.openDelete}\r\n                             close={this.onCloseDeleteModal}\r\n                             entity=\"мастера\" />\r\n\r\n                {this.state.row ? <MasterModal accept={this.updateMaster}\r\n                             open={this.state.openUpdate}\r\n                             update={this.state.row}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <MasterModal accept={this.createMaster}\r\n                             open={this.state.openCreate}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    masters: state.masterReducer.masters\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        masterActions: bindActionCreators(getMastersAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Masters);\r\n","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nfunction priceFormatter(cell) {\r\n    return (\r\n        <span>{cell.toLocaleString()} руб.</span>\r\n    );\r\n}\r\n\r\nfunction dateFormatter(cell) {\r\n    return (\r\n        <span>{moment.unix(cell).toDate().toLocaleDateString()}</span>\r\n    );\r\n}\r\n\r\nfunction statusFormatter(cell) {\r\n    let status ='';\r\n    if (cell === 'NEW') status = 'Ожидание клиента';\r\n    if (cell === 'DONE') status = 'Клиент пришел';\r\n    if (cell === 'CANCELED') status = 'Клиент не пришел';\r\n    if (cell === 'READY') status = 'Клиент подтвердил';\r\n    return (\r\n        <span>{status}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'master.person.name',\r\n        text: 'Мастер'\r\n    },\r\n    {\r\n        dataField: 'allPrice',\r\n        text: 'Сумма',\r\n        formatter: priceFormatter\r\n    },\r\n    {\r\n        dataField: 'startSlot',\r\n        text: 'Дата',\r\n        formatter: dateFormatter\r\n    },\r\n    {\r\n        dataField: 'status',\r\n        text: 'Статус заказа',\r\n        formatter: statusFormatter\r\n    }\r\n]","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getTimeSlotsByDate(start, end) {\r\n    return fetch(getUrl() + \"/api/timeSlotsByDate?start=\" + start +\r\n        \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getTimeSlotsByClientId(clientId) {\r\n    return fetch(getUrl() + \"/api/timeSlotsByClientId?clientId=\" + clientId)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function createTimeSlot(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nexport function deleteTimeSlot(id) {\r\n    return fetch(getUrl() + \"/api/timeSlot/\" + id, {\r\n        method: 'delete'\r\n    }).then(res => res);\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/timeSlot\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colClientSlot from \"../data/colClientSlot\";\r\nimport {getTimeSlotsByClientId} from \"../service/timeSlotService\";\r\n\r\nclass HistoryClients extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.client) {\r\n            getTimeSlotsByClientId(this.props.client.id).then(slots => {\r\n                this.setState({\r\n                    data: slots\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const expandRow = {\r\n            renderer: row => (\r\n                <div>\r\n                    {row.hairCountExtension>0 ? <p>{ `Количество наращенных прядей: ${row.hairCountExtension}` }</p> : null}\r\n                    {row.hairWeight>0 ? <p>{ `Вес наращенных волос: ${row.hairWeight}` }</p> : null}\r\n                    {row.hairCountRemoval>0 ? <p>{ `Количество сгятых прядей: ${row.hairCountRemoval}` }</p> : null}\r\n                </div>\r\n            )\r\n        };\r\n        return (\r\n            <div className=\"main-div\">\r\n                <BootstrapTable\r\n                    keyField=\"id\"\r\n                    expandableRow={true}\r\n                    expandRow={ expandRow }\r\n                    data={this.state.data}\r\n                    columns={colClientSlot}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryClients;\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getAllHairCategories() {\r\n    return fetch(getUrl() + \"/api/getAllHairCategories\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getAllHairs() {\r\n    return fetch(getUrl() + \"/api/getAllHairs\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nfunction dateFormatter(cell) {\r\n    return (\r\n        <span>{moment.unix(cell).toDate().toLocaleDateString()}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'date',\r\n        text: 'Дата',\r\n        formatter: dateFormatter\r\n    },\r\n    {\r\n        dataField: 'change',\r\n        text: 'Изменение'\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colChangeSlot from \"../data/colChangeSlot\";\r\n\r\nclass HistoryChangeSlot extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <BootstrapTable\r\n                    keyField=\"date\"\r\n                    data={this.props.changes}\r\n                    columns={colChangeSlot}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HistoryChangeSlot;\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport '../react-day-picker.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getClientsByFiO, getClientsByPhone} from \"../service/clientService\";\r\nimport {getMasters, getMastersByFiO} from \"../service/masterService\";\r\nimport PageParams from \"../model/PageParams\";\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from 'react-select';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport NumberFormat from 'react-number-format';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport MomentLocaleUtils, {parseDate} from 'react-day-picker/moment';\r\nimport 'moment/locale/ru';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport HistoryClients from \"../components/HistoryClients\";\r\nimport {getAllHairCategories, getAllHairs} from \"../service/hairService\";\r\nimport HistoryChangeSlot from \"../components/HistoryChangeSlot\";\r\nimport {hourOptions, minuteOptions} from \"../data/selectOptions\";\r\nimport {phoneFormatterToString, typeMasterFormatter} from \"../data/formatter\";\r\nimport {createTimeSlot, deleteTimeSlot} from \"../service/timeSlotService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop: 16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        display: 'flex'\r\n    },\r\n    formControlHairs: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 250\r\n    }\r\n});\r\n\r\nasync function getOptionMastersByFIO(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getMasters(new PageParams(0, 100));\r\n    else response = await getMastersByFiO(search);\r\n    let cachedOptions = response.content.map((d) => ({\r\n        value: d.id,\r\n        label: d.person.name + \" - \" + typeMasterFormatter(d.type),\r\n        master: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator={' '}\r\n        />\r\n    );\r\n}\r\n\r\nconst getClientName = client => client.person.name;\r\nconst getClientPhone = client => client.person.phone;\r\n\r\nconst renderClient = client => {\r\n    return (\r\n        <span>{client.person.name}</span>\r\n    );\r\n};\r\n\r\nconst renderSectionTitle = section => {\r\n    return (\r\n        <strong>{section.title}</strong>\r\n    );\r\n};\r\n\r\nconst getSectionClients = section => {\r\n    return section.clients;\r\n};\r\n\r\nclass TimeSlotModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectMaster: undefined,\r\n            selectMasterName: undefined,\r\n            selectClient: undefined,\r\n            selectClientName: '',\r\n            selectClientPhone: '',\r\n            clientDescription: '',\r\n            startHour: { value: 10, label: '10' },\r\n            startMinutes: { value: 0, label: '00' },\r\n            endHour: { value: 10, label: '10' },\r\n            endMinutes: { value: 0, label: '00' },\r\n            date: new Date(),\r\n            id: undefined,\r\n            allPrice: 0,\r\n            masterWorkPrice: 0,\r\n            status: 'NEW',\r\n            value: '',\r\n            clients: [],\r\n            menu:'MAIN',\r\n            selectProductByDescription: undefined,\r\n            optionHairs: [],\r\n            selectedHair: undefined,\r\n            hairWeight: 0,\r\n            hairCountExtension: 0,\r\n            hairCountRemoval: 0,\r\n            hairsCategory: [],\r\n            procedures: [],\r\n            submitProcedure: false,\r\n            selectedProcedures: [],\r\n            optionProcedures: []\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n        this.handleInputMasterChange = this.handleInputMasterChange.bind(this);\r\n        this.handleChangeStartHour = this.handleChangeStartHour.bind(this);\r\n        this.handleChangeStartMinutes = this.handleChangeStartMinutes.bind(this);\r\n        this.handleChangeEndHour = this.handleChangeEndHour.bind(this);\r\n        this.handleChangeEndMinutes = this.handleChangeEndMinutes.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeHair = this.handleChangeHair.bind(this);\r\n        this.setStatus = this.setStatus.bind(this);\r\n        this.handleChangeProcedures = this.handleChangeProcedures.bind(this);\r\n\r\n        getAllHairs().then(data => {\r\n            let hairs = data.map(hair => {\r\n                return { value: hair.id, label: \"Волосы \" + hair.minLength + \" - \" + (hair.maxLength !== 0 ? hair.maxLength : \"более\"), hair: hair };\r\n            });\r\n            this.setState({\r\n                optionHairs: hairs\r\n            });\r\n        });\r\n\r\n        getAllHairCategories().then(data => {\r\n            this.setState({\r\n                hairsCategory: data\r\n            })\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let selectMasterName,\r\n            selectMaster,\r\n            selectClient,\r\n            selectClientName = '',\r\n            selectClientPhone = '',\r\n            clientDescription = '',\r\n            status,\r\n            selectedHair,\r\n            procedures = [],\r\n            selectedProcedures = [];\r\n        if (this.props.event.timeSlot) {\r\n            selectedProcedures = this.props.event.timeSlot.procedures.map(procedure => {\r\n                return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n            });\r\n            procedures = this.props.event.timeSlot.procedures;\r\n            selectMasterName = {\r\n                value: this.props.event.timeSlot.master.id,\r\n                label: this.props.event.timeSlot.master.person.name + \" - \" + typeMasterFormatter(this.props.event.timeSlot.master.type),\r\n                master: this.props.event.timeSlot.master\r\n            };\r\n            if (this.props.event.timeSlot.hair)\r\n                selectedHair = {\r\n                    value: this.props.event.timeSlot.hair.id,\r\n                    label: \"Волосы \" + this.props.event.timeSlot.hair.minLength + \" - \" +\r\n                        (this.props.event.timeSlot.hair.maxLength !== 0 ? this.props.event.timeSlot.hair.maxLength : \"более\"),\r\n                    hair: this.props.event.timeSlot.hair\r\n                };\r\n            selectMaster = this.props.event.timeSlot.master ? this.props.event.timeSlot.master : undefined;\r\n            status = this.props.event.timeSlot.status ? this.props.event.timeSlot.status : 'NEW';\r\n            selectClient = this.props.event.timeSlot.client;\r\n            selectClientName = this.props.event.timeSlot.client.person.name;\r\n            clientDescription = this.props.event.timeSlot.client.description ? this.props.event.timeSlot.client.description : '';\r\n\r\n            selectClientPhone = phoneFormatterToString(this.props.event.timeSlot.client.person.phone);\r\n        } else if (this.props.selectMaster) {\r\n            selectMasterName = {\r\n                value: this.props.selectMaster.master.id,\r\n                label: this.props.selectMaster.master.person.name + \" - \" + typeMasterFormatter(this.props.selectMaster.master.type),\r\n                master: this.props.selectMaster.master\r\n            };\r\n            selectMaster = this.props.selectMaster.master;\r\n        }\r\n        let optionProcedures = selectMaster.procedures.map(procedure => {\r\n            return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n        });\r\n        this.setState({\r\n            date: this.props.event.start,\r\n            id: this.props.event.id,\r\n            allPrice: this.props.event.timeSlot ? this.props.event.timeSlot.allPrice : 0,\r\n            masterWorkPrice: this.props.event.timeSlot ? this.props.event.timeSlot.masterWorkPrice : 0,\r\n            startHour: {\r\n                value: this.props.event.start.getHours(),\r\n                label: this.props.event.start.getHours()\r\n            },\r\n            startMinutes: {\r\n                value: this.props.event.start.getMinutes(),\r\n                label: this.props.event.start.getMinutes().toString().length < 2 ? '0' +\r\n                    this.props.event.start.getMinutes().toString():this.props.event.start.getMinutes()\r\n            },\r\n            endHour: {\r\n                value: this.props.event.end.getHours(),\r\n                label: this.props.event.end.getHours()\r\n            },\r\n            endMinutes: {\r\n                value: this.props.event.end.getMinutes(),\r\n                label: this.props.event.end.getMinutes().toString().length < 2 ? '0' +\r\n                    this.props.event.end.getMinutes().toString():this.props.event.end.getMinutes()\r\n            },\r\n            selectMasterName: selectMasterName,\r\n            selectMaster: selectMaster,\r\n            status: status ? status : 'NEW',\r\n            clientDescription: clientDescription,\r\n            selectClient: selectClient,\r\n            selectClientName: selectClientName,\r\n            selectClientPhone: selectClientPhone,\r\n            menu:'MAIN',\r\n            hairWeight: this.props.event.timeSlot ? this.props.event.timeSlot.hairWeight : 0,\r\n            hairCountExtension: this.props.event.timeSlot ? this.props.event.timeSlot.hairCountExtension : 0,\r\n            hairCountRemoval: this.props.event.timeSlot ? this.props.event.timeSlot.hairCountRemoval : 0,\r\n            selectedHair: selectedHair,\r\n            selectedProcedures: selectedProcedures,\r\n            optionProcedures: optionProcedures,\r\n            procedures: procedures\r\n        });\r\n    }\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    delete = () => {\r\n        deleteTimeSlot(this.state.id).then(() => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true,\r\n            menu: 'MAIN'\r\n        });\r\n\r\n        let client = this.state.selectClient;\r\n\r\n        if (this.state.selectClientName && this.state.selectClientPhone) {\r\n            if (!client)\r\n                client = {\r\n                    person: {\r\n                        name: this.state.selectClientName,\r\n                        phone: this.state.selectClientPhone.replace(/[.*+ ?^${}()|[\\]\\\\]/g, \"\"),\r\n                    }\r\n                }\r\n        }\r\n\r\n        if (!client || !this.state.selectMaster || !this.state.date || !this.state.procedures || this.state.procedures.length === 0)\r\n            return false;\r\n\r\n        if (this.state.procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION' || procedure.hairType === 'HAIR_CORRECTION') && !this.state.selectedHair)\r\n            return false;\r\n\r\n        client.description = this.state.clientDescription;\r\n\r\n        let startDate = new Date(this.state.date);\r\n        startDate.setHours(this.state.startHour.value);\r\n        startDate.setMinutes(this.state.startMinutes.value);\r\n        let endDate = new Date(this.state.date);\r\n        endDate.setHours(this.state.endHour.value);\r\n        endDate.setMinutes(this.state.endMinutes.value);\r\n\r\n        let timeSlot = {\r\n            id: this.state.id,\r\n            client: client,\r\n            master: this.state.selectMaster,\r\n            startSlot: startDate,\r\n            endSlot: endDate,\r\n            allPrice: this.state.allPrice,\r\n            masterWorkPrice: this.state.masterWorkPrice,\r\n            status: this.state.status,\r\n            hairWeight: this.state.hairWeight,\r\n            hairCountExtension: this.state.hairCountExtension,\r\n            hairCountRemoval: this.state.hairCountRemoval,\r\n            procedures: this.state.procedures,\r\n            hair: this.state.selectedHair ? this.state.selectedHair.hair : undefined\r\n        };\r\n        createTimeSlot(timeSlot).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    clear() {\r\n        this.setState({\r\n            selectClient: undefined,\r\n            selectMaster: undefined,\r\n            selectMasterName: undefined,\r\n            selectClientName: '',\r\n            selectClientPhone: '',\r\n            clientDescription: '',\r\n            submit: false,\r\n            startHour: { value: 10, label: '10' },\r\n            startMinutes: { value: 0, label: '00' },\r\n            endHour: { value: 10, label: '10' },\r\n            endMinutes: { value: 0, label: '00' },\r\n            date: new Date(),\r\n            allPrice: 0,\r\n            masterWorkPrice: 0,\r\n            status: 'NEW',\r\n            clients:[],\r\n            menu:'MAIN',\r\n            selectProductByDescription: undefined,\r\n            optionHairs: [],\r\n            selectedHair: undefined,\r\n            hairWeight: 0,\r\n            hairCountExtension: 0,\r\n            hairCountRemoval: 0,\r\n            procedures: [],\r\n            submitProcedure: false,\r\n            selectedProcedures: [],\r\n            optionProcedures: []\r\n        });\r\n    }\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        let procedures = newValue.master.procedures.map(procedure => {\r\n            return { value: procedure.id, label: procedure.description, procedure: procedure };\r\n        });\r\n        this.setState({\r\n            selectMaster: newValue.master,\r\n            selectMasterName: {\r\n                value: newValue.value,\r\n                label: newValue.master.person.name + \" - \" + typeMasterFormatter(newValue.master.type),\r\n                master: newValue.master\r\n            },\r\n            allPrice: 0,\r\n            masterWorkPrice: 0,\r\n            selectedProcedures: [],\r\n            procedures: [],\r\n            selectedHair: undefined,\r\n            hairWeight: 0,\r\n            hairCountExtension: 0,\r\n            hairCountRemoval: 0,\r\n            optionProcedures: procedures\r\n        });\r\n    };\r\n\r\n    handleChangeStartHour = (newValue) => {\r\n        this.setState({\r\n            startHour: newValue\r\n        });\r\n    };\r\n    handleChangeStartMinutes = (newValue) => {\r\n        this.setState({\r\n            startMinutes: newValue\r\n        });\r\n    };\r\n    handleChangeEndHour = (newValue) => {\r\n        this.setState({\r\n            endHour: newValue\r\n        });\r\n    };\r\n    handleChangeEndMinutes = (newValue) => {\r\n        this.setState({\r\n            endMinutes: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeAndRecountSum = name => event => {\r\n        let allSum = 0, masterWorkSum = 0;\r\n        let hairCountExtension = this.state.hairCountExtension;\r\n        let hairCountRemoval = this.state.hairCountRemoval;\r\n        let hairWeight = this.state.hairWeight;\r\n\r\n        if (name==='hairCountExtension') hairCountExtension=event.target.value;\r\n        if (name==='hairWeight') hairWeight=event.target.value;\r\n        if (name==='hairCountRemoval') hairCountRemoval=event.target.value;\r\n\r\n        if (this.state.selectedHair) {\r\n            this.state.hairsCategory.filter(hairCategory => (hairCategory.masterType === this.state.selectMaster.type\r\n                && (hairCategory.hairType === 'HAIR_EXTENSION')))\r\n                .forEach(hairCategory => {\r\n                    allSum = allSum + hairCategory.price * hairCountExtension + this.state.selectedHair.hair.price * hairWeight;\r\n                    masterWorkSum = masterWorkSum + hairCategory.price * hairCountExtension;\r\n                });\r\n        }\r\n        this.state.hairsCategory.filter(hairCategory => (hairCategory.hairType === 'HAIR_REMOVAL'))\r\n            .forEach(hairCategory => {\r\n                allSum = allSum + hairCategory.price*hairCountRemoval;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*hairCountRemoval;\r\n            });\r\n        this.setState({\r\n            [name]: event.target.value,\r\n            allPrice: allSum,\r\n            masterWorkPrice: masterWorkSum\r\n        });\r\n    };\r\n\r\n    setStatus(status) {\r\n        this.setState({\r\n            status: status\r\n        });\r\n    }\r\n\r\n    setMenu(menu) {\r\n        this.setState({\r\n            menu: menu\r\n        });\r\n    }\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    validateProcedures() {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state.procedures || this.state.procedures.length === 0);\r\n    }\r\n\r\n    onClientsFetchRequestedByName = ({ value }) => {\r\n        if (value && value.length>3) getClientsByFiO(value).then(\r\n            clients => this.changeClients(clients)\r\n        );\r\n    };\r\n\r\n    onClientsFetchRequestedByPhone = ({ value }) => {\r\n        if (value && value.length>3) getClientsByPhone(value).then(\r\n            clients => this.changeClients(clients)\r\n        );\r\n    };\r\n\r\n    changeClients(clients) {\r\n        let options = clients.map(client => {\r\n            return {\r\n                title: phoneFormatterToString(client.person.phone),\r\n                clients: [\r\n                    client\r\n                ]\r\n            }\r\n        });\r\n        this.setState({\r\n            clients: options\r\n        });\r\n    }\r\n\r\n    onClientsClearRequested = () => {\r\n        this.setState({\r\n            clients: []\r\n        });\r\n    };\r\n\r\n    onChangeClientName = (event, { newValue }) => {\r\n        this.setState({\r\n            selectClientName: newValue,\r\n            selectClient: undefined,\r\n            clientDescription: ''\r\n        });\r\n    };\r\n\r\n    onChangeClientPhone = (event, { newValue }) => {\r\n        if (newValue.length > 11) return false;\r\n        this.setState({\r\n            selectClientPhone: newValue,\r\n            selectClient: undefined,\r\n            clientDescription: ''\r\n        });\r\n    };\r\n\r\n    onClientSelected = (event, { suggestion })  => {\r\n        this.setState({\r\n            selectClient: suggestion,\r\n            selectClientName: suggestion.person.name,\r\n            clientDescription: suggestion.description ? suggestion.description : \"\",\r\n            selectClientPhone: phoneFormatterToString(suggestion.person.phone)\r\n        });\r\n    };\r\n\r\n    handleChangeHair = (newValue) => {\r\n        let allSum = 0, masterWorkSum = 0;\r\n        this.state.hairsCategory.filter(hairCategory => (hairCategory.masterType === this.state.selectMaster.type\r\n            && (hairCategory.hairType === 'HAIR_EXTENSION')))\r\n            .forEach(hairCategory => {\r\n                allSum = allSum + hairCategory.price*this.state.hairCountExtension + newValue.hair.price*this.state.hairWeight;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*this.state.hairCountExtension;\r\n            });\r\n        this.state.hairsCategory.filter(hairCategory => (hairCategory.hairType === 'HAIR_REMOVAL'))\r\n            .forEach(hairCategory => {\r\n                allSum = allSum + hairCategory.price*this.state.hairCountRemoval;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*this.state.hairCountRemoval;\r\n            });\r\n\r\n        this.setState({\r\n            selectedHair: newValue,\r\n            allPrice: allSum,\r\n            masterWorkPrice: masterWorkSum\r\n        });\r\n    };\r\n\r\n    handleChangeProcedures = (selectedProcedures) => {\r\n        let allSum = 0, masterWorkSum = 0;\r\n        let procedures = selectedProcedures.map(option => {\r\n            return option.procedure;\r\n        });\r\n\r\n        let hairCountExtension = procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION' || procedure.hairType === 'HAIR_CORRECTION') ? this.state.hairCountExtension : 0;\r\n        let hairCountRemoval = procedures.some(procedure => procedure.hairType === 'HAIR_REMOVAL' || procedure.hairType === 'HAIR_CORRECTION') ? this.state.hairCountRemoval : 0;\r\n        let hairWeight = procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION' || procedure.hairType === 'HAIR_CORRECTION') ? this.state.hairWeight : 0;\r\n        let selectedHair = procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION' || procedure.hairType === 'HAIR_CORRECTION') ? this.state.selectedHair : undefined;\r\n\r\n        this.state.hairsCategory.filter(hairCategory => (hairCategory.masterType === this.state.selectMaster.type\r\n            && (hairCategory.hairType === 'HAIR_EXTENSION')))\r\n            .forEach(hairCategory => {\r\n                if (selectedHair) allSum = allSum + hairCategory.price*hairCountExtension + selectedHair.hair.price*hairWeight;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*hairCountExtension;\r\n            });\r\n        this.state.hairsCategory.filter(hairCategory => (hairCategory.hairType === 'HAIR_REMOVAL'))\r\n            .forEach(hairCategory => {\r\n                allSum = allSum + hairCategory.price*hairCountRemoval;\r\n                masterWorkSum = masterWorkSum + hairCategory.price*hairCountRemoval;\r\n            });\r\n\r\n        this.setState({\r\n            selectedProcedures: selectedProcedures,\r\n            procedures: procedures,\r\n            allPrice: allSum,\r\n            masterWorkPrice: masterWorkSum,\r\n            selectedHair: selectedHair,\r\n            hairWeight: hairWeight,\r\n            hairCountExtension: hairCountExtension,\r\n            hairCountRemoval: hairCountRemoval\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const inputClientNameProps = {\r\n            placeholder: 'Введите имя клиента',\r\n            value:  this.state.selectClientName,\r\n            onChange: this.onChangeClientName\r\n        };\r\n        const inputClientPhoneProps = {\r\n            placeholder: 'Введите телефон клиента',\r\n            value: this.state.selectClientPhone,\r\n            onChange: this.onChangeClientPhone\r\n        };\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    { this.props.event ? <div className=\"time_slot_modal\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2 time-slot-menu\">\r\n                                <ul>\r\n                                    <li>\r\n                                        <a href=\"#\" onClick={() => this.setMenu('MAIN')}>Детали заказа</a>\r\n                                    </li>\r\n                                    {this.state.selectClient ? <li>\r\n                                        <a href=\"#\" onClick={() => this.setMenu('HISTORY')}>История посещений</a>\r\n                                    </li> : null}\r\n                                    {this.props.event.timeSlot ? <li>\r\n                                        <a href=\"#\" onClick={() => this.setMenu('HISTORY_CHANGE')}>История изменений</a>\r\n                                    </li> : null}\r\n                                </ul>\r\n                            </div>\r\n                            {this.state.menu === 'HISTORY_CHANGE' ? <div className=\"col-sm\">\r\n                                <div className=\"container selectDiv\">\r\n                                    <HistoryChangeSlot changes={this.props.event.timeSlot.changes}/>\r\n                                </div>\r\n                            </div> : null}\r\n                            {this.state.menu === 'HISTORY' ? <div className=\"col-sm\">\r\n                                <div className=\"container selectDiv\">\r\n                                    <HistoryClients client={this.state.selectClient}/>\r\n                                </div>\r\n                            </div> : null}\r\n                            {this.state.menu === 'MAIN' ? <div className=\"col-sm\">\r\n                                <div className=\"container selectDiv\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-2 title-margin-date\">\r\n                                            Дата заказа:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <DayPickerInput\r\n                                                placeholder={`Дата заказа`}\r\n                                                parseDate={parseDate}\r\n                                                value={this.state.date}\r\n                                                onDayChange={this.handleChangeDate}\r\n                                                dayPickerProps={{\r\n                                                    locale: 'ru',\r\n                                                    localeUtils: MomentLocaleUtils,\r\n                                                }}/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                    <div className=\"row\">\r\n                                        <button onClick={() => this.setStatus('NEW')} className={\"btn status-button \" + (this.state.status === 'NEW' ? 'active-status-button' : '')}>\r\n                                            Ожидание клиента\r\n                                        </button>\r\n                                        <button onClick={() => this.setStatus('DONE')} className={\"btn status-button \" + (this.state.status === 'DONE' ? 'active-status-button' : '')}>\r\n                                            Клиент пришел\r\n                                        </button>\r\n                                        <button onClick={() => this.setStatus('CANCELED')} className={\"btn status-button \" + (this.state.status === 'CANCELED' ? 'active-status-button' : '')}>\r\n                                            Клиент не пришел\r\n                                        </button>\r\n                                        <button onClick={() => this.setStatus('READY')} className={\"btn status-button \" + (this.state.status === 'READY' ? 'active-status-button' : '')}>\r\n                                            Клиент подтвердил\r\n                                        </button>\r\n                                    </div>\r\n                                    <hr/>\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-2 title-margin\">\r\n                                            Время начала:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <div className=\"inlineDiv\">\r\n                                                <Select\r\n                                                    value={this.state.startHour}\r\n                                                    options={hourOptions()}\r\n                                                    placeholder={''}\r\n                                                    onChange={this.handleChangeStartHour}\r\n                                                    className='selectStyle'\r\n                                                />\r\n                                                <div className=\"quote\">:</div>\r\n                                                <Select\r\n                                                    value={this.state.startMinutes}\r\n                                                    options={minuteOptions()}\r\n                                                    placeholder={''}\r\n                                                    onChange={this.handleChangeStartMinutes}\r\n                                                    className='selectStyle'\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-2\">\r\n                                            Время завершения:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <div className=\"inlineDiv\">\r\n                                                <Select\r\n                                                    value={this.state.endHour}\r\n                                                    options={hourOptions()}\r\n                                                    placeholder={''}\r\n                                                    onChange={this.handleChangeEndHour}\r\n                                                    className='selectStyle'\r\n                                                />\r\n                                                <div className=\"quote\">:</div>\r\n                                                <Select\r\n                                                    value={this.state.endMinutes}\r\n                                                    options={minuteOptions()}\r\n                                                    placeholder={''}\r\n                                                    onChange={this.handleChangeEndMinutes}\r\n                                                    className='selectStyle'\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                </div>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        Имя клиента:\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Autosuggest\r\n                                    suggestions={this.state.clients}\r\n                                    multiSection={true}\r\n                                    onSuggestionsFetchRequested={this.onClientsFetchRequestedByName}\r\n                                    onSuggestionsClearRequested={this.onClientsClearRequested}\r\n                                    getSuggestionValue={getClientName}\r\n                                    renderSuggestion={renderClient}\r\n                                    renderSectionTitle={renderSectionTitle}\r\n                                    getSectionSuggestions={getSectionClients}\r\n                                    inputProps={inputClientNameProps}\r\n                                    onSuggestionSelected={this.onClientSelected}\r\n                                />\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('selectClientName')} aria-describedby=\"selectClientName-error-text\">\r\n                                    { this.validate('selectClientName') ? <FormHelperText id=\"selectClientName-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        Телефон клиента:\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Autosuggest\r\n                                    suggestions={this.state.clients}\r\n                                    multiSection={true}\r\n                                    onSuggestionsFetchRequested={this.onClientsFetchRequestedByPhone}\r\n                                    onSuggestionsClearRequested={this.onClientsClearRequested}\r\n                                    getSuggestionValue={getClientPhone}\r\n                                    renderSuggestion={renderClient}\r\n                                    renderSectionTitle={renderSectionTitle}\r\n                                    getSectionSuggestions={getSectionClients}\r\n                                    inputProps={inputClientPhoneProps}\r\n                                    onSuggestionSelected={this.onClientSelected}\r\n                                />\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('selectClientPhone')} aria-describedby=\"selectClientPhone-error-text\">\r\n                                    { this.validate('selectClientPhone') ? <FormHelperText id=\"selectClientPhone-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        Комментарии к клиенту:\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <TextField InputLabelProps={{ shrink: true }} value={this.state.clientDescription}\r\n                                               onChange={this.handleChange('clientDescription')} fullWidth/>\r\n                                </div>\r\n                                <hr/>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm\">\r\n                                        Мастер:\r\n                                    </div>\r\n                                </div>\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectMasterName}\r\n                                    loadOptions={getOptionMastersByFIO}\r\n                                    onChange={this.handleInputMasterChange}\r\n                                    placeholder={'Выберите мастера'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectMaster')} aria-describedby=\"selectMaster-error-text\">\r\n                                    { this.validate('selectMaster') ? <FormHelperText id=\"selectMaster-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                                <hr/>\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-2 title-margin\">\r\n                                            Услуга:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <FormControl className={classes.formControl} error={this.validateProcedures()} aria-describedby=\"procedures-error-text\">\r\n                                                <Select id=\"procedures\"\r\n                                                        isMulti\r\n                                                        closeMenuOnSelect={false}\r\n                                                        value={this.state.selectedProcedures}\r\n                                                        onChange={this.handleChangeProcedures}\r\n                                                        placeholder=\"Выберите услуги\"\r\n                                                        options={this.state.optionProcedures}\r\n                                                />\r\n                                                { this.validateProcedures() ? <FormHelperText id=\"procedures-error-text\">Необходимо выбрать хотя бы один вариант</FormHelperText>: null }\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <hr/>\r\n                                {this.state.procedures.some(procedure => procedure.hairType === 'HAIR_EXTENSION' || procedure.hairType === 'HAIR_CORRECTION') ? <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-2 title-margin\">\r\n                                            Расход волос:\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <Select value={this.state.selectedHair}\r\n                                                    onChange={this.handleChangeHair}\r\n                                                    placeholder=\"Выберите категорию волос\"\r\n                                                    options={this.state.optionHairs}\r\n                                            />\r\n                                            { this.state.error ? <div className=\"row error_label error_label_slot\">\r\n                                                {this.state.error}\r\n                                            </div> : null}\r\n                                            <FormControl className={classes.formControlHairs} error={this.validate('selectedHair')} aria-describedby=\"selectedHair-error-text\">\r\n                                                { this.validate('selectedHair') ? <FormHelperText id=\"selectedHair-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                            </FormControl>\r\n                                        </div>\r\n                                    </div>\r\n                                    {this.state.selectedHair ? <div className=\"row\">\r\n                                        <div className=\"col-sm-3 title-margin-date\">\r\n                                            Количество (шт.):\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.hairCountExtension}\r\n                                                onChange={this.handleChangeAndRecountSum('hairCountExtension')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-sm-3 title-margin-date\">\r\n                                            Вес (гр.):\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.hairWeight}\r\n                                                onChange={this.handleChangeAndRecountSum('hairWeight')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div> : null}\r\n                                    <hr/>\r\n                                </div> : null}\r\n                                {this.state.procedures.some(procedure => procedure.hairType === 'HAIR_REMOVAL' || procedure.hairType === 'HAIR_CORRECTION') ? <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-4 title-margin-date\">\r\n                                            Снятие волос (количество прядей):\r\n                                        </div>\r\n                                        <div className=\"col-sm-3\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.hairCountRemoval}\r\n                                                onChange={this.handleChangeAndRecountSum('hairCountRemoval')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                </div> : null}\r\n                                <div className=\"container\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-sm-3 title-margin-date\">\r\n                                            Услуги мастера (руб.):\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.masterWorkPrice}\r\n                                                onChange={this.handleChange('masterWorkPrice')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"col-sm-3 title-margin-date\">\r\n                                            Общая стоимость (руб.):\r\n                                        </div>\r\n                                        <div className=\"col-sm\">\r\n                                            <TextField\r\n                                                className={classes.formControl}\r\n                                                value={this.state.allPrice}\r\n                                                onChange={this.handleChange('allPrice')}\r\n                                                InputProps={{\r\n                                                    inputComponent: NumberFormatCustom,\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <hr/>\r\n                                </div>\r\n                            </div> : null}\r\n                        </div>\r\n                    </div>: null }\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                        {this.state.id ? <button className=\"btn btn-primary\" onClick={this.delete}>\r\n                            Удалить\r\n                        </button> : null}\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(TimeSlotModal);\r\n","import {GET_TIME_SLOTS} from \"../constants/timeSlotConstants\";\nimport {getTimeSlotsByDate} from \"../service/timeSlotService\";\n\nexport const getTimeSlotsByDateAction = (start, end, master, params) => dispatch => {\n    getTimeSlotsByDate(start, end, master, params).then(timeSlots => {\n        dispatch({\n            type: GET_TIME_SLOTS,\n            payload: timeSlots\n        })\n    });\n};","export const GET_TIME_SLOTS = \"GET_TIME_SLOTS\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BigCalendar from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport TimeSlotModal from \"../modal/TimeSlotModal\";\r\nimport {getTimeSlotsByDate} from \"../service/timeSlotService\";\r\nimport 'moment/locale/ru';\r\nimport {bindActionCreators} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {getTimeSlotsByDateAction} from \"../actions/timeSlotActions\";\r\nimport {allMastersByDayOff, allMastersByWorkDay} from \"../service/masterService\";\r\nimport Modal from 'react-responsive-modal';\r\nimport Select from 'react-select';\r\nimport {typeMasterFormatter} from \"../data/formatter\";\r\n\r\nclass TimeTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let start = moment().startOf('day').format('YYYY-MM-DD HH:mm:ss');\r\n        let end =  moment().endOf('day').format('YYYY-MM-DD HH:mm:ss');\r\n\r\n        this.state = {\r\n            open: false,\r\n            event: {},\r\n            startWeek: start,\r\n            endWeek: end,\r\n            selectMaster: undefined,\r\n            timeSlots:undefined,\r\n            date: new Date(),\r\n            openAddMaster: false,\r\n            addMasterSelect: undefined,\r\n            addMasterOptions: []\r\n        };\r\n        this.onOpenTimeSlotModal = this.onOpenTimeSlotModal.bind(this);\r\n        this.onCloseTimeSlotModal = this.onCloseTimeSlotModal.bind(this);\r\n        this.saveTimeSlot = this.saveTimeSlot.bind(this);\r\n        this.onNavigate = this.onNavigate.bind(this);\r\n        this.onSelectEvent = this.onSelectEvent.bind(this);\r\n        this.handleInputMasterChange = this.handleInputMasterChange.bind(this);\r\n        this.openModalMasterToGraph = this.openModalMasterToGraph.bind(this);\r\n        this.closeModalMasterToGraph = this.closeModalMasterToGraph.bind(this);\r\n        this.addMasterToGraph = this.addMasterToGraph.bind(this);\r\n        this.handleChangeAddMaster = this.handleChangeAddMaster.bind(this);\r\n        this.setTimeSlots = this.setTimeSlots.bind(this);\r\n\r\n        this.setTimeSlots(start, end, undefined);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let date = this.props.location.search.substr(6);\r\n        if (!date) return;\r\n        this.setTimeSlots(date);\r\n    }\r\n\r\n    componentWillReceiveProps(newProps) {\r\n        let date = newProps.location.search.substr(6);\r\n        this.setTimeSlots(date);\r\n    }\r\n\r\n    setTimeSlots(date) {\r\n        this.setState({\r\n            timeSlots: undefined\r\n        });\r\n        let start = moment(new Date(moment(date).startOf('day').toDate())).format('YYYY-MM-DD HH:mm:ss');\r\n        let end = moment(new Date(moment(date).endOf('day').toDate())).format('YYYY-MM-DD HH:mm:ss');\r\n        getTimeSlotsByDate(start, end).then(timeSlots => {\r\n            let events = timeSlots.map(timeSlot => {\r\n                return {\r\n                    id: timeSlot.id,\r\n                    resourceId: timeSlot.master.id,\r\n                    title: \"\\nМастер: \"+ timeSlot.master.person.name\r\n                    + \" \\nКлиент: \" + timeSlot.client.person.name\r\n                    + \" Цена: \" + timeSlot.allPrice,\r\n                    timeSlot: timeSlot,\r\n                    start: moment.unix(timeSlot.startSlot).toDate(),\r\n                    end: moment.unix(timeSlot.endSlot).toDate()\r\n                };\r\n            });\r\n            allMastersByWorkDay(start).then(mastersWorkDay => {\r\n                let resources = mastersWorkDay.map(master => {\r\n                    return {\r\n                        id: master.id,\r\n                        title: this.breakLine(master.person.name + \"<p/>\" + typeMasterFormatter(master.type)),\r\n                        master: master\r\n                    };\r\n                });\r\n                allMastersByDayOff(start).then(mastersWorkOff => {\r\n                    let addMasterOptions = mastersWorkOff.map(master => {\r\n                        return { value: master.id, label: master.person.name, master: master };\r\n                    });\r\n                    this.setState({\r\n                        timeSlots: {\r\n                            events: events,\r\n                            resources: resources\r\n                        },\r\n                        addMasterOptions: addMasterOptions,\r\n                        date: new Date(date),\r\n                        startWeek: start,\r\n                        endWeek: end\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    breakLine(text) {\r\n        let regex = /(<p\\/>)/g;\r\n        return text.substring(0, text.indexOf(\"<p/>\") + 4).split(regex).map(function(line, index) {\r\n            return line.match(regex) ? <p key={\"key_\" + index}>{text.substring(text.indexOf(\"<p/>\") + 4)}</p> : line;\r\n        });\r\n    }\r\n\r\n    onCloseTimeSlotModal = () => {\r\n        this.setTimeSlots(this.state.startWeek, this.state.endWeek);\r\n        this.setState({\r\n            open: false,\r\n            event: {}\r\n        });\r\n    };\r\n\r\n    onSelectEvent = (event) => {\r\n        this.setState({\r\n            event: event,\r\n            open: true\r\n        });\r\n    };\r\n\r\n    onOpenTimeSlotModal = (event) => {\r\n        let master = this.state.timeSlots.resources.find(resource => resource.id === event.resourceId).master;\r\n        this.setState({\r\n            event: {\r\n                start: event.start,\r\n                end: event.end\r\n            },\r\n            selectMaster: {\r\n                value: master.id,\r\n                label: master.person.name,\r\n                master: master\r\n            },\r\n            open: true\r\n        });\r\n    };\r\n\r\n    saveTimeSlot() {\r\n        this.setTimeSlots(this.state.startWeek, this.state.endWeek);\r\n        this.setState({\r\n            open: false,\r\n            event: {}\r\n        });\r\n    };\r\n\r\n    onNavigate(date, view) {\r\n        let end = new Date(moment(date).endOf('isoWeek').toDate());\r\n        end.setHours(23);\r\n        end.setMinutes(59);\r\n        end.setSeconds(59);\r\n\r\n        let start = moment(new Date(moment(date).startOf('isoWeek').toDate())).format('YYYY-MM-DD HH:mm:ss');\r\n        let endFormat = moment(end).format('YYYY-MM-DD HH:mm:ss');\r\n\r\n        this.setTimeSlots(start, endFormat);\r\n\r\n        this.setState({\r\n            startWeek: start,\r\n            endWeek: endFormat\r\n        });\r\n    };\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        this.setTimeSlots(this.state.startWeek, this.state.endWeek,);\r\n        this.setState({\r\n            selectMaster: {\r\n                value: newValue.value.id,\r\n                label: newValue.master.person.name,\r\n                master: newValue.master\r\n            }\r\n        });\r\n    };\r\n\r\n    openModalMasterToGraph() {\r\n        this.setState({\r\n            openAddMaster: true\r\n        });\r\n    };\r\n\r\n    closeModalMasterToGraph() {\r\n        this.setState({\r\n            openAddMaster: false\r\n        });\r\n    };\r\n\r\n    handleChangeAddMaster = (newValue) => {\r\n        this.setState({\r\n            addMasterSelect: newValue\r\n        });\r\n    };\r\n\r\n    addMasterToGraph() {\r\n        let addMasterOptions = this.state.addMasterOptions.filter(\r\n            master => {\r\n                return master.value !== this.state.addMasterSelect.value\r\n            }\r\n        );\r\n        let resources = this.state.timeSlots.resources;\r\n        resources.push({\r\n            id: this.state.addMasterSelect.master.id,\r\n            title: this.state.addMasterSelect.master.person.name + \" - \"\r\n                + typeMasterFormatter(this.state.addMasterSelect.master.type),\r\n            master: this.state.addMasterSelect.master\r\n        });\r\n\r\n        this.setState((state) => {\r\n            return {\r\n                timeSlots: {\r\n                    events: state.timeSlots.events,\r\n                    resources: resources,\r\n                },\r\n                addMasterOptions: addMasterOptions,\r\n                addMasterSelect: undefined,\r\n                openAddMaster: false\r\n            };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        moment.locale(\"ru\", {\r\n            week: {\r\n                dow: 1\r\n            }\r\n        });\r\n\r\n        const localize = BigCalendar.momentLocalizer(moment);\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.openModalMasterToGraph } className=\"btn btn-primary\">\r\n                        Добавить мастера в расписание\r\n                    </button>\r\n                </div>\r\n                <hr/>\r\n                { this.state.timeSlots ? <BigCalendar\r\n                    date={this.state.date}\r\n                    localizer={localize}\r\n                    events={this.state.timeSlots.events}\r\n                    resources={this.state.timeSlots.resources}\r\n                    startAccessor=\"start\"\r\n                    endAccessor=\"end\"\r\n                    selectable={true}\r\n                    defaultView={BigCalendar.Views.DAY}\r\n                    min={new Date(2017, 10, 0, 10, 0, 0)}\r\n                    max={new Date(2017, 10, 0, 22, 0, 0)}\r\n                    views={{day: true}}\r\n                    step={30}\r\n                    toolbar={false}\r\n                    timeslots={1}\r\n                    onSelectEvent={this.onSelectEvent}\r\n                    onSelectSlot={this.onOpenTimeSlotModal}\r\n                    onNavigate={this.onNavigate}\r\n                    eventPropGetter={\r\n                        (event, start, end, isSelected) => {\r\n                            let newStyle = {\r\n                                backgroundColor: \"rgb(104, 14, 14)\",\r\n                                borderRadius: \"0px\",\r\n                                border: \"none\"\r\n                            };\r\n                            if (event.timeSlot.status === 'NEW'){\r\n                                newStyle.backgroundColor = \"gray\"\r\n                            }\r\n                            if (event.timeSlot.status === 'CANCELED'){\r\n                                newStyle.backgroundColor = \"#f30808\"\r\n                            }\r\n                            if (event.timeSlot.status === 'DONE'){\r\n                                newStyle.backgroundColor = \"rgb(39, 38, 42)\"\r\n                            }\r\n                            return {\r\n                                style: newStyle\r\n                            };\r\n                        }\r\n                    }\r\n                />: null}\r\n                {this.state.event.start ? <TimeSlotModal\r\n                    accept={this.saveTimeSlot}\r\n                    event={this.state.event}\r\n                    selectMaster={this.state.selectMaster}\r\n                    open={this.state.open}\r\n                    close={this.onCloseTimeSlotModal}/>: null}\r\n\r\n                <Modal open={this.state.openAddMaster}\r\n                       closeOnOverlayClick={true}\r\n                       showCloseIcon={false}\r\n                       onClose={this.closeModalMasterToGraph}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container add_master_modal\">\r\n                        <div className='row'>\r\n                            <div className=\"col-sm\">\r\n                                <Select closeMenuOnSelect={false}\r\n                                        value={this.state.addMasterSelect}\r\n                                        onChange={this.handleChangeAddMaster}\r\n                                        placeholder=\"Выберите мастера\"\r\n                                        options={this.state.addMasterOptions}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.addMasterToGraph}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.closeModalMasterToGraph}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    timeSlots: state.timeSlotReducer.timeSlots,\r\n    resources: state.timeSlotReducer.resources\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        timeSlotActions: bindActionCreators(getTimeSlotsByDateAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TimeTable);","export default [\r\n    {\r\n        dataField: 'description',\r\n        text: 'Название аксессуара'\r\n    },\r\n    {\r\n        dataField: 'purchasePrice',\r\n        text: 'Закупочная цена'\r\n    },\r\n    {\r\n        dataField: 'sellingPrice',\r\n        text: 'Цена продажи'\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport '../react-day-picker.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport NumberFormat from 'react-number-format';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControlDescription: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nfunction NumberFormatCustom(props) {\r\n    const { inputRef, onChange, ...other } = props;\r\n\r\n    return (\r\n        <NumberFormat\r\n            {...other}\r\n            getInputRef={inputRef}\r\n            onValueChange={values => {\r\n                onChange({\r\n                    target: {\r\n                        value: values.value,\r\n                    },\r\n                });\r\n            }}\r\n            thousandSeparator={' '}\r\n        />\r\n    );\r\n}\r\n\r\nclass ProductModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: {\r\n                description: '',\r\n                purchasePrice: '',\r\n                sellingPrice: ''\r\n            },\r\n            submit: false\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.select)\r\n            this.setState({\r\n                product: this.props.select\r\n            });\r\n    }\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.product.description\r\n            && this.state.product.purchasePrice\r\n            && this.state.product.sellingPrice) {\r\n            this.props.accept(this.state.product);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    clear() {\r\n        this.setState({\r\n            product: {\r\n                description: '',\r\n                purchasePrice: '',\r\n                sellingPrice: ''\r\n            },\r\n            submit: false\r\n        });\r\n    }\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state.product || !this.state.product[field]);\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            product: {\r\n                ...this.state.product,\r\n                [name]: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div>\r\n                        <div className={classes.container}>\r\n                            <FormControl className={classes.formControl} error={this.validate('description')} aria-describedby=\"description-error-text\">\r\n                                <InputLabel htmlFor=\"description\">Описание</InputLabel>\r\n                                <Input id=\"description\" value={this.state.product.description} onChange={this.handleChange('description')} />\r\n                                { this.validate('description') ? <FormHelperText id=\"description-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                            <FormControl className={classes.formControl} error={this.validate('purchasePrice')} aria-describedby=\"purchasePrice-error-text\">\r\n                                <InputLabel htmlFor=\"purchasePrice\">Закупочная цена (руб.)</InputLabel>\r\n                                <Input id=\"purchasePrice\" inputComponent={NumberFormatCustom} value={this.state.product.purchasePrice} onChange={this.handleChange('purchasePrice')} />\r\n                                { this.validate('purchasePrice') ? <FormHelperText id=\"purchasePrice-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                            <FormControl className={classes.formControl} error={this.validate('sellingPrice')} aria-describedby=\"sellingPrice-error-text\">\r\n                                <InputLabel htmlFor=\"sellingPrice\">Цена продажи (руб.)</InputLabel>\r\n                                <Input id=\"sellingPrice\" inputComponent={NumberFormatCustom} value={this.state.product.sellingPrice} onChange={this.handleChange('sellingPrice')} />\r\n                                { this.validate('sellingPrice') ? <FormHelperText id=\"sellingPrice-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ProductModal);\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getProducts() {\r\n    return fetch(getUrl() + \"/api/products\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function getProductsByDescription(description) {\r\n    return fetch(getUrl() + \"/api/products/description/\" + description)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function createProduct(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nexport function updateProduct(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/product\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colProduct from \"../data/colProduct\";\r\nimport ProductModal from \"../modal/ProductModal\";\r\nimport {createProduct, getProducts, updateProduct} from \"../service/productService\";\r\n\r\nclass Products extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            openCreate: false,\r\n            openUpdate: false\r\n        };\r\n        this.createProduct = this.createProduct.bind(this);\r\n        this.updateProduct = this.updateProduct.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.handleOnSelect = this.handleOnSelect.bind(this);\r\n        getProducts().then(data => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        });\r\n    }\r\n\r\n    createProduct(entity) {\r\n        createProduct(entity).then(() => {\r\n            getProducts().then(data => {\r\n                this.setState({\r\n                    openCreate: false,\r\n                    data: data\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    updateProduct(entity) {\r\n        updateProduct(entity).then(() => {\r\n            getProducts().then(data => {\r\n                this.setState({\r\n                    openUpdate: false,\r\n                    data: data,\r\n                    select: entity\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false\r\n        });\r\n    };\r\n\r\n    onOpenUpdateModal () {\r\n        this.setState({\r\n            openUpdate: true\r\n        });\r\n    };\r\n\r\n    handleOnSelect = (row) => {\r\n        this.setState({\r\n            select : row\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const selectRow = {\r\n            mode: 'radio',\r\n            clickToSelect: true,\r\n            hideSelectColumn: true,\r\n            bgColor: '#00BFFF',\r\n            onSelect: this.handleOnSelect,\r\n        };\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.onOpenCreateModal } className=\"btn btn-primary\">\r\n                        Добавить аксессуар\r\n                    </button>\r\n                    { this.state.select ? <button onClick = { this.onOpenUpdateModal } className=\"btn btn-primary\">\r\n                        Изменить аксессуар\r\n                    </button> : null }\r\n                </div>\r\n                {this.state.data ? <BootstrapTable\r\n                    keyField=\"id\"\r\n                    selectRow={ selectRow }\r\n                    data={this.state.data}\r\n                    columns={colProduct}\r\n                />: null}\r\n                <ProductModal accept={this.createProduct}\r\n                              open={this.state.openCreate}\r\n                              close={this.onCloseCreateModal} />\r\n                {this.state.openUpdate ? <ProductModal accept={this.updateProduct}\r\n                              open={this.state.openUpdate}\r\n                              select={this.state.select}\r\n                              close={this.onCloseUpdateModal} /> : null }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Products;\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getExpenses(params, start, end) {\r\n    let sort = params.sortField ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterMaster= params.filters && params.filters['master.person.name'] ? \"&masterId=\" + params.filters['master.person.name'].filterVal : '';\r\n    let filterProduct= params.filters && params.filters['product.description'] ? \"&productId=\" + params.filters['product.description'].filterVal : '';\r\n    return fetch(getUrl() + \"/api/expenses?page=\" + params.page\r\n        + \"&size=\" + params.size + sort + filterMaster + filterProduct + \"&start=\" + start + \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function updateExpense(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createExpense(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/expense\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_EXPENSES} from \"../constants/expenseConstants\";\r\nimport {getExpenses} from \"../service/expenseService\";\r\n\r\nexport const getExpensesAction = (params, start, end) => dispatch => {\r\n    getExpenses(params, start, end).then(expenses => {\r\n        dispatch({\r\n            type: GET_EXPENSES,\r\n            payload: expenses\r\n        })\r\n    });\r\n};","export const GET_EXPENSES = \"GET_EXPENSES\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getProducts, getProductsByDescription} from \"../service/productService\";\r\nimport {getMasters, getMastersByFiO} from \"../service/masterService\";\r\nimport PageParams from \"../model/PageParams\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {createExpense, updateExpense} from \"../service/expenseService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionMastersByFIO(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getMasters(new PageParams(0, 100));\r\n    else response = await getMastersByFiO(search);\r\n    let cachedOptions = response.content.map((d) => ({\r\n        value: d.id,\r\n        label: d.person.name,\r\n        master: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\n\r\nasync function getOptionExpensesByDescription(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getProducts();\r\n    else response = await getProductsByDescription(search);\r\n    let cachedOptions = response.map((d) => ({\r\n        value: d.id,\r\n        label: d.description,\r\n        product: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass ExpenseModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectMaster: undefined,\r\n            selectProductByDescription: undefined,\r\n            selectMasterFio: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputProductChange = this.handleInputProductChange.bind(this);\r\n        this.handleInputMasterChange = this.handleInputMasterChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeCountProduct = this.handleChangeCountProduct.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                id: this.props.update.id,\r\n                date: this.props.update.date ? moment.unix(this.props.update.date).toDate() : new Date(),\r\n                countProduct: this.props.update.countProduct,\r\n                selectProduct: this.props.update.product,\r\n                selectMaster: this.props.update.master,\r\n                selectMasterFio: {\r\n                    value: this.props.update.master.id,\r\n                    label: this.props.update.master.person.name,\r\n                    master: this.props.update.master\r\n                },\r\n                selectProductByDescription: {\r\n                    value: this.props.update.product.id,\r\n                    label: this.props.update.product.description,\r\n                    product: this.props.update.product\r\n                },\r\n                error: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectMaster: undefined,\r\n            selectProductByDescription: undefined,\r\n            selectMasterFio: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.selectProduct\r\n            && this.state.countProduct>0\r\n            && this.state.selectMaster\r\n            && this.state.date) {\r\n            let expense = {\r\n                id: this.state.id,\r\n                date: this.state.date,\r\n                product: this.state.selectProduct,\r\n                master: this.state.selectMaster,\r\n                countProduct: this.state.countProduct\r\n            };\r\n            if (this.props.isCreate) this.createExpense(expense);\r\n            else this.updateExpense(expense);\r\n        }\r\n    };\r\n\r\n    updateExpense(entity) {\r\n        updateExpense(entity).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    createExpense(entity) {\r\n        createExpense(entity).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    handleInputProductChange = (newValue) => {\r\n        this.setState({\r\n            selectProduct: newValue.product,\r\n            selectProductByDescription: {\r\n                value: newValue.value,\r\n                label: newValue.product.description,\r\n                product: newValue.product\r\n            },\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        this.setState({\r\n            selectMaster: newValue.master,\r\n            selectMasterFio: {\r\n                value: newValue.value,\r\n                label: newValue.master.person.name,\r\n                master: newValue.master\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeCountProduct = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                countProduct: event.target.value,\r\n                error: undefined\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Товар:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectProductByDescription}\r\n                                    loadOptions={getOptionExpensesByDescription}\r\n                                    onChange={this.handleInputProductChange}\r\n                                    placeholder={'Выберите товар'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectProduct')} aria-describedby=\"selectProduct-error-text\">\r\n                                    { this.validate('selectProduct') ? <FormHelperText id=\"selectProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                Количество:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.countProduct}\r\n                                           onChange={this.handleChangeCountProduct} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Мастер:\r\n                            </div>\r\n                            <div className=\"col-sm\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectMasterFio}\r\n                                    loadOptions={getOptionMastersByFIO}\r\n                                    onChange={this.handleInputMasterChange}\r\n                                    placeholder={'Выберите мастера'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectMaster')} aria-describedby=\"selectMaster-error-text\">\r\n                                    { this.validate('selectMaster') ? <FormHelperText id=\"selectMaster-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Дата:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <DayPickerInput\r\n                                placeholder={`Дата расхода`}\r\n                                parseDate={parseDate}\r\n                                value={this.state.date}\r\n                                onDayChange={this.handleChangeDate}\r\n                                formatDate={formatDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                }}/>\r\n                            <FormControl className={classes.formControl} error={this.validate('date')} aria-describedby=\"date-error-text\">\r\n                                { this.validate('date') ? <FormHelperText id=\"date-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    { this.state.error ? <div className=\"row error_label\">\r\n                        {this.state.error}\r\n                    </div> : null}\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ExpenseModal);\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getMastersReport(start, end) {\r\n    return fetch(getUrl() + \"/report/getMastersReport?start=\" + start + \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => {\r\n            return res.blob();\r\n        }).then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'отчет.xlsx';\r\n            a.click();\r\n        }).catch(err => console.error(err));\r\n}\r\n\r\nexport function getExpensesReport(params, start, end) {\r\n    let sort = params.sortOrder ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterMaster= params.filters && params.filters['master.person.name'] ? \"&masterId=\" + params.filters['master.person.name'].filterVal : '';\r\n    let filterProduct= params.filters && params.filters['product.description'] ? \"&productId=\" + params.filters['product.description'].filterVal : '';\r\n    return fetch(getUrl() + \"/report/getExpensesReport?start=\" + start + \"&end=\" + end + sort + filterMaster + filterProduct)\r\n        .then(handleErrors)\r\n        .then(res => {\r\n            return res.blob();\r\n        }).then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'отчет.xlsx';\r\n            a.click();\r\n        }).catch(err => console.error(err));\r\n}\r\n\r\nexport function getIncomingReport(params, start, end) {\r\n    let sort = params.sortOrder ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterProduct= params.filters && params.filters['product.description'] ? \"&productId=\" + params.filters['product.description'].filterVal : '';\r\n    return fetch(getUrl() + \"/report/getIncomingReport?start=\" + start + \"&end=\" + end + sort + filterProduct)\r\n        .then(handleErrors)\r\n        .then(res => {\r\n            return res.blob();\r\n        }).then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'отчет.xlsx';\r\n            a.click();\r\n        }).catch(err => console.error(err));\r\n}\r\n\r\nexport function getAdditionalIncomingReport(params, start, end) {\r\n    let sort = params.sortOrder ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterMaster= params.filters && params.filters['master.person.name'] ? \"&masterId=\" + params.filters['master.person.name'].filterVal : '';\r\n    return fetch(getUrl() + \"/report/getAdditionalIncomingReport?start=\" + start + \"&end=\" + end + sort + filterMaster)\r\n        .then(handleErrors)\r\n        .then(res => {\r\n            return res.blob();\r\n        }).then(blob => {\r\n            let url = window.URL.createObjectURL(blob);\r\n            let a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = 'отчет.xlsx';\r\n            a.click();\r\n        }).catch(err => console.error(err));\r\n}\r\n\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport {connect} from 'react-redux';\r\nimport {getExpensesAction} from \"../actions/expenseActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport ExpenseModal from \"../modal/ExpenseModal\";\r\nimport {getAllMasters} from \"../service/masterService\";\r\nimport {selectFilter} from \"react-bootstrap-table2-filter\";\r\nimport {getProducts} from \"../service/productService\";\r\nimport moment from 'moment'\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport {getExpensesReport} from \"../service/reportService\";\r\n\r\nclass Expenses extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            sortField: '',\r\n            sortOrder: '',\r\n            masterOptions: {},\r\n            productOptions: {},\r\n            filters: {},\r\n            row: undefined,\r\n            error: undefined,\r\n            start: moment().startOf('month').toDate(),\r\n            end: moment().endOf('month').toDate()\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.accept = this.accept.bind(this);\r\n        this.export = this.export.bind(this);\r\n\r\n        this.props.expenseActions(new PageParams(0, 10, \"date\", \"asc\"),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n\r\n        getAllMasters().then(masters => {\r\n            let masterOptions = {};\r\n            masters.forEach(master => {\r\n                masterOptions[master.id] = master.person.name;\r\n            });\r\n            this.setState({\r\n                masterOptions: masterOptions\r\n            })\r\n        });\r\n        getProducts().then(products => {\r\n            let productOptions = {};\r\n            products.forEach(product => {\r\n                productOptions[product.id] = product.description;\r\n            });\r\n            this.setState({\r\n                productOptions: productOptions\r\n            })\r\n        });\r\n    }\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {sortField, sortOrder, filters, page, sizePerPage}) => {\r\n        this.setState({\r\n            sortField: sortField,\r\n            sortOrder: sortOrder,\r\n            filters: filters\r\n        });\r\n        this.props.expenseActions(new PageParams(page - 1, sizePerPage, sortField, sortOrder, filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    };\r\n\r\n    accept() {\r\n        this.props.expenseActions(new PageParams(\r\n            this.props.expenses.number,\r\n            this.props.expenses.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeStartDate = (newValue) => {\r\n        this.props.expenseActions(new PageParams(\r\n            this.props.expenses.number,\r\n            this.props.expenses.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            start: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeEndDate = (newValue) => {\r\n        this.props.expenseActions(new PageParams(\r\n            this.props.expenses.number,\r\n            this.props.expenses.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            end: newValue\r\n        });\r\n    };\r\n\r\n    export() {\r\n        getExpensesReport(new PageParams(\r\n            this.props.expenses.number,\r\n            this.props.expenses.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    }\r\n\r\n    render() {\r\n        const colExpense = [\r\n            {\r\n                dataField: 'date',\r\n                text: 'Дата расхода',\r\n                sort: true,\r\n                formatter: (cellContent) => {\r\n                    return (\r\n                        <div>\r\n                            {moment.unix(cellContent).format(\"DD.MM.YYYY\")}\r\n                        </div>\r\n                    )\r\n                }\r\n            },{\r\n                dataField: 'master.person.name',\r\n                text: '',\r\n                sort: true,\r\n                filter: selectFilter({\r\n                    placeholder: 'Мастер',\r\n                    style: {\r\n                        backgroundColor: '#e4e4e1'\r\n                    },\r\n                    options: this.state.masterOptions\r\n                })\r\n            },\r\n            {\r\n                dataField: 'product.description',\r\n                text: '',\r\n                sort: true,\r\n                filter: selectFilter({\r\n                    placeholder: 'Товар',\r\n                    style: {\r\n                        backgroundColor: '#e4e4e1'\r\n                    },\r\n                    options: this.state.productOptions\r\n                })\r\n            },\r\n            {\r\n                dataField: 'countProduct',\r\n                text: 'Количество товара'\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            c\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.start}\r\n                                onDayChange={this.handleChangeStartDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            по\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.end}\r\n                                onDayChange={this.handleChangeEndDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TableRemote data={this.props.expenses ? this.props.expenses.content : []}\r\n                                                   page={this.props.expenses ? this.props.expenses.number + 1 : 1}\r\n                                                   columns={colExpense}\r\n                                                   entity=\"расход\"\r\n                                                   buttonCreateTitle='Создание нового расхода'\r\n                                                   buttonEditTitle='Изменение расхода'\r\n                                                   sizePerPage={this.props.expenses ? this.props.expenses.size : 0}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   isExport={true}\r\n                                                   export={this.export}\r\n                                                   totalSize={this.props.expenses ? this.props.expenses.totalElements : 0}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n\r\n                {this.state.row ? <ExpenseModal accept={this.accept}\r\n                             open={this.state.openUpdate}\r\n                             isCreate={false}\r\n                             update={this.state.row}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <ExpenseModal accept={this.accept}\r\n                             open={this.state.openCreate} isCreate={true}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    expenses: state.expenseReducer.expenses\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        expenseActions: bindActionCreators(getExpensesAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Expenses);\r\n","export default [\r\n    {\r\n        dataField: 'product.description',\r\n        text: 'Пролукт'\r\n    },\r\n    {\r\n        dataField: 'count',\r\n        text: 'Остаток'\r\n    }\r\n]","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getAllProductsBalance() {\r\n    return fetch(getUrl() + \"/api/getAllProductsBalance\")\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function createIncoming(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/incoming\", options)\r\n        .then(handleErrors)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getProducts, getProductsByDescription} from \"../service/productService\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionExpensesByDescription(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getProducts();\r\n    else response = await getProductsByDescription(search);\r\n    let cachedOptions = response.map((d) => ({\r\n        value: d.id,\r\n        label: d.description,\r\n        product: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass BalanceModal extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: undefined,\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputProductChange = this.handleInputProductChange.bind(this);\r\n        this.handleChangeCountProduct = this.handleChangeCountProduct.bind(this);\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.selectProduct\r\n            && this.state.countProduct>0) {\r\n            let incoming = {\r\n                id: this.state.id,\r\n                product: this.state.selectProduct,\r\n                countProduct: this.state.countProduct\r\n            };\r\n            this.props.accept(incoming);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    handleInputProductChange = (newValue) => {\r\n        this.setState({\r\n            selectProduct: newValue.product,\r\n            selectProductByDescription: {\r\n                value: newValue.value,\r\n                label: newValue.product.description,\r\n                product: newValue.product\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeCountProduct = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                countProduct: event.target.value\r\n            });\r\n        }\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2 title-margin\">\r\n                                Товар:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectProductByDescription}\r\n                                    loadOptions={getOptionExpensesByDescription}\r\n                                    onChange={this.handleInputProductChange}\r\n                                    placeholder={'Выберите товар'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectProduct')} aria-describedby=\"selectProduct-error-text\">\r\n                                    { this.validate('selectProduct') ? <FormHelperText id=\"selectProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2 title-margin\">\r\n                                Количество:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.countProduct}\r\n                                           onChange={this.handleChangeCountProduct} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(BalanceModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport colProductBalance from \"../data/colProductBalance\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport {getAllProductsBalance} from \"../service/productBlanceService\";\r\nimport {createIncoming} from \"../service/balanceService\";\r\nimport BalanceModal from \"../modal/BalanceModal\";\r\n\r\nclass Balance extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            openCreate: false\r\n        };\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n        this.createIncoming = this.createIncoming.bind(this);\r\n\r\n        getAllProductsBalance().then(data => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        });\r\n    }\r\n\r\n    createIncoming(entity) {\r\n        createIncoming(entity).then(() => {\r\n            getAllProductsBalance().then(data => {\r\n                this.setState({\r\n                    data: data,\r\n                    openCreate: false\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.onOpenCreateModal } className=\"btn btn-primary\">\r\n                        Добавить приход продукта\r\n                    </button>\r\n                </div>\r\n                <BootstrapTable\r\n                    keyField=\"product.description\"\r\n                    data={this.state.data}\r\n                    columns={colProductBalance}\r\n                />\r\n                <BalanceModal accept={this.createIncoming}\r\n                              open={this.state.openCreate}\r\n                              close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Balance;\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getStatisticMastersReport(start, end, reportType, master) {\r\n    let masterId = master ? \"&masterId=\" + master.id : '';\r\n    let report = reportType===0 ? \"getStatisticMastersReport\" : \"getIncomesBetweenDate\";\r\n    return fetch(getUrl() + \"/report/\" + report + \"?start=\" + start + \"&end=\" + end + masterId)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport '../style.css';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {getMastersReport} from \"../service/reportService\";\r\nimport {getMasters, getMastersByFiO} from \"../service/masterService\";\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport PageParams from \"../model/PageParams\";\r\nimport {getStatisticMastersReport} from \"../service/dashboardService\";\r\nimport ReactTable from 'react-table'\r\nimport {reportOptions} from \"../data/selectOptions\";\r\nimport Select from 'react-select';\r\n\r\nasync function getOptionMastersByFIO(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getMasters(new PageParams(0, 100));\r\n    else response = await getMastersByFiO(search);\r\n    let cachedOptions = response.content.map((d) => ({\r\n        value: d.id,\r\n        label: d.person.name,\r\n        master: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass Dashboard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            masters: undefined,\r\n            all: undefined,\r\n            start: moment().startOf('month').toDate(),\r\n            end: moment().endOf('month').toDate(),\r\n            selectMasterFio: undefined,\r\n            data: [],\r\n            columns: [{\r\n                dataField: 'day',\r\n                text: 'Дата'\r\n            }],\r\n            pageSize: 30,\r\n            reportType: undefined,\r\n            report: 0\r\n        };\r\n        this.handleChangeStartDate = this.handleChangeStartDate.bind(this);\r\n        this.handleChangeEndDate = this.handleChangeEndDate.bind(this);\r\n\r\n        getStatisticMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'), this.state.report).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                pageSize: data.data.length + 1\r\n            });\r\n        });\r\n    }\r\n\r\n    handleChangeStartDate = (newValue) => {\r\n        getStatisticMastersReport(moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'), this.state.report).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                start: newValue,\r\n                pageSize: data.data.length + 1\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeEndDate = (newValue) => {\r\n        getStatisticMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(newValue)).set({hour:23,minute:59,second:59,millisecond:0}).format('YYYY-MM-DD HH:mm:ss'),\r\n            this.state.report).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                end: newValue,\r\n                pageSize: data.data.length + 1\r\n            });\r\n        });\r\n    };\r\n\r\n    export = () => {\r\n        getMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    };\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        getStatisticMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'), this.state.report, newValue.master).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                pageSize: data.data.length + 1,\r\n                selectMaster: newValue.master,\r\n                selectMasterFio: {\r\n                    value: newValue.value,\r\n                    label: newValue.master.person.name,\r\n                    master: newValue.master\r\n                }\r\n            });\r\n        });\r\n    };\r\n\r\n    handleChangeReport = (newValue) => {\r\n        getStatisticMastersReport(moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'), newValue.value, this.state.selectMaster).then(data => {\r\n            this.setState({\r\n                columns: data.columns,\r\n                data: data.data,\r\n                pageSize: data.data.length + 1,\r\n                reportType: newValue,\r\n                report: newValue.value\r\n            });\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-1 title-margin-date\">\r\n                            c\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.start}\r\n                                onDayChange={this.handleChangeStartDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-1 title-margin-date\">\r\n                            по\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.end}\r\n                                onDayChange={this.handleChangeEndDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"col-sm-1 title-margin-date\">\r\n                            Мастер:\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <AsyncPaginate\r\n                                value={this.state.selectMasterFio}\r\n                                loadOptions={getOptionMastersByFIO}\r\n                                onChange={this.handleInputMasterChange}\r\n                                placeholder={'Выберите мастера'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <div className=\"container\" >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-3 title-margin-date\">\r\n                                <button onClick = { this.export } className=\"btn btn-primary\">\r\n                                    Выгрузить сводный отчет\r\n                                </button>\r\n                            </div>\r\n                            <div className=\"col-sm-1  title-margin-date\">\r\n                                Отчет:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <Select\r\n                                    value={this.state.reportType}\r\n                                    options={reportOptions()}\r\n                                    placeholder={''}\r\n                                    onChange={this.handleChangeReport}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <hr/>\r\n                <div>\r\n                    <ReactTable\r\n                        data={this.state.data}\r\n                        columns={this.state.columns}\r\n                        showPagination={false}\r\n                        pageSize={this.state.pageSize}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport const userService = {\r\n    login,\r\n    logout\r\n};\r\n\r\nfunction login(login, password) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ login, password })\r\n    };\r\n\r\n    return fetch(getUrl() + `/api/login`, requestOptions)\r\n        .then(handleResponse)\r\n        .then(user => {\r\n            if (user) {\r\n                user.authdata = window.btoa(login + ':' + password);\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            }\r\n            return user;\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                logout();\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}","import React from 'react';\r\n\r\nimport {userService} from '../service/userService';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        userService.logout();\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            submitted: false,\r\n            loading: false,\r\n            error: ''\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value,\r\n            error: ''\r\n        });\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.setState({ submitted: true });\r\n        const { username, password } = this.state;\r\n        if (!(username && password)) {\r\n            return;\r\n        }\r\n        this.setState({ loading: true });\r\n        userService.login(username, password)\r\n            .then(\r\n                user => {\r\n                    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\r\n                    this.props.history.push(from);\r\n                },\r\n                error => {\r\n                    console.log(error);\r\n                    this.setState({ error: 'Логин или пароль введены неверно', loading: false });\r\n                }\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const { username, password, submitted, loading, error } = this.state;\r\n        return (\r\n            <div className=\"login-div\">\r\n                <form name=\"form\" onSubmit={this.handleSubmit} className=\"login-form\">\r\n                    <div className={'form-group' + (submitted && !username ? ' has-error' : '')}>\r\n                        <label htmlFor=\"username\">Логин</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"username\" value={username} onChange={this.handleChange} />\r\n                        {submitted && !username &&\r\n                        <div className=\"help-block\">Введите логин</div>\r\n                        }\r\n                    </div>\r\n                    <div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\r\n                        <label htmlFor=\"password\">Пароль</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={password} onChange={this.handleChange} />\r\n                        {submitted && !password &&\r\n                        <div className=\"help-block\">Введите пароль</div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary\" disabled={loading}>Войти</button>\r\n                    </div>\r\n                    {error &&\r\n                    <div className={'alert alert-danger'}>{error}</div>\r\n                    }\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\nimport {Redirect, Route} from 'react-router-dom';\n\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={props => (\n        localStorage.getItem('user')\n            ? <Component {...props} />\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n    )} />\n)","import styled from \"styled-components\";\r\n\r\nexport const AppContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Navigation = styled.div`\r\n  width: 220px;\r\n  flex-shrink: 0;\r\n  background: #fff;\r\n  border-right: 1px solid rgba(0, 0, 0, 0.125);\r\n  background-color: rgba(79, 88, 87, 0.54);\r\n`;\r\nexport const Body = styled.div`\r\n  padding: 12px;\r\n  height: 100%;\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 12px;\r\n  background-color: rgba(79, 88, 87, 0.54);\r\n`;\r\n","export default [\r\n    {\r\n        dataField: 'id',\r\n        text: 'ID'\r\n    },\r\n    {\r\n        dataField: 'description',\r\n        text: 'Название услуги'\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport '../react-day-picker.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 200\r\n    },\r\n    formControlDescription: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nclass ProcedureModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            service: {\r\n                description: ''\r\n            },\r\n            submit: false\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.select)\r\n            this.setState({\r\n                service: this.props.select\r\n            });\r\n    }\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.service.description) {\r\n            this.props.accept(this.state.service);\r\n            this.clear();\r\n        }\r\n    };\r\n\r\n    clear() {\r\n        this.setState({\r\n            service: {\r\n                description: ''\r\n            },\r\n            submit: false\r\n        });\r\n    }\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state.service || !this.state.service[field]);\r\n    }\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            service: {\r\n                ...this.state.service,\r\n                [name]: event.target.value\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div>\r\n                        <div className={classes.container}>\r\n                            <FormControl className={classes.formControlDescription} error={this.validate('description')} aria-describedby=\"description-error-text\">\r\n                                <InputLabel htmlFor=\"description\">Описание</InputLabel>\r\n                                <Input id=\"description\" value={this.state.service.description} onChange={this.handleChange('description')} />\r\n                                { this.validate('description') ? <FormHelperText id=\"description-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(ProcedureModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colProcedure from \"../data/colProcedure\";\r\nimport ServiceModal from \"../modal/ProcedureModal\";\r\nimport {createProcedure, getProcedures, updateProcedure} from \"../service/procedureService\";\r\n\r\nclass Procedures extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            openCreate: false,\r\n            openUpdate: false\r\n        };\r\n        this.createProcedure = this.createProcedure.bind(this);\r\n        this.updateProcedure = this.updateProcedure.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.handleOnSelect = this.handleOnSelect.bind(this);\r\n        getProcedures().then(data => {\r\n            this.setState({\r\n                data: data\r\n            });\r\n        });\r\n    }\r\n\r\n    createProcedure(entity) {\r\n        createProcedure(entity).then(() => {\r\n            getProcedures().then(data => {\r\n                this.setState({\r\n                    openCreate: false,\r\n                    data: data\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    updateProcedure(entity) {\r\n        updateProcedure(entity).then(() => {\r\n            getProcedures().then(data => {\r\n                this.setState({\r\n                    openUpdate: false,\r\n                    data: data,\r\n                    select: entity\r\n                });\r\n            });\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false\r\n        });\r\n    };\r\n\r\n    onOpenUpdateModal () {\r\n        this.setState({\r\n            openUpdate: true\r\n        });\r\n    };\r\n\r\n    handleOnSelect = (row) => {\r\n        this.setState({\r\n            select : row\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const selectRow = {\r\n            mode: 'radio',\r\n            clickToSelect: true,\r\n            hideSelectColumn: true,\r\n            bgColor: '#00BFFF',\r\n            onSelect: this.handleOnSelect,\r\n        };\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"button-group\">\r\n                    <button onClick = { this.onOpenCreateModal } className=\"btn btn-primary\">\r\n                        Добавить новую услугу\r\n                    </button>\r\n                    { this.state.select ? <button onClick = { this.onOpenUpdateModal } className=\"btn btn-primary\">\r\n                        Редактировать услугу\r\n                    </button> : null }\r\n                </div>\r\n                {this.state.data ? <BootstrapTable\r\n                    keyField=\"id\"\r\n                    selectRow={ selectRow }\r\n                    data={this.state.data}\r\n                    columns={colProcedure}\r\n                />: null}\r\n                <ServiceModal accept={this.createProcedure}\r\n                              open={this.state.openCreate}\r\n                              close={this.onCloseCreateModal} />\r\n                {this.state.openUpdate ? <ServiceModal accept={this.updateProcedure}\r\n                                                       open={this.state.openUpdate}\r\n                                                       select={this.state.select}\r\n                                                       close={this.onCloseUpdateModal} /> : null }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Procedures;\r\n","import React from \"react\";\r\n\r\nfunction  maxLength(cell) {\r\n    let max = cell !== 0 ? cell : \"более\";\r\n    return (\r\n        <span>{max}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'minLength',\r\n        text: 'Минимальная длина'\r\n    },\r\n    {\r\n        dataField: 'maxLength',\r\n        text: 'Максимальная длина',\r\n        formatter: maxLength\r\n    },\r\n    {\r\n        dataField: 'price',\r\n        text: 'Стоимость за грамм'\r\n    }\r\n]","import {typeHairFormatter, typeMasterFormatter} from \"../data/formatter\";\r\n\r\nimport React from \"react\";\r\n\r\nfunction typeMaster(cell) {\r\n    return (\r\n        <span>{typeMasterFormatter(cell)}</span>\r\n    );\r\n}\r\n\r\nfunction typeHair(cell) {\r\n    return (\r\n        <span>{typeHairFormatter(cell)}</span>\r\n    );\r\n}\r\n\r\nexport default [\r\n    {\r\n        dataField: 'price',\r\n        text: 'Стоимсоть за прядь'\r\n    },\r\n    {\r\n        dataField: 'masterType',\r\n        text: 'Категория мастера',\r\n        formatter: typeMaster\r\n    },\r\n    {\r\n        dataField: 'hairType',\r\n        text: 'Тип работ',\r\n        formatter: typeHair\r\n    }\r\n]","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport {getAllHairCategories, getAllHairs} from \"../service/hairService\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport colHair from \"../data/colHair\";\r\nimport colHairCategory from \"../data/colHairCategory\";\r\n\r\nclass Directory extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hairsCategory: [],\r\n            hairs: []\r\n        };\r\n        getAllHairCategories().then(data => {\r\n            this.setState({\r\n                hairsCategory: data\r\n            })\r\n        });\r\n        getAllHairs().then(data => {\r\n            this.setState({\r\n                hairs: data\r\n            })\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-div\">\r\n                <h4>\r\n                    Прайс стоимсоти услуг мастеров:\r\n                </h4>\r\n                <BootstrapTable\r\n                    keyField=\"id\"\r\n                    data={this.state.hairsCategory}\r\n                    columns={colHairCategory}\r\n                />\r\n                <hr/>\r\n                <h4>\r\n                    Прайс стоимости волос:\r\n                </h4>\r\n                <BootstrapTable\r\n                    keyField=\"id\"\r\n                    data={this.state.hairs}\r\n                    columns={colHair}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Directory;\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getSales(params) {\r\n    return fetch(getUrl() + \"/api/sales?page=\" + params.page\r\n        + \"&size=\" + params.size)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function updateSale(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createSale(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/sale\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_SALES} from \"../constants/saleConstants\";\r\nimport {getSales} from \"../service/saleService\";\r\n\r\nexport const getSalesAction = (params) => dispatch => {\r\n    getSales(params).then(sales => {\r\n        dispatch({\r\n            type: GET_SALES,\r\n            payload: sales\r\n        })\r\n    });\r\n};","export const GET_SALES = \"GET_SALES\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getProducts, getProductsByDescription} from \"../service/productService\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {createSale, updateSale} from \"../service/saleService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionExpensesByDescription(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getProducts();\r\n    else response = await getProductsByDescription(search);\r\n    let cachedOptions = response.map((d) => ({\r\n        value: d.id,\r\n        label: d.description,\r\n        product: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass SaleModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputProductChange = this.handleInputProductChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeCountProduct = this.handleChangeCountProduct.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                id: this.props.update.id,\r\n                date: this.props.update.date ? moment.unix(this.props.update.date).toDate() : new Date(),\r\n                countProduct: this.props.update.countProduct,\r\n                selectProduct: this.props.update.product,\r\n                cost: this.props.update.cost,\r\n                selectProductByDescription: {\r\n                    value: this.props.update.product.id,\r\n                    label: this.props.update.product.description,\r\n                    product: this.props.update.product\r\n                },\r\n                error: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.selectProduct\r\n            && this.state.countProduct>0\r\n            && this.state.date) {\r\n            let sale = {\r\n                id: this.state.id,\r\n                date: this.state.date,\r\n                product: this.state.selectProduct,\r\n                cost: this.state.cost,\r\n                countProduct: this.state.countProduct\r\n            };\r\n            if (this.props.isCreate) this.createSale(sale);\r\n            else this.updateSale(sale);\r\n        }\r\n    };\r\n\r\n    updateSale(entity) {\r\n        updateSale(entity).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    createSale(entity) {\r\n        createSale(entity).then(resp => {\r\n            if (resp.status === 400) {\r\n                this.setState({\r\n                    error: 'На складе отсутсвует введенное количество товара'\r\n                });\r\n                return false;\r\n            }\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    handleInputProductChange = (newValue) => {\r\n        this.setState({\r\n            selectProduct: newValue.product,\r\n            selectProductByDescription: {\r\n                value: newValue.value,\r\n                label: newValue.product.description,\r\n                product: newValue.product\r\n            },\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeCountProduct = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                countProduct: event.target.value,\r\n                error: undefined\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Товар:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectProductByDescription}\r\n                                    loadOptions={getOptionExpensesByDescription}\r\n                                    onChange={this.handleInputProductChange}\r\n                                    placeholder={'Выберите товар'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectProduct')} aria-describedby=\"selectProduct-error-text\">\r\n                                    { this.validate('selectProduct') ? <FormHelperText id=\"selectProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                Количество:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.countProduct}\r\n                                           onChange={this.handleChangeCountProduct} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Дата:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <DayPickerInput\r\n                                    placeholder={`Дата расхода`}\r\n                                    parseDate={parseDate}\r\n                                    value={this.state.date}\r\n                                    onDayChange={this.handleChangeDate}\r\n                                    formatDate={formatDate}\r\n                                    dayPickerProps={{\r\n                                        locale: 'ru',\r\n                                        localeUtils: MomentLocaleUtils,\r\n                                    }}/>\r\n                                <FormControl className={classes.formControl} error={this.validate('date')} aria-describedby=\"date-error-text\">\r\n                                    { this.validate('date') ? <FormHelperText id=\"date-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    { this.state.error ? <div className=\"row error_label\">\r\n                        {this.state.error}\r\n                    </div> : null}\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(SaleModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport {connect} from 'react-redux';\r\nimport {getSalesAction} from \"../actions/saleActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport {getProducts} from \"../service/productService\";\r\nimport moment from 'moment'\r\nimport SaleModal from \"../modal/SaleModal\";\r\n\r\nclass Sales extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            productOptions: {},\r\n            row: undefined,\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.accept = this.accept.bind(this);\r\n\r\n        this.props.saleActions(new PageParams(0, 10));\r\n\r\n        getProducts().then(products => {\r\n            let productOptions = {};\r\n            products.forEach(product => {\r\n                productOptions[product.id] = product.description;\r\n            });\r\n            this.setState({\r\n                productOptions: productOptions\r\n            })\r\n        });\r\n    }\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined,\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false,\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {sortField, sortOrder, filters, page, sizePerPage}) => {\r\n        this.props.saleActions(new PageParams(page - 1, sizePerPage, sortField, sortOrder, filters));\r\n    };\r\n\r\n    accept() {\r\n        this.props.saleActions(new PageParams(\r\n            this.props.sales.number,\r\n            this.props.sales.size\r\n        ));\r\n        this.setState({\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const colSale = [\r\n            {\r\n                dataField: 'date',\r\n                text: 'Дата продажи',\r\n                formatter: (cellContent) => {\r\n                    return (\r\n                        <div>\r\n                            {moment.unix(cellContent).format(\"DD.MM.YYYY\")}\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                dataField: 'product.description',\r\n                text: 'Товар'\r\n            },\r\n            {\r\n                dataField: 'countProduct',\r\n                text: 'Количество товара'\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"main-div\">\r\n                <TableRemote data={this.props.sales ? this.props.sales.content : []}\r\n                                                   page={this.props.sales ? this.props.sales.number + 1 : 1}\r\n                                                   columns={colSale}\r\n                                                   entity=\"продажа\"\r\n                                                   buttonCreateTitle='Создание новой продажи'\r\n                                                   buttonEditTitle='Изменение продажи'\r\n                                                   sizePerPage={this.props.sales ? this.props.sales.size : 0}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   totalSize={this.props.sales ? this.props.sales.totalElements : 0}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n\r\n                {this.state.row ? <SaleModal accept={this.accept}\r\n                             open={this.state.openUpdate}\r\n                             update={this.state.row}\r\n                             isCreate={false}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <SaleModal accept={this.accept}\r\n                             open={this.state.openCreate}\r\n                             isCreate={true}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    sales: state.saleReducer.sales\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        saleActions: bindActionCreators(getSalesAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sales);\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getIncomings(params, start, end) {\r\n    let sort = params.sortField ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterProduct= params.filters && params.filters['product.description'] ? \"&productId=\" + params.filters['product.description'].filterVal : '';\r\n    return fetch(getUrl() + \"/api/incomings?page=\" + params.page\r\n        + \"&size=\" + params.size + sort + filterProduct + \"&start=\" + start + \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function updateIncoming(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createIncoming(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/incoming\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","export const GET_INCOMINGS = \"GET_INCOMINGS\";","import {getIncomings} from \"../service/incomingService\";\r\nimport {GET_INCOMINGS} from \"../constants/incomingConstants\";\r\n\r\nexport const getIncomingAction = (params, start, end) => dispatch => {\r\n    getIncomings(params, start, end).then(incoming => {\r\n        dispatch({\r\n            type: GET_INCOMINGS,\r\n            payload: incoming\r\n        })\r\n    });\r\n};","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getProducts, getProductsByDescription} from \"../service/productService\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {createIncoming, updateIncoming} from \"../service/incomingService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionIncomingByDescription(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getProducts();\r\n    else response = await getProductsByDescription(search);\r\n    let cachedOptions = response.map((d) => ({\r\n        value: d.id,\r\n        label: d.description,\r\n        product: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass IncomingModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputProductChange = this.handleInputProductChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeCountProduct = this.handleChangeCountProduct.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                id: this.props.update.id,\r\n                date: this.props.update.date ? moment.unix(this.props.update.date).toDate() : new Date(),\r\n                countProduct: this.props.update.countProduct,\r\n                selectProduct: this.props.update.product,\r\n                selectProductByDescription: {\r\n                    value: this.props.update.product.id,\r\n                    label: this.props.update.product.description,\r\n                    product: this.props.update.product\r\n                },\r\n                error: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectProductByDescription: undefined,\r\n            countProduct: 1,\r\n            submit: false,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.selectProduct\r\n            && this.state.countProduct>0\r\n            && this.state.date) {\r\n            let incoming = {\r\n                id: this.state.id,\r\n                date: this.state.date,\r\n                product: this.state.selectProduct,\r\n                countProduct: this.state.countProduct\r\n            };\r\n            if (this.props.isCreate) this.createIncoming(incoming);\r\n            else this.updateIncoming(incoming);\r\n        }\r\n    };\r\n\r\n    updateIncoming(entity) {\r\n        updateIncoming(entity).then(resp => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    createIncoming(entity) {\r\n        createIncoming(entity).then(resp => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    handleInputProductChange = (newValue) => {\r\n        this.setState({\r\n            selectProduct: newValue.product,\r\n            selectProductByDescription: {\r\n                value: newValue.value,\r\n                label: newValue.product.description,\r\n                product: newValue.product\r\n            },\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeCountProduct = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                countProduct: event.target.value,\r\n                error: undefined\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Товар:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectProductByDescription}\r\n                                    loadOptions={getOptionIncomingByDescription}\r\n                                    onChange={this.handleInputProductChange}\r\n                                    placeholder={'Выберите товар'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectProduct')} aria-describedby=\"selectProduct-error-text\">\r\n                                    { this.validate('selectProduct') ? <FormHelperText id=\"selectProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                Количество:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.countProduct}\r\n                                           onChange={this.handleChangeCountProduct} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Дата:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <DayPickerInput\r\n                                placeholder={`Дата прихода`}\r\n                                parseDate={parseDate}\r\n                                value={this.state.date}\r\n                                onDayChange={this.handleChangeDate}\r\n                                formatDate={formatDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                }}/>\r\n                            <FormControl className={classes.formControl} error={this.validate('date')} aria-describedby=\"date-error-text\">\r\n                                { this.validate('date') ? <FormHelperText id=\"date-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    { this.state.error ? <div className=\"row error_label\">\r\n                        {this.state.error}\r\n                    </div> : null}\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(IncomingModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport {connect} from 'react-redux';\r\nimport {getIncomingAction} from \"../actions/incomingActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport IncomingModal from \"../modal/IncomingModal\";\r\nimport {selectFilter} from \"react-bootstrap-table2-filter\";\r\nimport {getProducts} from \"../service/productService\";\r\nimport moment from 'moment'\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport {getIncomingReport} from \"../service/reportService\";\r\n\r\nclass Incoming extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            sortField: '',\r\n            sortOrder: '',\r\n            productOptions: {},\r\n            filters: {},\r\n            row: undefined,\r\n            error: undefined,\r\n            start: moment().startOf('month').toDate(),\r\n            end: moment().endOf('month').toDate()\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.accept = this.accept.bind(this);\r\n        this.export = this.export.bind(this);\r\n\r\n        this.props.incomingActions(new PageParams(0, 10, \"date\", \"asc\"),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n\r\n        getProducts().then(products => {\r\n            let productOptions = {};\r\n            products.forEach(product => {\r\n                productOptions[product.id] = product.description;\r\n            });\r\n            this.setState({\r\n                productOptions: productOptions\r\n            })\r\n        });\r\n    }\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {sortField, sortOrder, filters, page, sizePerPage}) => {\r\n        this.setState({\r\n            sortField: sortField,\r\n            sortOrder: sortOrder,\r\n            filters: filters\r\n        });\r\n        this.props.incomingActions(new PageParams(page - 1, sizePerPage, sortField, sortOrder, filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    };\r\n\r\n    accept() {\r\n        this.props.incomingActions(new PageParams(\r\n            this.props.incoming.number,\r\n            this.props.incoming.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeStartDate = (newValue) => {\r\n        this.props.incomingActions(new PageParams(\r\n            this.props.incoming.number,\r\n            this.props.incoming.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            start: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeEndDate = (newValue) => {\r\n        this.props.expenseActions(new PageParams(\r\n            this.props.incoming.number,\r\n            this.props.incoming.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            end: newValue\r\n        });\r\n    };\r\n\r\n    export() {\r\n        getIncomingReport(new PageParams(\r\n            this.props.incoming.number,\r\n            this.props.incoming.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    }\r\n\r\n    render() {\r\n        const colIncoming = [\r\n            {\r\n                dataField: 'date',\r\n                text: 'Дата прихода',\r\n                sort: true,\r\n                formatter: (cellContent) => {\r\n                    return (\r\n                        <div>\r\n                            {moment.unix(cellContent).format(\"DD.MM.YYYY\")}\r\n                        </div>\r\n                    )\r\n                }\r\n            },\r\n            {\r\n                dataField: 'product.description',\r\n                text: '',\r\n                sort: true,\r\n                filter: selectFilter({\r\n                    placeholder: 'Товар',\r\n                    style: {\r\n                        backgroundColor: '#e4e4e1'\r\n                    },\r\n                    options: this.state.productOptions\r\n                })\r\n            },\r\n            {\r\n                dataField: 'countProduct',\r\n                text: 'Количество товара'\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            c\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.start}\r\n                                onDayChange={this.handleChangeStartDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            по\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.end}\r\n                                onDayChange={this.handleChangeEndDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TableRemote data={this.props.incoming ? this.props.incoming.content : []}\r\n                                                   page={this.props.incoming ? this.props.incoming.number + 1 : 1}\r\n                                                   columns={colIncoming}\r\n                                                   entity=\"приход\"\r\n                                                   buttonCreateTitle='Создание нового прихода'\r\n                                                   buttonEditTitle='Изменение прихода'\r\n                                                   sizePerPage={this.props.incoming ? this.props.incoming.size : 0}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   isExport={true}\r\n                                                   export={this.export}\r\n                                                   totalSize={this.props.incoming ? this.props.incoming.totalElements : 0}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n\r\n                {this.state.row ? <IncomingModal accept={this.accept}\r\n                             open={this.state.openUpdate}\r\n                             isCreate={false}\r\n                             update={this.state.row}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <IncomingModal accept={this.accept}\r\n                             open={this.state.openCreate} isCreate={true}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    incoming: state.incomingReducer.incoming\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        incomingActions: bindActionCreators(getIncomingAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Incoming);\r\n","import {getUrl} from \"./mainUrl\";\r\n\r\nexport function getAdditionalIncomes(params, start, end) {\r\n    let sort = params.sortField ? \"&sort=\" + params.sortField +  ',' + params.sortOrder : '';\r\n    let filterMaster= params.filters && params.filters['master.person.name'] ? \"&masterId=\" + params.filters['master.person.name'].filterVal : '';\r\n    return fetch(getUrl() + \"/api/additionalIncomes?page=\" + params.page\r\n        + \"&size=\" + params.size + sort + filterMaster + \"&start=\" + start + \"&end=\" + end)\r\n        .then(handleErrors)\r\n        .then(res => res.json())\r\n        .then(val => {\r\n            return val;\r\n        });\r\n}\r\n\r\nexport function updateAdditionalIncome(entity) {\r\n    return sendRequest(entity, \"PUT\");\r\n}\r\n\r\nexport function createAdditionalIncome(entity) {\r\n    return sendRequest(entity, \"POST\");\r\n}\r\n\r\nfunction sendRequest(entity, method) {\r\n\r\n    const options = {\r\n        method: method,\r\n        headers: new Headers({'content-type': 'application/json'}),\r\n        body: JSON.stringify(entity)\r\n    };\r\n\r\n    return fetch(getUrl() + \"/api/additionalIncome\", options)\r\n        .then(function(res){ return res })\r\n}\r\n\r\nfunction handleErrors(response) {\r\n    if (!response.ok) {\r\n        throw Error(response.statusText);\r\n    }\r\n    return response;\r\n}","import {GET_ADDITIONAL_INCOME} from \"../constants/additionalIncomeConstants\";\r\nimport {getAdditionalIncomes} from \"../service/additionalIncomeService\";\r\n\r\nexport const getAdditionalIncomesAction = (params, start, end) => dispatch => {\r\n    getAdditionalIncomes(params, start, end).then(incomes => {\r\n        dispatch({\r\n            type: GET_ADDITIONAL_INCOME,\r\n            payload: incomes\r\n        })\r\n    });\r\n};","export const GET_ADDITIONAL_INCOME = \"GET_ADDITIONAL_INCOME\";","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport Modal from 'react-responsive-modal';\r\nimport {withStyles} from '@material-ui/core/styles';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport AsyncPaginate from 'react-select-async-paginate';\r\nimport {getMasters, getMastersByFiO} from \"../service/masterService\";\r\nimport PageParams from \"../model/PageParams\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport moment from \"moment/moment\";\r\nimport {createAdditionalIncome, updateAdditionalIncome} from \"../service/additionalIncomeService\";\r\n\r\nconst styles = theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    formControl: {\r\n        marginLeft: theme.spacing.unit,\r\n        marginRight: theme.spacing.unit,\r\n        marginTop:16,\r\n        width: 400\r\n    }\r\n});\r\n\r\nasync function getOptionMastersByFIO(search, loadedOptions) {\r\n    let response;\r\n    if (!search) response = await getMasters(new PageParams(0, 100));\r\n    else response = await getMastersByFiO(search);\r\n    let cachedOptions = response.content.map((d) => ({\r\n        value: d.id,\r\n        label: d.person.name,\r\n        master: d\r\n    }));\r\n    return {\r\n        options: cachedOptions,\r\n        hasMore: true\r\n    };\r\n}\r\n\r\nclass AdditionalIncomeModal extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectProduct: undefined,\r\n            selectMaster: undefined,\r\n            selectMasterFio: undefined,\r\n            sum: 0,\r\n            submit: false,\r\n            error: undefined\r\n        };\r\n        this.refused = this.refused.bind(this);\r\n        this.accept = this.accept.bind(this);\r\n        this.handleInputMasterChange = this.handleInputMasterChange.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleChangeSum = this.handleChangeSum.bind(this);\r\n        this.handleChangeDate = this.handleChangeDate.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.update) {\r\n            this.setState({\r\n                id: this.props.update.id,\r\n                date: this.props.update.date ? moment.unix(this.props.update.date).toDate() : new Date(),\r\n                sum: this.props.update.sum,\r\n                selectMaster: this.props.update.master,\r\n                selectMasterFio: {\r\n                    value: this.props.update.master.id,\r\n                    label: this.props.update.master.person.name,\r\n                    master: this.props.update.master\r\n                },\r\n                error: undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.setState({\r\n            id: undefined,\r\n            date: new Date(),\r\n            selectMaster: undefined,\r\n            selectMasterFio: undefined,\r\n            sum: 0,\r\n            submit: false,\r\n            error: undefined\r\n        });\r\n    }\r\n\r\n\r\n    refused = () => {\r\n        this.props.close();\r\n        this.clear();\r\n    };\r\n\r\n    accept = () => {\r\n        this.setState({\r\n            submit: true\r\n        });\r\n        if (this.state.sum>0\r\n            && this.state.selectMaster\r\n            && this.state.date) {\r\n            let additionalIncome = {\r\n                id: this.state.id,\r\n                date: this.state.date,\r\n                master: this.state.selectMaster,\r\n                sum: this.state.sum\r\n            };\r\n            if (this.props.isCreate) this.createAdditionalIncome(additionalIncome);\r\n            else this.updateAdditionalIncome(additionalIncome);\r\n        }\r\n    };\r\n\r\n    updateAdditionalIncome(entity) {\r\n        updateAdditionalIncome(entity).then(resp => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    createAdditionalIncome(entity) {\r\n        createAdditionalIncome(entity).then(resp => {\r\n            this.props.accept();\r\n            this.clear();\r\n        });\r\n    };\r\n\r\n    handleInputMasterChange = (newValue) => {\r\n        this.setState({\r\n            selectMaster: newValue.master,\r\n            selectMasterFio: {\r\n                value: newValue.value,\r\n                label: newValue.master.person.name,\r\n                master: newValue.master\r\n            }\r\n        });\r\n    };\r\n\r\n    handleChangeSum = event => {\r\n        if (event.target.value > 0) {\r\n            this.setState({\r\n                sum: event.target.value,\r\n                error: undefined\r\n            });\r\n        }\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    };\r\n\r\n    handleChangeDate = (newValue) => {\r\n        this.setState({\r\n            date: newValue\r\n        });\r\n    };\r\n\r\n    validate(field) {\r\n        if (!this.state.submit)\r\n            return false;\r\n        return (!this.state || !this.state[field]);\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <Modal open={this.props.open}\r\n                       closeOnOverlayClick={false}\r\n                       showCloseIcon={false}\r\n                       onClose={this.refused}\r\n                       closeOnEsc={false} center={false}>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-sm-2\">\r\n                                Мастер:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <AsyncPaginate\r\n                                    value={this.state.selectMasterFio}\r\n                                    loadOptions={getOptionMastersByFIO}\r\n                                    onChange={this.handleInputMasterChange}\r\n                                    placeholder={'Выберите мастера'}\r\n                                />\r\n                                <FormControl className={classes.formControl} error={this.validate('selectMaster')} aria-describedby=\"selectMaster-error-text\">\r\n                                    { this.validate('selectMaster') ? <FormHelperText id=\"selectMaster-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                            <div className=\"col-sm-2\">\r\n                                Сумма:\r\n                            </div>\r\n                            <div className=\"col-sm-4\">\r\n                                <TextField InputLabelProps={{ shrink: true }} value={this.state.sum}\r\n                                           onChange={this.handleChangeSum} type=\"number\"/>\r\n\r\n                                <FormControl className={classes.formControl} error={this.validate('countProduct')} aria-describedby=\"countProduct-error-text\">\r\n                                    { this.validate('countProduct') ? <FormHelperText id=\"countProduct-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                                </FormControl>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Дата:\r\n                        </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <DayPickerInput\r\n                                placeholder={`Дата расхода`}\r\n                                parseDate={parseDate}\r\n                                value={this.state.date}\r\n                                onDayChange={this.handleChangeDate}\r\n                                formatDate={formatDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils,\r\n                                }}/>\r\n                            <FormControl className={classes.formControl} error={this.validate('date')} aria-describedby=\"date-error-text\">\r\n                                { this.validate('date') ? <FormHelperText id=\"date-error-text\">Поле не может быть пустым</FormHelperText>: null }\r\n                            </FormControl>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    { this.state.error ? <div className=\"row error_label\">\r\n                        {this.state.error}\r\n                    </div> : null}\r\n                    <div className=\"button-group\">\r\n                        <button className=\"btn btn-primary\" onClick={this.accept}>\r\n                            Сохранить\r\n                        </button>\r\n                        <button className=\"btn btn-primary\" onClick={this.refused}>\r\n                            Отмена\r\n                        </button>\r\n                    </div>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AdditionalIncomeModal);\r\n","import React, {Component} from 'react';\r\nimport '../App.css';\r\nimport TableRemote from \"./remote/TableRemote\";\r\nimport {connect} from 'react-redux';\r\nimport {getAdditionalIncomesAction} from \"../actions/additionalIncomeActions\"\r\nimport {bindActionCreators} from 'redux'\r\nimport PageParams from '../model/PageParams'\r\nimport AdditionalIncomeModal from \"../modal/AdditionalIncomeModal\";\r\nimport {getAllMasters} from \"../service/masterService\";\r\nimport {selectFilter} from \"react-bootstrap-table2-filter\";\r\nimport moment from 'moment'\r\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\r\nimport MomentLocaleUtils, {formatDate, parseDate,} from 'react-day-picker/moment';\r\nimport {getAdditionalIncomingReport} from \"../service/reportService\";\r\n\r\nclass AdditionalIncome extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            sortField: '',\r\n            sortOrder: '',\r\n            masterOptions: {},\r\n            filters: {},\r\n            row: undefined,\r\n            error: undefined,\r\n            start: moment().startOf('month').toDate(),\r\n            end: moment().endOf('month').toDate()\r\n        };\r\n        this.handleTableChange = this.handleTableChange.bind(this);\r\n\r\n        this.onOpenUpdateModal = this.onOpenUpdateModal.bind(this);\r\n        this.onCloseUpdateModal = this.onCloseUpdateModal.bind(this);\r\n\r\n        this.onOpenCreateModal = this.onOpenCreateModal.bind(this);\r\n        this.onCloseCreateModal = this.onCloseCreateModal.bind(this);\r\n\r\n        this.accept = this.accept.bind(this);\r\n        this.export = this.export.bind(this);\r\n\r\n        this.props.additionalIncomesActions(new PageParams(0, 10, \"date\", \"asc\"),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n\r\n        getAllMasters().then(masters => {\r\n            let masterOptions = {};\r\n            masters.forEach(master => {\r\n                masterOptions[master.id] = master.person.name;\r\n            });\r\n            this.setState({\r\n                masterOptions: masterOptions\r\n            })\r\n        });\r\n    }\r\n\r\n    onOpenUpdateModal (row) {\r\n        this.setState({\r\n            openUpdate: true,\r\n            row: row,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onOpenCreateModal () {\r\n        this.setState({\r\n            openCreate: true,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseUpdateModal = () => {\r\n        this.setState({\r\n            openUpdate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    onCloseCreateModal = () => {\r\n        this.setState({\r\n            openCreate: false,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleTableChange = (type, {sortField, sortOrder, filters, page, sizePerPage}) => {\r\n        this.setState({\r\n            sortField: sortField,\r\n            sortOrder: sortOrder,\r\n            filters: filters\r\n        });\r\n        this.props.additionalIncomesActions(new PageParams(page - 1, sizePerPage, sortField, sortOrder, filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    };\r\n\r\n    accept() {\r\n        this.props.additionalIncomesActions(new PageParams(\r\n            this.props.incomes.number,\r\n            this.props.incomes.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            openUpdate: false,\r\n            openCreate: false,\r\n            row: undefined,\r\n            error: undefined\r\n        });\r\n    };\r\n\r\n    handleChangeStartDate = (newValue) => {\r\n        this.props.additionalIncomesActions(new PageParams(\r\n            this.props.incomes.number,\r\n            this.props.incomes.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            start: newValue\r\n        });\r\n    };\r\n\r\n    handleChangeEndDate = (newValue) => {\r\n        this.props.additionalIncomesActions(new PageParams(\r\n            this.props.incomes.number,\r\n            this.props.incomes.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(newValue)).format('YYYY-MM-DD HH:mm:ss'));\r\n        this.setState({\r\n            end: newValue\r\n        });\r\n    };\r\n\r\n    export() {\r\n        getAdditionalIncomingReport(new PageParams(\r\n            this.props.incomes.number,\r\n            this.props.incomes.size,\r\n            this.state.sortField,\r\n            this.state.sortOrder,\r\n            this.state.filters),\r\n            moment(new Date(this.state.start)).format('YYYY-MM-DD HH:mm:ss'),\r\n            moment(new Date(this.state.end)).format('YYYY-MM-DD HH:mm:ss'));\r\n    }\r\n\r\n    render() {\r\n        const colAdditionalIncome = [\r\n            {\r\n                dataField: 'date',\r\n                text: 'Дата',\r\n                sort: true,\r\n                formatter: (cellContent) => {\r\n                    return (\r\n                        <div>\r\n                            {moment.unix(cellContent).format(\"DD.MM.YYYY\")}\r\n                        </div>\r\n                    )\r\n                }\r\n            },{\r\n                dataField: 'master.person.name',\r\n                text: '',\r\n                sort: true,\r\n                filter: selectFilter({\r\n                    placeholder: 'Мастер',\r\n                    style: {\r\n                        backgroundColor: '#e4e4e1'\r\n                    },\r\n                    options: this.state.masterOptions\r\n                })\r\n            },\r\n            {\r\n                dataField: 'sum',\r\n                text: 'Сумма'\r\n            }\r\n        ];\r\n        return (\r\n            <div className=\"main-div\">\r\n                <div className=\"container\" >\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            c\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.start}\r\n                                onDayChange={this.handleChangeStartDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <div className=\"col-sm-2 title-margin-date\">\r\n                            по\r\n                        </div>\r\n                        <div className=\"col-sm\">\r\n                            <DayPickerInput\r\n                                placeholder={``}\r\n                                parseDate={parseDate}\r\n                                formatDate={formatDate}\r\n                                value={this.state.end}\r\n                                onDayChange={this.handleChangeEndDate}\r\n                                dayPickerProps={{\r\n                                    locale: 'ru',\r\n                                    localeUtils: MomentLocaleUtils\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <TableRemote data={this.props.incomes ? this.props.incomes.content : []}\r\n                                                   page={this.props.incomes ? this.props.incomes.number + 1 : 1}\r\n                                                   columns={colAdditionalIncome}\r\n                                                   entity=\"заработок\"\r\n                                                   buttonCreateTitle='Создание новой записи'\r\n                                                   buttonEditTitle='Изменение записи'\r\n                                                   sizePerPage={this.props.incomes ? this.props.incomes.size : 0}\r\n                                                   update={this.onOpenUpdateModal}\r\n                                                   create={this.onOpenCreateModal}\r\n                                                   isExport={true}\r\n                                                   export={this.export}\r\n                                                   totalSize={this.props.incomes ? this.props.incomes.totalElements : 0}\r\n                                                   onTableChange={this.handleTableChange}/>\r\n\r\n                {this.state.row ? <AdditionalIncomeModal accept={this.accept}\r\n                             open={this.state.openUpdate}\r\n                             isCreate={false}\r\n                             update={this.state.row}\r\n                             close={this.onCloseUpdateModal} />: null}\r\n\r\n                <AdditionalIncomeModal accept={this.accept}\r\n                             open={this.state.openCreate} isCreate={true}\r\n                             close={this.onCloseCreateModal} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    incomes: state.additionalIncomeReducer.incomes\r\n});\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        additionalIncomesActions: bindActionCreators(getAdditionalIncomesAction, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdditionalIncome);\r\n","import React, {Component} from 'react';\r\nimport {MemoryRouter as Router, Route} from 'react-router-dom';\r\nimport './App.css';\r\nimport Clients from './components/Clients';\r\nimport Masters from './components/Masters';\r\nimport Timetable from \"./components/TimeTable\";\r\nimport Products from \"./components/Products\";\r\nimport Expenses from \"./components/Expenses\";\r\nimport Balance from \"./components/Balance\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport LoginPage from \"./components/LoginPage\";\r\nimport {PrivateRoute} from './route/PrivateRoute';\r\nimport Calendar from 'react-calendar';\r\nimport SideNav, {NavIcon, NavItem, NavText} from '@trendmicro/react-sidenav';\r\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\r\nimport {Title} from \"./model/containers\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport logo from './logo.jpg';\r\nimport Procedures from \"./components/Procedures\";\r\nimport Directory from \"./components/Directory\";\r\nimport Sales from \"./components/Sales\";\r\nimport moment from \"moment/moment\";\r\nimport Incoming from \"./components/Incoming\";\r\nimport AdditionalIncome from \"./components/AdditionalIncome\";\r\n\r\nclass App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedPath: ''\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Route render={({location, history}) => (\r\n                    <React.Fragment>\r\n                        {localStorage.getItem('user') ? <SideNav defaultExpanded={true}\r\n                            onSelect={(selected) => {\r\n                                if (selected === 'logout') {\r\n                                    localStorage.clear();\r\n                                    window.location.reload();\r\n                                }\r\n                                const to = '/' + selected;\r\n                                if (location.pathname !== to) {\r\n                                    history.push(to);\r\n                                }\r\n                            }}>\r\n                            <SideNav.Nav defaultSelected=\"\">\r\n                                <Title><img src={logo} className='logo-image'/><span className='logo-span'>Укротители волос</span></Title>\r\n                                <Calendar onChange={date => history.push(\"/?date=\" + moment(date).format('YYYY-MM-DD HH:mm:ss'))}/>\r\n                                <NavItem eventKey=\"\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-home\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        График\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"masters\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-user\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Мастера\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"clients\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-users\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Клиенты\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"products\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-product-hunt\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Аксессуары\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"balance\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-balance-scale\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Остатки\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"incoming\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-plus-circle\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Приход\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"expenses\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-minus-circle\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Расход\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"sales\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-shopping-cart\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Продажи\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"additionalIncomes\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-user\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Доп. заработок\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"procedures\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-fw fa-cut\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Услуги\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"directory\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-book fa-fw\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Справочники\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"dashboard\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-bar-chart-o fa-fw\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Статистика\r\n                                    </NavText>\r\n                                </NavItem>\r\n                                <NavItem eventKey=\"logout\">\r\n                                    <NavIcon>\r\n                                        <i className=\"fa fa-sign-out\" style={{fontSize: '1.75em'}}/>\r\n                                    </NavIcon>\r\n                                    <NavText>\r\n                                        Выход\r\n                                    </NavText>\r\n                                </NavItem>\r\n                            </SideNav.Nav>\r\n                        </SideNav> : null}\r\n                        <main>\r\n                            <Route path=\"/login\" component={LoginPage}/>\r\n                            <PrivateRoute exact path='/' component={Timetable}/>\r\n                            <PrivateRoute path=\"/masters\" component={Masters}/>\r\n                            <PrivateRoute path=\"/clients\" component={Clients}/>\r\n                            <PrivateRoute path=\"/products\" component={Products}/>\r\n                            <PrivateRoute path=\"/balance\" component={Balance}/>\r\n                            <PrivateRoute path=\"/expenses\" component={Expenses}/>\r\n                            <PrivateRoute path=\"/incoming\" component={Incoming}/>\r\n                            <PrivateRoute path=\"/sales\" component={Sales}/>\r\n                            <PrivateRoute path=\"/additionalIncomes\" component={AdditionalIncome}/>\r\n                            <PrivateRoute path=\"/procedures\" component={Procedures}/>\r\n                            <PrivateRoute path=\"/dashboard\" component={Dashboard}/>\r\n                            <PrivateRoute path=\"/directory\" component={Directory}/>\r\n                        </main>\r\n                    </React.Fragment>\r\n                )}\r\n                />\r\n            </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {combineReducers} from 'redux';\r\nimport masterReducer from './masterReducer';\r\nimport clientReducer from './clientReducer';\r\nimport timeSlotReducer from './timeSlotReducer';\r\nimport expenseReducer from './expenseReducer';\r\nimport saleReducer from './saleReducer';\r\nimport incomingReducer from './incomingReducer';\r\nimport additionalIncomeReducer from './additionalIncomeReducer';\r\n\r\nexport default combineReducers({\r\n    masterReducer,\r\n    clientReducer,\r\n    timeSlotReducer,\r\n    expenseReducer,\r\n    saleReducer,\r\n    incomingReducer,\r\n    additionalIncomeReducer\r\n});","import {GET_ALL_MASTERS, GET_MASTERS} from \"../constants/masterConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_MASTERS:\n            return { ...state, masters:action.payload };\n        case GET_ALL_MASTERS:\n            return { ...state, allMasters:action.payload };\n        default:\n            return state\n    }\n}","import {GET_CLIENTS} from \"../constants/clientConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_CLIENTS:\n            return { ...state, clients:action.payload };\n        default:\n            return state\n    }\n}","import {GET_TIME_SLOTS} from \"../constants/timeSlotConstants\";\nimport moment from \"moment/moment\";\n\nexport default (state = {timeSlots:[], resources:[]}, action) => {\n    switch (action.type) {\n        case GET_TIME_SLOTS:\n            let evants = action.payload.map(timeSlot => {\n                let event = {\n                    id: timeSlot.id,\n                    resourceId: timeSlot.master.id,\n                    title: \"\\nМастер: \" + timeSlot.master.person.name\n                        + \" \\nКлиент: \" + timeSlot.client.person.name\n                        + \" \\nУслуга: \" + timeSlot.service.description\n                        + \" Цена: \" + timeSlot.price,\n                    timeSlot: timeSlot,\n                    start: moment.unix(timeSlot.startSlot).toDate(),\n                    end: moment.unix(timeSlot.endSlot).toDate()\n                };\n                return event;\n            });\n            let resources = action.payload.map(timeSlot => {\n                let resource = {\n                    id: timeSlot.master.id,\n                    title: timeSlot.master.person.name\n                };\n                return resource;\n            });\n            return {\n                ...state,\n                timeSlots:evants,\n                resources:resources\n            };\n        default:\n            return state\n    }\n}","import {GET_EXPENSES} from \"../constants/expenseConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_EXPENSES:\n            return { ...state, expenses:action.payload };\n        default:\n            return state\n    }\n}","import {GET_SALES} from \"../constants/saleConstants\";\r\n\r\nexport default (state = {}, action) => {\r\n    switch (action.type) {\r\n        case GET_SALES:\r\n            return { ...state, sales:action.payload };\r\n        default:\r\n            return state\r\n    }\r\n}","import {GET_INCOMINGS} from \"../constants/incomingConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_INCOMINGS:\n            return { ...state, incoming:action.payload };\n        default:\n            return state\n    }\n}","import {GET_ADDITIONAL_INCOME} from \"../constants/additionalIncomeConstants\";\n\nexport default (state = {}, action) => {\n    switch (action.type) {\n        case GET_ADDITIONAL_INCOME:\n            return { ...state, incomes:action.payload };\n        default:\n            return state\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport configureStore from './store';\nimport {MemoryRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducer/rootReducer';\nexport default function configureStore() {\n    return createStore(\n        rootReducer,\n        applyMiddleware(thunk)\n    );\n}"],"sourceRoot":""}